// Code generated by ogen, DO NOT EDIT.

package oas

import (
	"bytes"
	"context"
	"errors"
	"fmt"
	"io"
	"math"
	"net"
	"net/http"
	"net/url"
	"sort"
	"strconv"
	"strings"
	"time"

	"github.com/go-chi/chi/v5"
	"github.com/google/uuid"
	"github.com/ogen-go/ogen/conv"
	ht "github.com/ogen-go/ogen/http"
	"github.com/ogen-go/ogen/json"
	"github.com/ogen-go/ogen/uri"
	"github.com/ogen-go/ogen/validate"
)

// No-op definition for keeping imports.
var (
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = sort.Ints
	_ = chi.Context{}
	_ = http.MethodGet
	_ = io.Copy
	_ = json.Marshal
	_ = bytes.NewReader
	_ = strconv.ParseInt
	_ = time.Time{}
	_ = conv.ToInt32
	_ = uuid.UUID{}
	_ = uri.PathEncoder{}
	_ = url.URL{}
	_ = math.Mod
	_ = validate.Int{}
	_ = ht.NewRequest
	_ = net.IP{}
)

func encodeAddStickerToSetRequest(req AddStickerToSet) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeAnswerCallbackQueryRequest(req AnswerCallbackQuery) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeAnswerInlineQueryRequest(req AnswerInlineQuery) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeAnswerPreCheckoutQueryRequest(req AnswerPreCheckoutQuery) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeAnswerShippingQueryRequest(req AnswerShippingQuery) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeBanChatMemberRequest(req BanChatMember) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeCopyMessageRequest(req CopyMessage) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeCreateChatInviteLinkRequest(req CreateChatInviteLink) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeCreateNewStickerSetRequest(req CreateNewStickerSet) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeDeleteChatPhotoRequest(req DeleteChatPhoto) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeDeleteChatStickerSetRequest(req DeleteChatStickerSet) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeDeleteMessageRequest(req DeleteMessage) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeDeleteMyCommandsRequest(req DeleteMyCommands) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeDeleteStickerFromSetRequest(req DeleteStickerFromSet) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeDeleteWebhookRequest(req DeleteWebhook) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeEditChatInviteLinkRequest(req EditChatInviteLink) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeEditMessageCaptionRequest(req EditMessageCaption) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeEditMessageLiveLocationRequest(req EditMessageLiveLocation) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeEditMessageMediaRequest(req EditMessageMedia) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeEditMessageReplyMarkupRequest(req EditMessageReplyMarkup) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeEditMessageTextRequest(req EditMessageText) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeExportChatInviteLinkRequest(req ExportChatInviteLink) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeForwardMessageRequest(req ForwardMessage) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeGetChatRequest(req GetChat) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeGetChatAdministratorsRequest(req GetChatAdministrators) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeGetChatMemberRequest(req GetChatMember) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeGetChatMemberCountRequest(req GetChatMemberCount) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeGetFileRequest(req GetFile) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeGetGameHighScoresRequest(req GetGameHighScores) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeGetMyCommandsRequest(req GetMyCommands) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeGetStickerSetRequest(req GetStickerSet) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeGetUpdatesRequest(req GetUpdates) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeGetUserProfilePhotosRequest(req GetUserProfilePhotos) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeLeaveChatRequest(req LeaveChat) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodePinChatMessageRequest(req PinChatMessage) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodePromoteChatMemberRequest(req PromoteChatMember) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeRestrictChatMemberRequest(req RestrictChatMember) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeRevokeChatInviteLinkRequest(req RevokeChatInviteLink) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendAnimationRequest(req SendAnimation) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendAudioRequest(req SendAudio) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendChatActionRequest(req SendChatAction) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendContactRequest(req SendContact) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendDiceRequest(req SendDice) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendDocumentRequest(req SendDocument) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendGameRequest(req SendGame) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendInvoiceRequest(req SendInvoice) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendLocationRequest(req SendLocation) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendMediaGroupRequest(req SendMediaGroup) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendMessageRequest(req SendMessage) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendPhotoRequest(req SendPhoto) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendPollRequest(req SendPoll) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendStickerRequest(req SendSticker) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendVenueRequest(req SendVenue) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendVideoRequest(req SendVideo) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendVideoNoteRequest(req SendVideoNote) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSendVoiceRequest(req SendVoice) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSetChatAdministratorCustomTitleRequest(req SetChatAdministratorCustomTitle) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSetChatDescriptionRequest(req SetChatDescription) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSetChatPermissionsRequest(req SetChatPermissions) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSetChatPhotoRequest(req SetChatPhoto) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSetChatStickerSetRequest(req SetChatStickerSet) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSetChatTitleRequest(req SetChatTitle) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSetGameScoreRequest(req SetGameScore) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSetMyCommandsRequest(req SetMyCommands) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSetPassportDataErrorsRequest(req SetPassportDataErrors) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSetStickerPositionInSetRequest(req SetStickerPositionInSet) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSetStickerSetThumbRequest(req SetStickerSetThumb) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeSetWebhookRequest(req SetWebhook) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeStopMessageLiveLocationRequest(req StopMessageLiveLocation) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeStopPollRequest(req StopPoll) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeUnbanChatMemberRequest(req UnbanChatMember) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeUnpinAllChatMessagesRequest(req UnpinAllChatMessages) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeUnpinChatMessageRequest(req UnpinChatMessage) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}

func encodeUploadStickerFileRequest(req UploadStickerFile) (data []byte, contentType string, err error) {
	return json.Encode(req), "application/json", nil
}
