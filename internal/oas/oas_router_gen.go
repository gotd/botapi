// Code generated by ogen, DO NOT EDIT.

package oas

import (
	"net/http"
	"net/url"
	"strings"

	"github.com/ogen-go/ogen/uri"
)

// ServeHTTP serves http request as defined by OpenAPI v3 specification,
// calling handler that matches the path or returning not found error.
func (s *Server) ServeHTTP(w http.ResponseWriter, r *http.Request) {
	elem := r.URL.Path
	if rawPath := r.URL.RawPath; rawPath != "" {
		if normalized, ok := uri.NormalizeEscapedPath(rawPath); ok {
			elem = normalized
		}
	}
	if prefix := s.cfg.Prefix; len(prefix) > 0 {
		if strings.HasPrefix(elem, prefix) {
			// Cut prefix from the path.
			elem = strings.TrimPrefix(elem, prefix)
		} else {
			// Prefix doesn't match.
			s.notFound(w, r)
			return
		}
	}
	if len(elem) == 0 {
		s.notFound(w, r)
		return
	}

	// Static code generated router with unwrapped path search.
	switch {
	default:
		if len(elem) == 0 {
			break
		}
		switch elem[0] {
		case '/': // Prefix: "/"
			if l := len("/"); len(elem) >= l && elem[0:l] == "/" {
				elem = elem[l:]
			} else {
				break
			}

			if len(elem) == 0 {
				break
			}
			switch elem[0] {
			case 'a': // Prefix: "a"
				if l := len("a"); len(elem) >= l && elem[0:l] == "a" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					break
				}
				switch elem[0] {
				case 'd': // Prefix: "ddStickerToSet"
					if l := len("ddStickerToSet"); len(elem) >= l && elem[0:l] == "ddStickerToSet" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						// Leaf node.
						switch r.Method {
						case "POST":
							s.handleAddStickerToSetRequest([0]string{}, w, r)
						default:
							s.notAllowed(w, r, "POST")
						}

						return
					}
				case 'n': // Prefix: "nswer"
					if l := len("nswer"); len(elem) >= l && elem[0:l] == "nswer" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						break
					}
					switch elem[0] {
					case 'C': // Prefix: "CallbackQuery"
						if l := len("CallbackQuery"); len(elem) >= l && elem[0:l] == "CallbackQuery" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							// Leaf node.
							switch r.Method {
							case "POST":
								s.handleAnswerCallbackQueryRequest([0]string{}, w, r)
							default:
								s.notAllowed(w, r, "POST")
							}

							return
						}
					case 'I': // Prefix: "InlineQuery"
						if l := len("InlineQuery"); len(elem) >= l && elem[0:l] == "InlineQuery" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							// Leaf node.
							switch r.Method {
							case "POST":
								s.handleAnswerInlineQueryRequest([0]string{}, w, r)
							default:
								s.notAllowed(w, r, "POST")
							}

							return
						}
					case 'P': // Prefix: "PreCheckoutQuery"
						if l := len("PreCheckoutQuery"); len(elem) >= l && elem[0:l] == "PreCheckoutQuery" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							// Leaf node.
							switch r.Method {
							case "POST":
								s.handleAnswerPreCheckoutQueryRequest([0]string{}, w, r)
							default:
								s.notAllowed(w, r, "POST")
							}

							return
						}
					case 'S': // Prefix: "ShippingQuery"
						if l := len("ShippingQuery"); len(elem) >= l && elem[0:l] == "ShippingQuery" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							// Leaf node.
							switch r.Method {
							case "POST":
								s.handleAnswerShippingQueryRequest([0]string{}, w, r)
							default:
								s.notAllowed(w, r, "POST")
							}

							return
						}
					case 'W': // Prefix: "WebAppQuery"
						if l := len("WebAppQuery"); len(elem) >= l && elem[0:l] == "WebAppQuery" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							// Leaf node.
							switch r.Method {
							case "POST":
								s.handleAnswerWebAppQueryRequest([0]string{}, w, r)
							default:
								s.notAllowed(w, r, "POST")
							}

							return
						}
					}
				case 'p': // Prefix: "pproveChatJoinRequest"
					if l := len("pproveChatJoinRequest"); len(elem) >= l && elem[0:l] == "pproveChatJoinRequest" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						// Leaf node.
						switch r.Method {
						case "POST":
							s.handleApproveChatJoinRequestRequest([0]string{}, w, r)
						default:
							s.notAllowed(w, r, "POST")
						}

						return
					}
				}
			case 'b': // Prefix: "banChat"
				if l := len("banChat"); len(elem) >= l && elem[0:l] == "banChat" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					break
				}
				switch elem[0] {
				case 'M': // Prefix: "Member"
					if l := len("Member"); len(elem) >= l && elem[0:l] == "Member" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						// Leaf node.
						switch r.Method {
						case "POST":
							s.handleBanChatMemberRequest([0]string{}, w, r)
						default:
							s.notAllowed(w, r, "POST")
						}

						return
					}
				case 'S': // Prefix: "SenderChat"
					if l := len("SenderChat"); len(elem) >= l && elem[0:l] == "SenderChat" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						// Leaf node.
						switch r.Method {
						case "POST":
							s.handleBanChatSenderChatRequest([0]string{}, w, r)
						default:
							s.notAllowed(w, r, "POST")
						}

						return
					}
				}
			case 'c': // Prefix: "c"
				if l := len("c"); len(elem) >= l && elem[0:l] == "c" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					break
				}
				switch elem[0] {
				case 'l': // Prefix: "lose"
					if l := len("lose"); len(elem) >= l && elem[0:l] == "lose" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						switch r.Method {
						case "POST":
							s.handleCloseRequest([0]string{}, w, r)
						default:
							s.notAllowed(w, r, "POST")
						}

						return
					}
					switch elem[0] {
					case 'F': // Prefix: "ForumTopic"
						if l := len("ForumTopic"); len(elem) >= l && elem[0:l] == "ForumTopic" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							// Leaf node.
							switch r.Method {
							case "POST":
								s.handleCloseForumTopicRequest([0]string{}, w, r)
							default:
								s.notAllowed(w, r, "POST")
							}

							return
						}
					case 'G': // Prefix: "GeneralForumTopic"
						if l := len("GeneralForumTopic"); len(elem) >= l && elem[0:l] == "GeneralForumTopic" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							// Leaf node.
							switch r.Method {
							case "POST":
								s.handleCloseGeneralForumTopicRequest([0]string{}, w, r)
							default:
								s.notAllowed(w, r, "POST")
							}

							return
						}
					}
				case 'o': // Prefix: "opyMessage"
					if l := len("opyMessage"); len(elem) >= l && elem[0:l] == "opyMessage" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						// Leaf node.
						switch r.Method {
						case "POST":
							s.handleCopyMessageRequest([0]string{}, w, r)
						default:
							s.notAllowed(w, r, "POST")
						}

						return
					}
				case 'r': // Prefix: "reate"
					if l := len("reate"); len(elem) >= l && elem[0:l] == "reate" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						break
					}
					switch elem[0] {
					case 'C': // Prefix: "ChatInviteLink"
						if l := len("ChatInviteLink"); len(elem) >= l && elem[0:l] == "ChatInviteLink" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							// Leaf node.
							switch r.Method {
							case "POST":
								s.handleCreateChatInviteLinkRequest([0]string{}, w, r)
							default:
								s.notAllowed(w, r, "POST")
							}

							return
						}
					case 'F': // Prefix: "ForumTopic"
						if l := len("ForumTopic"); len(elem) >= l && elem[0:l] == "ForumTopic" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							// Leaf node.
							switch r.Method {
							case "POST":
								s.handleCreateForumTopicRequest([0]string{}, w, r)
							default:
								s.notAllowed(w, r, "POST")
							}

							return
						}
					case 'I': // Prefix: "InvoiceLink"
						if l := len("InvoiceLink"); len(elem) >= l && elem[0:l] == "InvoiceLink" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							// Leaf node.
							switch r.Method {
							case "POST":
								s.handleCreateInvoiceLinkRequest([0]string{}, w, r)
							default:
								s.notAllowed(w, r, "POST")
							}

							return
						}
					case 'N': // Prefix: "NewStickerSet"
						if l := len("NewStickerSet"); len(elem) >= l && elem[0:l] == "NewStickerSet" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							// Leaf node.
							switch r.Method {
							case "POST":
								s.handleCreateNewStickerSetRequest([0]string{}, w, r)
							default:
								s.notAllowed(w, r, "POST")
							}

							return
						}
					}
				}
			case 'd': // Prefix: "de"
				if l := len("de"); len(elem) >= l && elem[0:l] == "de" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					break
				}
				switch elem[0] {
				case 'c': // Prefix: "clineChatJoinRequest"
					if l := len("clineChatJoinRequest"); len(elem) >= l && elem[0:l] == "clineChatJoinRequest" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						// Leaf node.
						switch r.Method {
						case "POST":
							s.handleDeclineChatJoinRequestRequest([0]string{}, w, r)
						default:
							s.notAllowed(w, r, "POST")
						}

						return
					}
				case 'l': // Prefix: "lete"
					if l := len("lete"); len(elem) >= l && elem[0:l] == "lete" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						break
					}
					switch elem[0] {
					case 'C': // Prefix: "Chat"
						if l := len("Chat"); len(elem) >= l && elem[0:l] == "Chat" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							break
						}
						switch elem[0] {
						case 'P': // Prefix: "Photo"
							if l := len("Photo"); len(elem) >= l && elem[0:l] == "Photo" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf node.
								switch r.Method {
								case "POST":
									s.handleDeleteChatPhotoRequest([0]string{}, w, r)
								default:
									s.notAllowed(w, r, "POST")
								}

								return
							}
						case 'S': // Prefix: "StickerSet"
							if l := len("StickerSet"); len(elem) >= l && elem[0:l] == "StickerSet" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf node.
								switch r.Method {
								case "POST":
									s.handleDeleteChatStickerSetRequest([0]string{}, w, r)
								default:
									s.notAllowed(w, r, "POST")
								}

								return
							}
						}
					case 'F': // Prefix: "ForumTopic"
						if l := len("ForumTopic"); len(elem) >= l && elem[0:l] == "ForumTopic" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							// Leaf node.
							switch r.Method {
							case "POST":
								s.handleDeleteForumTopicRequest([0]string{}, w, r)
							default:
								s.notAllowed(w, r, "POST")
							}

							return
						}
					case 'M': // Prefix: "M"
						if l := len("M"); len(elem) >= l && elem[0:l] == "M" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							break
						}
						switch elem[0] {
						case 'e': // Prefix: "essage"
							if l := len("essage"); len(elem) >= l && elem[0:l] == "essage" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf node.
								switch r.Method {
								case "POST":
									s.handleDeleteMessageRequest([0]string{}, w, r)
								default:
									s.notAllowed(w, r, "POST")
								}

								return
							}
						case 'y': // Prefix: "yCommands"
							if l := len("yCommands"); len(elem) >= l && elem[0:l] == "yCommands" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf node.
								switch r.Method {
								case "POST":
									s.handleDeleteMyCommandsRequest([0]string{}, w, r)
								default:
									s.notAllowed(w, r, "POST")
								}

								return
							}
						}
					case 'S': // Prefix: "StickerFromSet"
						if l := len("StickerFromSet"); len(elem) >= l && elem[0:l] == "StickerFromSet" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							// Leaf node.
							switch r.Method {
							case "POST":
								s.handleDeleteStickerFromSetRequest([0]string{}, w, r)
							default:
								s.notAllowed(w, r, "POST")
							}

							return
						}
					case 'W': // Prefix: "Webhook"
						if l := len("Webhook"); len(elem) >= l && elem[0:l] == "Webhook" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							// Leaf node.
							switch r.Method {
							case "POST":
								s.handleDeleteWebhookRequest([0]string{}, w, r)
							default:
								s.notAllowed(w, r, "POST")
							}

							return
						}
					}
				}
			case 'e': // Prefix: "e"
				if l := len("e"); len(elem) >= l && elem[0:l] == "e" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					break
				}
				switch elem[0] {
				case 'd': // Prefix: "dit"
					if l := len("dit"); len(elem) >= l && elem[0:l] == "dit" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						break
					}
					switch elem[0] {
					case 'C': // Prefix: "ChatInviteLink"
						if l := len("ChatInviteLink"); len(elem) >= l && elem[0:l] == "ChatInviteLink" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							// Leaf node.
							switch r.Method {
							case "POST":
								s.handleEditChatInviteLinkRequest([0]string{}, w, r)
							default:
								s.notAllowed(w, r, "POST")
							}

							return
						}
					case 'F': // Prefix: "ForumTopic"
						if l := len("ForumTopic"); len(elem) >= l && elem[0:l] == "ForumTopic" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							// Leaf node.
							switch r.Method {
							case "POST":
								s.handleEditForumTopicRequest([0]string{}, w, r)
							default:
								s.notAllowed(w, r, "POST")
							}

							return
						}
					case 'G': // Prefix: "GeneralForumTopic"
						if l := len("GeneralForumTopic"); len(elem) >= l && elem[0:l] == "GeneralForumTopic" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							// Leaf node.
							switch r.Method {
							case "POST":
								s.handleEditGeneralForumTopicRequest([0]string{}, w, r)
							default:
								s.notAllowed(w, r, "POST")
							}

							return
						}
					case 'M': // Prefix: "Message"
						if l := len("Message"); len(elem) >= l && elem[0:l] == "Message" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							break
						}
						switch elem[0] {
						case 'C': // Prefix: "Caption"
							if l := len("Caption"); len(elem) >= l && elem[0:l] == "Caption" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf node.
								switch r.Method {
								case "POST":
									s.handleEditMessageCaptionRequest([0]string{}, w, r)
								default:
									s.notAllowed(w, r, "POST")
								}

								return
							}
						case 'L': // Prefix: "LiveLocation"
							if l := len("LiveLocation"); len(elem) >= l && elem[0:l] == "LiveLocation" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf node.
								switch r.Method {
								case "POST":
									s.handleEditMessageLiveLocationRequest([0]string{}, w, r)
								default:
									s.notAllowed(w, r, "POST")
								}

								return
							}
						case 'M': // Prefix: "Media"
							if l := len("Media"); len(elem) >= l && elem[0:l] == "Media" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf node.
								switch r.Method {
								case "POST":
									s.handleEditMessageMediaRequest([0]string{}, w, r)
								default:
									s.notAllowed(w, r, "POST")
								}

								return
							}
						case 'R': // Prefix: "ReplyMarkup"
							if l := len("ReplyMarkup"); len(elem) >= l && elem[0:l] == "ReplyMarkup" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf node.
								switch r.Method {
								case "POST":
									s.handleEditMessageReplyMarkupRequest([0]string{}, w, r)
								default:
									s.notAllowed(w, r, "POST")
								}

								return
							}
						case 'T': // Prefix: "Text"
							if l := len("Text"); len(elem) >= l && elem[0:l] == "Text" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf node.
								switch r.Method {
								case "POST":
									s.handleEditMessageTextRequest([0]string{}, w, r)
								default:
									s.notAllowed(w, r, "POST")
								}

								return
							}
						}
					}
				case 'x': // Prefix: "xportChatInviteLink"
					if l := len("xportChatInviteLink"); len(elem) >= l && elem[0:l] == "xportChatInviteLink" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						// Leaf node.
						switch r.Method {
						case "POST":
							s.handleExportChatInviteLinkRequest([0]string{}, w, r)
						default:
							s.notAllowed(w, r, "POST")
						}

						return
					}
				}
			case 'f': // Prefix: "forwardMessage"
				if l := len("forwardMessage"); len(elem) >= l && elem[0:l] == "forwardMessage" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					// Leaf node.
					switch r.Method {
					case "POST":
						s.handleForwardMessageRequest([0]string{}, w, r)
					default:
						s.notAllowed(w, r, "POST")
					}

					return
				}
			case 'g': // Prefix: "get"
				if l := len("get"); len(elem) >= l && elem[0:l] == "get" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					break
				}
				switch elem[0] {
				case 'C': // Prefix: "C"
					if l := len("C"); len(elem) >= l && elem[0:l] == "C" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						break
					}
					switch elem[0] {
					case 'h': // Prefix: "hat"
						if l := len("hat"); len(elem) >= l && elem[0:l] == "hat" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							switch r.Method {
							case "POST":
								s.handleGetChatRequest([0]string{}, w, r)
							default:
								s.notAllowed(w, r, "POST")
							}

							return
						}
						switch elem[0] {
						case 'A': // Prefix: "Administrators"
							if l := len("Administrators"); len(elem) >= l && elem[0:l] == "Administrators" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf node.
								switch r.Method {
								case "POST":
									s.handleGetChatAdministratorsRequest([0]string{}, w, r)
								default:
									s.notAllowed(w, r, "POST")
								}

								return
							}
						case 'M': // Prefix: "Me"
							if l := len("Me"); len(elem) >= l && elem[0:l] == "Me" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								break
							}
							switch elem[0] {
							case 'm': // Prefix: "mber"
								if l := len("mber"); len(elem) >= l && elem[0:l] == "mber" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									switch r.Method {
									case "POST":
										s.handleGetChatMemberRequest([0]string{}, w, r)
									default:
										s.notAllowed(w, r, "POST")
									}

									return
								}
								switch elem[0] {
								case 'C': // Prefix: "Count"
									if l := len("Count"); len(elem) >= l && elem[0:l] == "Count" {
										elem = elem[l:]
									} else {
										break
									}

									if len(elem) == 0 {
										// Leaf node.
										switch r.Method {
										case "POST":
											s.handleGetChatMemberCountRequest([0]string{}, w, r)
										default:
											s.notAllowed(w, r, "POST")
										}

										return
									}
								}
							case 'n': // Prefix: "nuButton"
								if l := len("nuButton"); len(elem) >= l && elem[0:l] == "nuButton" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf node.
									switch r.Method {
									case "POST":
										s.handleGetChatMenuButtonRequest([0]string{}, w, r)
									default:
										s.notAllowed(w, r, "POST")
									}

									return
								}
							}
						}
					case 'u': // Prefix: "ustomEmojiStickers"
						if l := len("ustomEmojiStickers"); len(elem) >= l && elem[0:l] == "ustomEmojiStickers" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							// Leaf node.
							switch r.Method {
							case "POST":
								s.handleGetCustomEmojiStickersRequest([0]string{}, w, r)
							default:
								s.notAllowed(w, r, "POST")
							}

							return
						}
					}
				case 'F': // Prefix: "F"
					if l := len("F"); len(elem) >= l && elem[0:l] == "F" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						break
					}
					switch elem[0] {
					case 'i': // Prefix: "ile"
						if l := len("ile"); len(elem) >= l && elem[0:l] == "ile" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							// Leaf node.
							switch r.Method {
							case "POST":
								s.handleGetFileRequest([0]string{}, w, r)
							default:
								s.notAllowed(w, r, "POST")
							}

							return
						}
					case 'o': // Prefix: "orumTopicIconStickers"
						if l := len("orumTopicIconStickers"); len(elem) >= l && elem[0:l] == "orumTopicIconStickers" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							// Leaf node.
							switch r.Method {
							case "POST":
								s.handleGetForumTopicIconStickersRequest([0]string{}, w, r)
							default:
								s.notAllowed(w, r, "POST")
							}

							return
						}
					}
				case 'G': // Prefix: "GameHighScores"
					if l := len("GameHighScores"); len(elem) >= l && elem[0:l] == "GameHighScores" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						// Leaf node.
						switch r.Method {
						case "POST":
							s.handleGetGameHighScoresRequest([0]string{}, w, r)
						default:
							s.notAllowed(w, r, "POST")
						}

						return
					}
				case 'M': // Prefix: "M"
					if l := len("M"); len(elem) >= l && elem[0:l] == "M" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						break
					}
					switch elem[0] {
					case 'e': // Prefix: "e"
						if l := len("e"); len(elem) >= l && elem[0:l] == "e" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							// Leaf node.
							switch r.Method {
							case "POST":
								s.handleGetMeRequest([0]string{}, w, r)
							default:
								s.notAllowed(w, r, "POST")
							}

							return
						}
					case 'y': // Prefix: "y"
						if l := len("y"); len(elem) >= l && elem[0:l] == "y" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							break
						}
						switch elem[0] {
						case 'C': // Prefix: "Commands"
							if l := len("Commands"); len(elem) >= l && elem[0:l] == "Commands" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf node.
								switch r.Method {
								case "POST":
									s.handleGetMyCommandsRequest([0]string{}, w, r)
								default:
									s.notAllowed(w, r, "POST")
								}

								return
							}
						case 'D': // Prefix: "DefaultAdministratorRights"
							if l := len("DefaultAdministratorRights"); len(elem) >= l && elem[0:l] == "DefaultAdministratorRights" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf node.
								switch r.Method {
								case "POST":
									s.handleGetMyDefaultAdministratorRightsRequest([0]string{}, w, r)
								default:
									s.notAllowed(w, r, "POST")
								}

								return
							}
						}
					}
				case 'S': // Prefix: "StickerSet"
					if l := len("StickerSet"); len(elem) >= l && elem[0:l] == "StickerSet" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						// Leaf node.
						switch r.Method {
						case "POST":
							s.handleGetStickerSetRequest([0]string{}, w, r)
						default:
							s.notAllowed(w, r, "POST")
						}

						return
					}
				case 'U': // Prefix: "U"
					if l := len("U"); len(elem) >= l && elem[0:l] == "U" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						break
					}
					switch elem[0] {
					case 'p': // Prefix: "pdates"
						if l := len("pdates"); len(elem) >= l && elem[0:l] == "pdates" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							// Leaf node.
							switch r.Method {
							case "POST":
								s.handleGetUpdatesRequest([0]string{}, w, r)
							default:
								s.notAllowed(w, r, "POST")
							}

							return
						}
					case 's': // Prefix: "serProfilePhotos"
						if l := len("serProfilePhotos"); len(elem) >= l && elem[0:l] == "serProfilePhotos" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							// Leaf node.
							switch r.Method {
							case "POST":
								s.handleGetUserProfilePhotosRequest([0]string{}, w, r)
							default:
								s.notAllowed(w, r, "POST")
							}

							return
						}
					}
				case 'W': // Prefix: "WebhookInfo"
					if l := len("WebhookInfo"); len(elem) >= l && elem[0:l] == "WebhookInfo" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						// Leaf node.
						switch r.Method {
						case "POST":
							s.handleGetWebhookInfoRequest([0]string{}, w, r)
						default:
							s.notAllowed(w, r, "POST")
						}

						return
					}
				}
			case 'h': // Prefix: "hideGeneralForumTopic"
				if l := len("hideGeneralForumTopic"); len(elem) >= l && elem[0:l] == "hideGeneralForumTopic" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					// Leaf node.
					switch r.Method {
					case "POST":
						s.handleHideGeneralForumTopicRequest([0]string{}, w, r)
					default:
						s.notAllowed(w, r, "POST")
					}

					return
				}
			case 'l': // Prefix: "l"
				if l := len("l"); len(elem) >= l && elem[0:l] == "l" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					break
				}
				switch elem[0] {
				case 'e': // Prefix: "eaveChat"
					if l := len("eaveChat"); len(elem) >= l && elem[0:l] == "eaveChat" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						// Leaf node.
						switch r.Method {
						case "POST":
							s.handleLeaveChatRequest([0]string{}, w, r)
						default:
							s.notAllowed(w, r, "POST")
						}

						return
					}
				case 'o': // Prefix: "ogOut"
					if l := len("ogOut"); len(elem) >= l && elem[0:l] == "ogOut" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						// Leaf node.
						switch r.Method {
						case "POST":
							s.handleLogOutRequest([0]string{}, w, r)
						default:
							s.notAllowed(w, r, "POST")
						}

						return
					}
				}
			case 'p': // Prefix: "p"
				if l := len("p"); len(elem) >= l && elem[0:l] == "p" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					break
				}
				switch elem[0] {
				case 'i': // Prefix: "inChatMessage"
					if l := len("inChatMessage"); len(elem) >= l && elem[0:l] == "inChatMessage" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						// Leaf node.
						switch r.Method {
						case "POST":
							s.handlePinChatMessageRequest([0]string{}, w, r)
						default:
							s.notAllowed(w, r, "POST")
						}

						return
					}
				case 'r': // Prefix: "romoteChatMember"
					if l := len("romoteChatMember"); len(elem) >= l && elem[0:l] == "romoteChatMember" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						// Leaf node.
						switch r.Method {
						case "POST":
							s.handlePromoteChatMemberRequest([0]string{}, w, r)
						default:
							s.notAllowed(w, r, "POST")
						}

						return
					}
				}
			case 'r': // Prefix: "re"
				if l := len("re"); len(elem) >= l && elem[0:l] == "re" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					break
				}
				switch elem[0] {
				case 'o': // Prefix: "open"
					if l := len("open"); len(elem) >= l && elem[0:l] == "open" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						break
					}
					switch elem[0] {
					case 'F': // Prefix: "ForumTopic"
						if l := len("ForumTopic"); len(elem) >= l && elem[0:l] == "ForumTopic" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							// Leaf node.
							switch r.Method {
							case "POST":
								s.handleReopenForumTopicRequest([0]string{}, w, r)
							default:
								s.notAllowed(w, r, "POST")
							}

							return
						}
					case 'G': // Prefix: "GeneralForumTopic"
						if l := len("GeneralForumTopic"); len(elem) >= l && elem[0:l] == "GeneralForumTopic" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							// Leaf node.
							switch r.Method {
							case "POST":
								s.handleReopenGeneralForumTopicRequest([0]string{}, w, r)
							default:
								s.notAllowed(w, r, "POST")
							}

							return
						}
					}
				case 's': // Prefix: "strictChatMember"
					if l := len("strictChatMember"); len(elem) >= l && elem[0:l] == "strictChatMember" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						// Leaf node.
						switch r.Method {
						case "POST":
							s.handleRestrictChatMemberRequest([0]string{}, w, r)
						default:
							s.notAllowed(w, r, "POST")
						}

						return
					}
				case 'v': // Prefix: "vokeChatInviteLink"
					if l := len("vokeChatInviteLink"); len(elem) >= l && elem[0:l] == "vokeChatInviteLink" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						// Leaf node.
						switch r.Method {
						case "POST":
							s.handleRevokeChatInviteLinkRequest([0]string{}, w, r)
						default:
							s.notAllowed(w, r, "POST")
						}

						return
					}
				}
			case 's': // Prefix: "s"
				if l := len("s"); len(elem) >= l && elem[0:l] == "s" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					break
				}
				switch elem[0] {
				case 'e': // Prefix: "e"
					if l := len("e"); len(elem) >= l && elem[0:l] == "e" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						break
					}
					switch elem[0] {
					case 'n': // Prefix: "nd"
						if l := len("nd"); len(elem) >= l && elem[0:l] == "nd" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							break
						}
						switch elem[0] {
						case 'A': // Prefix: "A"
							if l := len("A"); len(elem) >= l && elem[0:l] == "A" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								break
							}
							switch elem[0] {
							case 'n': // Prefix: "nimation"
								if l := len("nimation"); len(elem) >= l && elem[0:l] == "nimation" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf node.
									switch r.Method {
									case "POST":
										s.handleSendAnimationRequest([0]string{}, w, r)
									default:
										s.notAllowed(w, r, "POST")
									}

									return
								}
							case 'u': // Prefix: "udio"
								if l := len("udio"); len(elem) >= l && elem[0:l] == "udio" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf node.
									switch r.Method {
									case "POST":
										s.handleSendAudioRequest([0]string{}, w, r)
									default:
										s.notAllowed(w, r, "POST")
									}

									return
								}
							}
						case 'C': // Prefix: "C"
							if l := len("C"); len(elem) >= l && elem[0:l] == "C" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								break
							}
							switch elem[0] {
							case 'h': // Prefix: "hatAction"
								if l := len("hatAction"); len(elem) >= l && elem[0:l] == "hatAction" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf node.
									switch r.Method {
									case "POST":
										s.handleSendChatActionRequest([0]string{}, w, r)
									default:
										s.notAllowed(w, r, "POST")
									}

									return
								}
							case 'o': // Prefix: "ontact"
								if l := len("ontact"); len(elem) >= l && elem[0:l] == "ontact" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf node.
									switch r.Method {
									case "POST":
										s.handleSendContactRequest([0]string{}, w, r)
									default:
										s.notAllowed(w, r, "POST")
									}

									return
								}
							}
						case 'D': // Prefix: "D"
							if l := len("D"); len(elem) >= l && elem[0:l] == "D" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								break
							}
							switch elem[0] {
							case 'i': // Prefix: "ice"
								if l := len("ice"); len(elem) >= l && elem[0:l] == "ice" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf node.
									switch r.Method {
									case "POST":
										s.handleSendDiceRequest([0]string{}, w, r)
									default:
										s.notAllowed(w, r, "POST")
									}

									return
								}
							case 'o': // Prefix: "ocument"
								if l := len("ocument"); len(elem) >= l && elem[0:l] == "ocument" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf node.
									switch r.Method {
									case "POST":
										s.handleSendDocumentRequest([0]string{}, w, r)
									default:
										s.notAllowed(w, r, "POST")
									}

									return
								}
							}
						case 'G': // Prefix: "Game"
							if l := len("Game"); len(elem) >= l && elem[0:l] == "Game" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf node.
								switch r.Method {
								case "POST":
									s.handleSendGameRequest([0]string{}, w, r)
								default:
									s.notAllowed(w, r, "POST")
								}

								return
							}
						case 'I': // Prefix: "Invoice"
							if l := len("Invoice"); len(elem) >= l && elem[0:l] == "Invoice" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf node.
								switch r.Method {
								case "POST":
									s.handleSendInvoiceRequest([0]string{}, w, r)
								default:
									s.notAllowed(w, r, "POST")
								}

								return
							}
						case 'L': // Prefix: "Location"
							if l := len("Location"); len(elem) >= l && elem[0:l] == "Location" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf node.
								switch r.Method {
								case "POST":
									s.handleSendLocationRequest([0]string{}, w, r)
								default:
									s.notAllowed(w, r, "POST")
								}

								return
							}
						case 'M': // Prefix: "Me"
							if l := len("Me"); len(elem) >= l && elem[0:l] == "Me" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								break
							}
							switch elem[0] {
							case 'd': // Prefix: "diaGroup"
								if l := len("diaGroup"); len(elem) >= l && elem[0:l] == "diaGroup" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf node.
									switch r.Method {
									case "POST":
										s.handleSendMediaGroupRequest([0]string{}, w, r)
									default:
										s.notAllowed(w, r, "POST")
									}

									return
								}
							case 's': // Prefix: "ssage"
								if l := len("ssage"); len(elem) >= l && elem[0:l] == "ssage" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf node.
									switch r.Method {
									case "POST":
										s.handleSendMessageRequest([0]string{}, w, r)
									default:
										s.notAllowed(w, r, "POST")
									}

									return
								}
							}
						case 'P': // Prefix: "P"
							if l := len("P"); len(elem) >= l && elem[0:l] == "P" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								break
							}
							switch elem[0] {
							case 'h': // Prefix: "hoto"
								if l := len("hoto"); len(elem) >= l && elem[0:l] == "hoto" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf node.
									switch r.Method {
									case "POST":
										s.handleSendPhotoRequest([0]string{}, w, r)
									default:
										s.notAllowed(w, r, "POST")
									}

									return
								}
							case 'o': // Prefix: "oll"
								if l := len("oll"); len(elem) >= l && elem[0:l] == "oll" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf node.
									switch r.Method {
									case "POST":
										s.handleSendPollRequest([0]string{}, w, r)
									default:
										s.notAllowed(w, r, "POST")
									}

									return
								}
							}
						case 'S': // Prefix: "Sticker"
							if l := len("Sticker"); len(elem) >= l && elem[0:l] == "Sticker" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf node.
								switch r.Method {
								case "POST":
									s.handleSendStickerRequest([0]string{}, w, r)
								default:
									s.notAllowed(w, r, "POST")
								}

								return
							}
						case 'V': // Prefix: "V"
							if l := len("V"); len(elem) >= l && elem[0:l] == "V" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								break
							}
							switch elem[0] {
							case 'e': // Prefix: "enue"
								if l := len("enue"); len(elem) >= l && elem[0:l] == "enue" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf node.
									switch r.Method {
									case "POST":
										s.handleSendVenueRequest([0]string{}, w, r)
									default:
										s.notAllowed(w, r, "POST")
									}

									return
								}
							case 'i': // Prefix: "ideo"
								if l := len("ideo"); len(elem) >= l && elem[0:l] == "ideo" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									switch r.Method {
									case "POST":
										s.handleSendVideoRequest([0]string{}, w, r)
									default:
										s.notAllowed(w, r, "POST")
									}

									return
								}
								switch elem[0] {
								case 'N': // Prefix: "Note"
									if l := len("Note"); len(elem) >= l && elem[0:l] == "Note" {
										elem = elem[l:]
									} else {
										break
									}

									if len(elem) == 0 {
										// Leaf node.
										switch r.Method {
										case "POST":
											s.handleSendVideoNoteRequest([0]string{}, w, r)
										default:
											s.notAllowed(w, r, "POST")
										}

										return
									}
								}
							case 'o': // Prefix: "oice"
								if l := len("oice"); len(elem) >= l && elem[0:l] == "oice" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf node.
									switch r.Method {
									case "POST":
										s.handleSendVoiceRequest([0]string{}, w, r)
									default:
										s.notAllowed(w, r, "POST")
									}

									return
								}
							}
						}
					case 't': // Prefix: "t"
						if l := len("t"); len(elem) >= l && elem[0:l] == "t" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							break
						}
						switch elem[0] {
						case 'C': // Prefix: "Chat"
							if l := len("Chat"); len(elem) >= l && elem[0:l] == "Chat" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								break
							}
							switch elem[0] {
							case 'A': // Prefix: "AdministratorCustomTitle"
								if l := len("AdministratorCustomTitle"); len(elem) >= l && elem[0:l] == "AdministratorCustomTitle" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf node.
									switch r.Method {
									case "POST":
										s.handleSetChatAdministratorCustomTitleRequest([0]string{}, w, r)
									default:
										s.notAllowed(w, r, "POST")
									}

									return
								}
							case 'D': // Prefix: "Description"
								if l := len("Description"); len(elem) >= l && elem[0:l] == "Description" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf node.
									switch r.Method {
									case "POST":
										s.handleSetChatDescriptionRequest([0]string{}, w, r)
									default:
										s.notAllowed(w, r, "POST")
									}

									return
								}
							case 'M': // Prefix: "MenuButton"
								if l := len("MenuButton"); len(elem) >= l && elem[0:l] == "MenuButton" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf node.
									switch r.Method {
									case "POST":
										s.handleSetChatMenuButtonRequest([0]string{}, w, r)
									default:
										s.notAllowed(w, r, "POST")
									}

									return
								}
							case 'P': // Prefix: "P"
								if l := len("P"); len(elem) >= l && elem[0:l] == "P" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									break
								}
								switch elem[0] {
								case 'e': // Prefix: "ermissions"
									if l := len("ermissions"); len(elem) >= l && elem[0:l] == "ermissions" {
										elem = elem[l:]
									} else {
										break
									}

									if len(elem) == 0 {
										// Leaf node.
										switch r.Method {
										case "POST":
											s.handleSetChatPermissionsRequest([0]string{}, w, r)
										default:
											s.notAllowed(w, r, "POST")
										}

										return
									}
								case 'h': // Prefix: "hoto"
									if l := len("hoto"); len(elem) >= l && elem[0:l] == "hoto" {
										elem = elem[l:]
									} else {
										break
									}

									if len(elem) == 0 {
										// Leaf node.
										switch r.Method {
										case "POST":
											s.handleSetChatPhotoRequest([0]string{}, w, r)
										default:
											s.notAllowed(w, r, "POST")
										}

										return
									}
								}
							case 'S': // Prefix: "StickerSet"
								if l := len("StickerSet"); len(elem) >= l && elem[0:l] == "StickerSet" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf node.
									switch r.Method {
									case "POST":
										s.handleSetChatStickerSetRequest([0]string{}, w, r)
									default:
										s.notAllowed(w, r, "POST")
									}

									return
								}
							case 'T': // Prefix: "Title"
								if l := len("Title"); len(elem) >= l && elem[0:l] == "Title" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf node.
									switch r.Method {
									case "POST":
										s.handleSetChatTitleRequest([0]string{}, w, r)
									default:
										s.notAllowed(w, r, "POST")
									}

									return
								}
							}
						case 'G': // Prefix: "GameScore"
							if l := len("GameScore"); len(elem) >= l && elem[0:l] == "GameScore" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf node.
								switch r.Method {
								case "POST":
									s.handleSetGameScoreRequest([0]string{}, w, r)
								default:
									s.notAllowed(w, r, "POST")
								}

								return
							}
						case 'M': // Prefix: "My"
							if l := len("My"); len(elem) >= l && elem[0:l] == "My" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								break
							}
							switch elem[0] {
							case 'C': // Prefix: "Commands"
								if l := len("Commands"); len(elem) >= l && elem[0:l] == "Commands" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf node.
									switch r.Method {
									case "POST":
										s.handleSetMyCommandsRequest([0]string{}, w, r)
									default:
										s.notAllowed(w, r, "POST")
									}

									return
								}
							case 'D': // Prefix: "DefaultAdministratorRights"
								if l := len("DefaultAdministratorRights"); len(elem) >= l && elem[0:l] == "DefaultAdministratorRights" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf node.
									switch r.Method {
									case "POST":
										s.handleSetMyDefaultAdministratorRightsRequest([0]string{}, w, r)
									default:
										s.notAllowed(w, r, "POST")
									}

									return
								}
							}
						case 'P': // Prefix: "PassportDataErrors"
							if l := len("PassportDataErrors"); len(elem) >= l && elem[0:l] == "PassportDataErrors" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf node.
								switch r.Method {
								case "POST":
									s.handleSetPassportDataErrorsRequest([0]string{}, w, r)
								default:
									s.notAllowed(w, r, "POST")
								}

								return
							}
						case 'S': // Prefix: "Sticker"
							if l := len("Sticker"); len(elem) >= l && elem[0:l] == "Sticker" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								break
							}
							switch elem[0] {
							case 'P': // Prefix: "PositionInSet"
								if l := len("PositionInSet"); len(elem) >= l && elem[0:l] == "PositionInSet" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf node.
									switch r.Method {
									case "POST":
										s.handleSetStickerPositionInSetRequest([0]string{}, w, r)
									default:
										s.notAllowed(w, r, "POST")
									}

									return
								}
							case 'S': // Prefix: "SetThumb"
								if l := len("SetThumb"); len(elem) >= l && elem[0:l] == "SetThumb" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf node.
									switch r.Method {
									case "POST":
										s.handleSetStickerSetThumbRequest([0]string{}, w, r)
									default:
										s.notAllowed(w, r, "POST")
									}

									return
								}
							}
						case 'W': // Prefix: "Webhook"
							if l := len("Webhook"); len(elem) >= l && elem[0:l] == "Webhook" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf node.
								switch r.Method {
								case "POST":
									s.handleSetWebhookRequest([0]string{}, w, r)
								default:
									s.notAllowed(w, r, "POST")
								}

								return
							}
						}
					}
				case 't': // Prefix: "top"
					if l := len("top"); len(elem) >= l && elem[0:l] == "top" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						break
					}
					switch elem[0] {
					case 'M': // Prefix: "MessageLiveLocation"
						if l := len("MessageLiveLocation"); len(elem) >= l && elem[0:l] == "MessageLiveLocation" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							// Leaf node.
							switch r.Method {
							case "POST":
								s.handleStopMessageLiveLocationRequest([0]string{}, w, r)
							default:
								s.notAllowed(w, r, "POST")
							}

							return
						}
					case 'P': // Prefix: "Poll"
						if l := len("Poll"); len(elem) >= l && elem[0:l] == "Poll" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							// Leaf node.
							switch r.Method {
							case "POST":
								s.handleStopPollRequest([0]string{}, w, r)
							default:
								s.notAllowed(w, r, "POST")
							}

							return
						}
					}
				}
			case 'u': // Prefix: "u"
				if l := len("u"); len(elem) >= l && elem[0:l] == "u" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					break
				}
				switch elem[0] {
				case 'n': // Prefix: "n"
					if l := len("n"); len(elem) >= l && elem[0:l] == "n" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						break
					}
					switch elem[0] {
					case 'b': // Prefix: "banChat"
						if l := len("banChat"); len(elem) >= l && elem[0:l] == "banChat" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							break
						}
						switch elem[0] {
						case 'M': // Prefix: "Member"
							if l := len("Member"); len(elem) >= l && elem[0:l] == "Member" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf node.
								switch r.Method {
								case "POST":
									s.handleUnbanChatMemberRequest([0]string{}, w, r)
								default:
									s.notAllowed(w, r, "POST")
								}

								return
							}
						case 'S': // Prefix: "SenderChat"
							if l := len("SenderChat"); len(elem) >= l && elem[0:l] == "SenderChat" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf node.
								switch r.Method {
								case "POST":
									s.handleUnbanChatSenderChatRequest([0]string{}, w, r)
								default:
									s.notAllowed(w, r, "POST")
								}

								return
							}
						}
					case 'h': // Prefix: "hideGeneralForumTopic"
						if l := len("hideGeneralForumTopic"); len(elem) >= l && elem[0:l] == "hideGeneralForumTopic" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							// Leaf node.
							switch r.Method {
							case "POST":
								s.handleUnhideGeneralForumTopicRequest([0]string{}, w, r)
							default:
								s.notAllowed(w, r, "POST")
							}

							return
						}
					case 'p': // Prefix: "pin"
						if l := len("pin"); len(elem) >= l && elem[0:l] == "pin" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							break
						}
						switch elem[0] {
						case 'A': // Prefix: "All"
							if l := len("All"); len(elem) >= l && elem[0:l] == "All" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								break
							}
							switch elem[0] {
							case 'C': // Prefix: "ChatMessages"
								if l := len("ChatMessages"); len(elem) >= l && elem[0:l] == "ChatMessages" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf node.
									switch r.Method {
									case "POST":
										s.handleUnpinAllChatMessagesRequest([0]string{}, w, r)
									default:
										s.notAllowed(w, r, "POST")
									}

									return
								}
							case 'F': // Prefix: "ForumTopicMessages"
								if l := len("ForumTopicMessages"); len(elem) >= l && elem[0:l] == "ForumTopicMessages" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									// Leaf node.
									switch r.Method {
									case "POST":
										s.handleUnpinAllForumTopicMessagesRequest([0]string{}, w, r)
									default:
										s.notAllowed(w, r, "POST")
									}

									return
								}
							}
						case 'C': // Prefix: "ChatMessage"
							if l := len("ChatMessage"); len(elem) >= l && elem[0:l] == "ChatMessage" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								// Leaf node.
								switch r.Method {
								case "POST":
									s.handleUnpinChatMessageRequest([0]string{}, w, r)
								default:
									s.notAllowed(w, r, "POST")
								}

								return
							}
						}
					}
				case 'p': // Prefix: "ploadStickerFile"
					if l := len("ploadStickerFile"); len(elem) >= l && elem[0:l] == "ploadStickerFile" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						// Leaf node.
						switch r.Method {
						case "POST":
							s.handleUploadStickerFileRequest([0]string{}, w, r)
						default:
							s.notAllowed(w, r, "POST")
						}

						return
					}
				}
			}
		}
	}
	s.notFound(w, r)
}

// Route is route object.
type Route struct {
	name        string
	operationID string
	count       int
	args        [0]string
}

// Name returns ogen operation name.
//
// It is guaranteed to be unique and not empty.
func (r Route) Name() string {
	return r.name
}

// OperationID returns OpenAPI operationId.
func (r Route) OperationID() string {
	return r.operationID
}

// Args returns parsed arguments.
func (r Route) Args() []string {
	return r.args[:r.count]
}

// FindRoute finds Route for given method and path.
//
// Note: this method does not unescape path or handle reserved characters in path properly. Use FindPath instead.
func (s *Server) FindRoute(method, path string) (Route, bool) {
	return s.FindPath(method, &url.URL{Path: path})
}

// FindPath finds Route for given method and URL.
func (s *Server) FindPath(method string, u *url.URL) (r Route, _ bool) {
	var (
		elem = u.Path
		args = r.args
	)
	if rawPath := u.RawPath; rawPath != "" {
		if normalized, ok := uri.NormalizeEscapedPath(rawPath); ok {
			elem = normalized
		}
		defer func() {
			for i, arg := range r.args[:r.count] {
				if unescaped, err := url.PathUnescape(arg); err == nil {
					r.args[i] = unescaped
				}
			}
		}()
	}

	// Static code generated router with unwrapped path search.
	switch {
	default:
		if len(elem) == 0 {
			break
		}
		switch elem[0] {
		case '/': // Prefix: "/"
			if l := len("/"); len(elem) >= l && elem[0:l] == "/" {
				elem = elem[l:]
			} else {
				break
			}

			if len(elem) == 0 {
				break
			}
			switch elem[0] {
			case 'a': // Prefix: "a"
				if l := len("a"); len(elem) >= l && elem[0:l] == "a" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					break
				}
				switch elem[0] {
				case 'd': // Prefix: "ddStickerToSet"
					if l := len("ddStickerToSet"); len(elem) >= l && elem[0:l] == "ddStickerToSet" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						switch method {
						case "POST":
							// Leaf: AddStickerToSet
							r.name = "AddStickerToSet"
							r.operationID = "addStickerToSet"
							r.args = args
							r.count = 0
							return r, true
						default:
							return
						}
					}
				case 'n': // Prefix: "nswer"
					if l := len("nswer"); len(elem) >= l && elem[0:l] == "nswer" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						break
					}
					switch elem[0] {
					case 'C': // Prefix: "CallbackQuery"
						if l := len("CallbackQuery"); len(elem) >= l && elem[0:l] == "CallbackQuery" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							switch method {
							case "POST":
								// Leaf: AnswerCallbackQuery
								r.name = "AnswerCallbackQuery"
								r.operationID = "answerCallbackQuery"
								r.args = args
								r.count = 0
								return r, true
							default:
								return
							}
						}
					case 'I': // Prefix: "InlineQuery"
						if l := len("InlineQuery"); len(elem) >= l && elem[0:l] == "InlineQuery" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							switch method {
							case "POST":
								// Leaf: AnswerInlineQuery
								r.name = "AnswerInlineQuery"
								r.operationID = "answerInlineQuery"
								r.args = args
								r.count = 0
								return r, true
							default:
								return
							}
						}
					case 'P': // Prefix: "PreCheckoutQuery"
						if l := len("PreCheckoutQuery"); len(elem) >= l && elem[0:l] == "PreCheckoutQuery" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							switch method {
							case "POST":
								// Leaf: AnswerPreCheckoutQuery
								r.name = "AnswerPreCheckoutQuery"
								r.operationID = "answerPreCheckoutQuery"
								r.args = args
								r.count = 0
								return r, true
							default:
								return
							}
						}
					case 'S': // Prefix: "ShippingQuery"
						if l := len("ShippingQuery"); len(elem) >= l && elem[0:l] == "ShippingQuery" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							switch method {
							case "POST":
								// Leaf: AnswerShippingQuery
								r.name = "AnswerShippingQuery"
								r.operationID = "answerShippingQuery"
								r.args = args
								r.count = 0
								return r, true
							default:
								return
							}
						}
					case 'W': // Prefix: "WebAppQuery"
						if l := len("WebAppQuery"); len(elem) >= l && elem[0:l] == "WebAppQuery" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							switch method {
							case "POST":
								// Leaf: AnswerWebAppQuery
								r.name = "AnswerWebAppQuery"
								r.operationID = "answerWebAppQuery"
								r.args = args
								r.count = 0
								return r, true
							default:
								return
							}
						}
					}
				case 'p': // Prefix: "pproveChatJoinRequest"
					if l := len("pproveChatJoinRequest"); len(elem) >= l && elem[0:l] == "pproveChatJoinRequest" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						switch method {
						case "POST":
							// Leaf: ApproveChatJoinRequest
							r.name = "ApproveChatJoinRequest"
							r.operationID = "approveChatJoinRequest"
							r.args = args
							r.count = 0
							return r, true
						default:
							return
						}
					}
				}
			case 'b': // Prefix: "banChat"
				if l := len("banChat"); len(elem) >= l && elem[0:l] == "banChat" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					break
				}
				switch elem[0] {
				case 'M': // Prefix: "Member"
					if l := len("Member"); len(elem) >= l && elem[0:l] == "Member" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						switch method {
						case "POST":
							// Leaf: BanChatMember
							r.name = "BanChatMember"
							r.operationID = "banChatMember"
							r.args = args
							r.count = 0
							return r, true
						default:
							return
						}
					}
				case 'S': // Prefix: "SenderChat"
					if l := len("SenderChat"); len(elem) >= l && elem[0:l] == "SenderChat" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						switch method {
						case "POST":
							// Leaf: BanChatSenderChat
							r.name = "BanChatSenderChat"
							r.operationID = "banChatSenderChat"
							r.args = args
							r.count = 0
							return r, true
						default:
							return
						}
					}
				}
			case 'c': // Prefix: "c"
				if l := len("c"); len(elem) >= l && elem[0:l] == "c" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					break
				}
				switch elem[0] {
				case 'l': // Prefix: "lose"
					if l := len("lose"); len(elem) >= l && elem[0:l] == "lose" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						switch method {
						case "POST":
							r.name = "Close"
							r.operationID = "close"
							r.args = args
							r.count = 0
							return r, true
						default:
							return
						}
					}
					switch elem[0] {
					case 'F': // Prefix: "ForumTopic"
						if l := len("ForumTopic"); len(elem) >= l && elem[0:l] == "ForumTopic" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							switch method {
							case "POST":
								// Leaf: CloseForumTopic
								r.name = "CloseForumTopic"
								r.operationID = "closeForumTopic"
								r.args = args
								r.count = 0
								return r, true
							default:
								return
							}
						}
					case 'G': // Prefix: "GeneralForumTopic"
						if l := len("GeneralForumTopic"); len(elem) >= l && elem[0:l] == "GeneralForumTopic" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							switch method {
							case "POST":
								// Leaf: CloseGeneralForumTopic
								r.name = "CloseGeneralForumTopic"
								r.operationID = "closeGeneralForumTopic"
								r.args = args
								r.count = 0
								return r, true
							default:
								return
							}
						}
					}
				case 'o': // Prefix: "opyMessage"
					if l := len("opyMessage"); len(elem) >= l && elem[0:l] == "opyMessage" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						switch method {
						case "POST":
							// Leaf: CopyMessage
							r.name = "CopyMessage"
							r.operationID = "copyMessage"
							r.args = args
							r.count = 0
							return r, true
						default:
							return
						}
					}
				case 'r': // Prefix: "reate"
					if l := len("reate"); len(elem) >= l && elem[0:l] == "reate" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						break
					}
					switch elem[0] {
					case 'C': // Prefix: "ChatInviteLink"
						if l := len("ChatInviteLink"); len(elem) >= l && elem[0:l] == "ChatInviteLink" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							switch method {
							case "POST":
								// Leaf: CreateChatInviteLink
								r.name = "CreateChatInviteLink"
								r.operationID = "createChatInviteLink"
								r.args = args
								r.count = 0
								return r, true
							default:
								return
							}
						}
					case 'F': // Prefix: "ForumTopic"
						if l := len("ForumTopic"); len(elem) >= l && elem[0:l] == "ForumTopic" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							switch method {
							case "POST":
								// Leaf: CreateForumTopic
								r.name = "CreateForumTopic"
								r.operationID = "createForumTopic"
								r.args = args
								r.count = 0
								return r, true
							default:
								return
							}
						}
					case 'I': // Prefix: "InvoiceLink"
						if l := len("InvoiceLink"); len(elem) >= l && elem[0:l] == "InvoiceLink" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							switch method {
							case "POST":
								// Leaf: CreateInvoiceLink
								r.name = "CreateInvoiceLink"
								r.operationID = "createInvoiceLink"
								r.args = args
								r.count = 0
								return r, true
							default:
								return
							}
						}
					case 'N': // Prefix: "NewStickerSet"
						if l := len("NewStickerSet"); len(elem) >= l && elem[0:l] == "NewStickerSet" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							switch method {
							case "POST":
								// Leaf: CreateNewStickerSet
								r.name = "CreateNewStickerSet"
								r.operationID = "createNewStickerSet"
								r.args = args
								r.count = 0
								return r, true
							default:
								return
							}
						}
					}
				}
			case 'd': // Prefix: "de"
				if l := len("de"); len(elem) >= l && elem[0:l] == "de" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					break
				}
				switch elem[0] {
				case 'c': // Prefix: "clineChatJoinRequest"
					if l := len("clineChatJoinRequest"); len(elem) >= l && elem[0:l] == "clineChatJoinRequest" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						switch method {
						case "POST":
							// Leaf: DeclineChatJoinRequest
							r.name = "DeclineChatJoinRequest"
							r.operationID = "declineChatJoinRequest"
							r.args = args
							r.count = 0
							return r, true
						default:
							return
						}
					}
				case 'l': // Prefix: "lete"
					if l := len("lete"); len(elem) >= l && elem[0:l] == "lete" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						break
					}
					switch elem[0] {
					case 'C': // Prefix: "Chat"
						if l := len("Chat"); len(elem) >= l && elem[0:l] == "Chat" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							break
						}
						switch elem[0] {
						case 'P': // Prefix: "Photo"
							if l := len("Photo"); len(elem) >= l && elem[0:l] == "Photo" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								switch method {
								case "POST":
									// Leaf: DeleteChatPhoto
									r.name = "DeleteChatPhoto"
									r.operationID = "deleteChatPhoto"
									r.args = args
									r.count = 0
									return r, true
								default:
									return
								}
							}
						case 'S': // Prefix: "StickerSet"
							if l := len("StickerSet"); len(elem) >= l && elem[0:l] == "StickerSet" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								switch method {
								case "POST":
									// Leaf: DeleteChatStickerSet
									r.name = "DeleteChatStickerSet"
									r.operationID = "deleteChatStickerSet"
									r.args = args
									r.count = 0
									return r, true
								default:
									return
								}
							}
						}
					case 'F': // Prefix: "ForumTopic"
						if l := len("ForumTopic"); len(elem) >= l && elem[0:l] == "ForumTopic" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							switch method {
							case "POST":
								// Leaf: DeleteForumTopic
								r.name = "DeleteForumTopic"
								r.operationID = "deleteForumTopic"
								r.args = args
								r.count = 0
								return r, true
							default:
								return
							}
						}
					case 'M': // Prefix: "M"
						if l := len("M"); len(elem) >= l && elem[0:l] == "M" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							break
						}
						switch elem[0] {
						case 'e': // Prefix: "essage"
							if l := len("essage"); len(elem) >= l && elem[0:l] == "essage" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								switch method {
								case "POST":
									// Leaf: DeleteMessage
									r.name = "DeleteMessage"
									r.operationID = "deleteMessage"
									r.args = args
									r.count = 0
									return r, true
								default:
									return
								}
							}
						case 'y': // Prefix: "yCommands"
							if l := len("yCommands"); len(elem) >= l && elem[0:l] == "yCommands" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								switch method {
								case "POST":
									// Leaf: DeleteMyCommands
									r.name = "DeleteMyCommands"
									r.operationID = "deleteMyCommands"
									r.args = args
									r.count = 0
									return r, true
								default:
									return
								}
							}
						}
					case 'S': // Prefix: "StickerFromSet"
						if l := len("StickerFromSet"); len(elem) >= l && elem[0:l] == "StickerFromSet" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							switch method {
							case "POST":
								// Leaf: DeleteStickerFromSet
								r.name = "DeleteStickerFromSet"
								r.operationID = "deleteStickerFromSet"
								r.args = args
								r.count = 0
								return r, true
							default:
								return
							}
						}
					case 'W': // Prefix: "Webhook"
						if l := len("Webhook"); len(elem) >= l && elem[0:l] == "Webhook" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							switch method {
							case "POST":
								// Leaf: DeleteWebhook
								r.name = "DeleteWebhook"
								r.operationID = "deleteWebhook"
								r.args = args
								r.count = 0
								return r, true
							default:
								return
							}
						}
					}
				}
			case 'e': // Prefix: "e"
				if l := len("e"); len(elem) >= l && elem[0:l] == "e" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					break
				}
				switch elem[0] {
				case 'd': // Prefix: "dit"
					if l := len("dit"); len(elem) >= l && elem[0:l] == "dit" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						break
					}
					switch elem[0] {
					case 'C': // Prefix: "ChatInviteLink"
						if l := len("ChatInviteLink"); len(elem) >= l && elem[0:l] == "ChatInviteLink" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							switch method {
							case "POST":
								// Leaf: EditChatInviteLink
								r.name = "EditChatInviteLink"
								r.operationID = "editChatInviteLink"
								r.args = args
								r.count = 0
								return r, true
							default:
								return
							}
						}
					case 'F': // Prefix: "ForumTopic"
						if l := len("ForumTopic"); len(elem) >= l && elem[0:l] == "ForumTopic" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							switch method {
							case "POST":
								// Leaf: EditForumTopic
								r.name = "EditForumTopic"
								r.operationID = "editForumTopic"
								r.args = args
								r.count = 0
								return r, true
							default:
								return
							}
						}
					case 'G': // Prefix: "GeneralForumTopic"
						if l := len("GeneralForumTopic"); len(elem) >= l && elem[0:l] == "GeneralForumTopic" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							switch method {
							case "POST":
								// Leaf: EditGeneralForumTopic
								r.name = "EditGeneralForumTopic"
								r.operationID = "editGeneralForumTopic"
								r.args = args
								r.count = 0
								return r, true
							default:
								return
							}
						}
					case 'M': // Prefix: "Message"
						if l := len("Message"); len(elem) >= l && elem[0:l] == "Message" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							break
						}
						switch elem[0] {
						case 'C': // Prefix: "Caption"
							if l := len("Caption"); len(elem) >= l && elem[0:l] == "Caption" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								switch method {
								case "POST":
									// Leaf: EditMessageCaption
									r.name = "EditMessageCaption"
									r.operationID = "editMessageCaption"
									r.args = args
									r.count = 0
									return r, true
								default:
									return
								}
							}
						case 'L': // Prefix: "LiveLocation"
							if l := len("LiveLocation"); len(elem) >= l && elem[0:l] == "LiveLocation" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								switch method {
								case "POST":
									// Leaf: EditMessageLiveLocation
									r.name = "EditMessageLiveLocation"
									r.operationID = "editMessageLiveLocation"
									r.args = args
									r.count = 0
									return r, true
								default:
									return
								}
							}
						case 'M': // Prefix: "Media"
							if l := len("Media"); len(elem) >= l && elem[0:l] == "Media" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								switch method {
								case "POST":
									// Leaf: EditMessageMedia
									r.name = "EditMessageMedia"
									r.operationID = "editMessageMedia"
									r.args = args
									r.count = 0
									return r, true
								default:
									return
								}
							}
						case 'R': // Prefix: "ReplyMarkup"
							if l := len("ReplyMarkup"); len(elem) >= l && elem[0:l] == "ReplyMarkup" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								switch method {
								case "POST":
									// Leaf: EditMessageReplyMarkup
									r.name = "EditMessageReplyMarkup"
									r.operationID = "editMessageReplyMarkup"
									r.args = args
									r.count = 0
									return r, true
								default:
									return
								}
							}
						case 'T': // Prefix: "Text"
							if l := len("Text"); len(elem) >= l && elem[0:l] == "Text" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								switch method {
								case "POST":
									// Leaf: EditMessageText
									r.name = "EditMessageText"
									r.operationID = "editMessageText"
									r.args = args
									r.count = 0
									return r, true
								default:
									return
								}
							}
						}
					}
				case 'x': // Prefix: "xportChatInviteLink"
					if l := len("xportChatInviteLink"); len(elem) >= l && elem[0:l] == "xportChatInviteLink" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						switch method {
						case "POST":
							// Leaf: ExportChatInviteLink
							r.name = "ExportChatInviteLink"
							r.operationID = "exportChatInviteLink"
							r.args = args
							r.count = 0
							return r, true
						default:
							return
						}
					}
				}
			case 'f': // Prefix: "forwardMessage"
				if l := len("forwardMessage"); len(elem) >= l && elem[0:l] == "forwardMessage" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					switch method {
					case "POST":
						// Leaf: ForwardMessage
						r.name = "ForwardMessage"
						r.operationID = "forwardMessage"
						r.args = args
						r.count = 0
						return r, true
					default:
						return
					}
				}
			case 'g': // Prefix: "get"
				if l := len("get"); len(elem) >= l && elem[0:l] == "get" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					break
				}
				switch elem[0] {
				case 'C': // Prefix: "C"
					if l := len("C"); len(elem) >= l && elem[0:l] == "C" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						break
					}
					switch elem[0] {
					case 'h': // Prefix: "hat"
						if l := len("hat"); len(elem) >= l && elem[0:l] == "hat" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							switch method {
							case "POST":
								r.name = "GetChat"
								r.operationID = "getChat"
								r.args = args
								r.count = 0
								return r, true
							default:
								return
							}
						}
						switch elem[0] {
						case 'A': // Prefix: "Administrators"
							if l := len("Administrators"); len(elem) >= l && elem[0:l] == "Administrators" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								switch method {
								case "POST":
									// Leaf: GetChatAdministrators
									r.name = "GetChatAdministrators"
									r.operationID = "getChatAdministrators"
									r.args = args
									r.count = 0
									return r, true
								default:
									return
								}
							}
						case 'M': // Prefix: "Me"
							if l := len("Me"); len(elem) >= l && elem[0:l] == "Me" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								break
							}
							switch elem[0] {
							case 'm': // Prefix: "mber"
								if l := len("mber"); len(elem) >= l && elem[0:l] == "mber" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									switch method {
									case "POST":
										r.name = "GetChatMember"
										r.operationID = "getChatMember"
										r.args = args
										r.count = 0
										return r, true
									default:
										return
									}
								}
								switch elem[0] {
								case 'C': // Prefix: "Count"
									if l := len("Count"); len(elem) >= l && elem[0:l] == "Count" {
										elem = elem[l:]
									} else {
										break
									}

									if len(elem) == 0 {
										switch method {
										case "POST":
											// Leaf: GetChatMemberCount
											r.name = "GetChatMemberCount"
											r.operationID = "getChatMemberCount"
											r.args = args
											r.count = 0
											return r, true
										default:
											return
										}
									}
								}
							case 'n': // Prefix: "nuButton"
								if l := len("nuButton"); len(elem) >= l && elem[0:l] == "nuButton" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									switch method {
									case "POST":
										// Leaf: GetChatMenuButton
										r.name = "GetChatMenuButton"
										r.operationID = "getChatMenuButton"
										r.args = args
										r.count = 0
										return r, true
									default:
										return
									}
								}
							}
						}
					case 'u': // Prefix: "ustomEmojiStickers"
						if l := len("ustomEmojiStickers"); len(elem) >= l && elem[0:l] == "ustomEmojiStickers" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							switch method {
							case "POST":
								// Leaf: GetCustomEmojiStickers
								r.name = "GetCustomEmojiStickers"
								r.operationID = "getCustomEmojiStickers"
								r.args = args
								r.count = 0
								return r, true
							default:
								return
							}
						}
					}
				case 'F': // Prefix: "F"
					if l := len("F"); len(elem) >= l && elem[0:l] == "F" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						break
					}
					switch elem[0] {
					case 'i': // Prefix: "ile"
						if l := len("ile"); len(elem) >= l && elem[0:l] == "ile" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							switch method {
							case "POST":
								// Leaf: GetFile
								r.name = "GetFile"
								r.operationID = "getFile"
								r.args = args
								r.count = 0
								return r, true
							default:
								return
							}
						}
					case 'o': // Prefix: "orumTopicIconStickers"
						if l := len("orumTopicIconStickers"); len(elem) >= l && elem[0:l] == "orumTopicIconStickers" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							switch method {
							case "POST":
								// Leaf: GetForumTopicIconStickers
								r.name = "GetForumTopicIconStickers"
								r.operationID = "getForumTopicIconStickers"
								r.args = args
								r.count = 0
								return r, true
							default:
								return
							}
						}
					}
				case 'G': // Prefix: "GameHighScores"
					if l := len("GameHighScores"); len(elem) >= l && elem[0:l] == "GameHighScores" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						switch method {
						case "POST":
							// Leaf: GetGameHighScores
							r.name = "GetGameHighScores"
							r.operationID = "getGameHighScores"
							r.args = args
							r.count = 0
							return r, true
						default:
							return
						}
					}
				case 'M': // Prefix: "M"
					if l := len("M"); len(elem) >= l && elem[0:l] == "M" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						break
					}
					switch elem[0] {
					case 'e': // Prefix: "e"
						if l := len("e"); len(elem) >= l && elem[0:l] == "e" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							switch method {
							case "POST":
								// Leaf: GetMe
								r.name = "GetMe"
								r.operationID = "getMe"
								r.args = args
								r.count = 0
								return r, true
							default:
								return
							}
						}
					case 'y': // Prefix: "y"
						if l := len("y"); len(elem) >= l && elem[0:l] == "y" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							break
						}
						switch elem[0] {
						case 'C': // Prefix: "Commands"
							if l := len("Commands"); len(elem) >= l && elem[0:l] == "Commands" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								switch method {
								case "POST":
									// Leaf: GetMyCommands
									r.name = "GetMyCommands"
									r.operationID = "getMyCommands"
									r.args = args
									r.count = 0
									return r, true
								default:
									return
								}
							}
						case 'D': // Prefix: "DefaultAdministratorRights"
							if l := len("DefaultAdministratorRights"); len(elem) >= l && elem[0:l] == "DefaultAdministratorRights" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								switch method {
								case "POST":
									// Leaf: GetMyDefaultAdministratorRights
									r.name = "GetMyDefaultAdministratorRights"
									r.operationID = "getMyDefaultAdministratorRights"
									r.args = args
									r.count = 0
									return r, true
								default:
									return
								}
							}
						}
					}
				case 'S': // Prefix: "StickerSet"
					if l := len("StickerSet"); len(elem) >= l && elem[0:l] == "StickerSet" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						switch method {
						case "POST":
							// Leaf: GetStickerSet
							r.name = "GetStickerSet"
							r.operationID = "getStickerSet"
							r.args = args
							r.count = 0
							return r, true
						default:
							return
						}
					}
				case 'U': // Prefix: "U"
					if l := len("U"); len(elem) >= l && elem[0:l] == "U" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						break
					}
					switch elem[0] {
					case 'p': // Prefix: "pdates"
						if l := len("pdates"); len(elem) >= l && elem[0:l] == "pdates" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							switch method {
							case "POST":
								// Leaf: GetUpdates
								r.name = "GetUpdates"
								r.operationID = "getUpdates"
								r.args = args
								r.count = 0
								return r, true
							default:
								return
							}
						}
					case 's': // Prefix: "serProfilePhotos"
						if l := len("serProfilePhotos"); len(elem) >= l && elem[0:l] == "serProfilePhotos" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							switch method {
							case "POST":
								// Leaf: GetUserProfilePhotos
								r.name = "GetUserProfilePhotos"
								r.operationID = "getUserProfilePhotos"
								r.args = args
								r.count = 0
								return r, true
							default:
								return
							}
						}
					}
				case 'W': // Prefix: "WebhookInfo"
					if l := len("WebhookInfo"); len(elem) >= l && elem[0:l] == "WebhookInfo" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						switch method {
						case "POST":
							// Leaf: GetWebhookInfo
							r.name = "GetWebhookInfo"
							r.operationID = "getWebhookInfo"
							r.args = args
							r.count = 0
							return r, true
						default:
							return
						}
					}
				}
			case 'h': // Prefix: "hideGeneralForumTopic"
				if l := len("hideGeneralForumTopic"); len(elem) >= l && elem[0:l] == "hideGeneralForumTopic" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					switch method {
					case "POST":
						// Leaf: HideGeneralForumTopic
						r.name = "HideGeneralForumTopic"
						r.operationID = "hideGeneralForumTopic"
						r.args = args
						r.count = 0
						return r, true
					default:
						return
					}
				}
			case 'l': // Prefix: "l"
				if l := len("l"); len(elem) >= l && elem[0:l] == "l" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					break
				}
				switch elem[0] {
				case 'e': // Prefix: "eaveChat"
					if l := len("eaveChat"); len(elem) >= l && elem[0:l] == "eaveChat" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						switch method {
						case "POST":
							// Leaf: LeaveChat
							r.name = "LeaveChat"
							r.operationID = "leaveChat"
							r.args = args
							r.count = 0
							return r, true
						default:
							return
						}
					}
				case 'o': // Prefix: "ogOut"
					if l := len("ogOut"); len(elem) >= l && elem[0:l] == "ogOut" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						switch method {
						case "POST":
							// Leaf: LogOut
							r.name = "LogOut"
							r.operationID = "logOut"
							r.args = args
							r.count = 0
							return r, true
						default:
							return
						}
					}
				}
			case 'p': // Prefix: "p"
				if l := len("p"); len(elem) >= l && elem[0:l] == "p" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					break
				}
				switch elem[0] {
				case 'i': // Prefix: "inChatMessage"
					if l := len("inChatMessage"); len(elem) >= l && elem[0:l] == "inChatMessage" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						switch method {
						case "POST":
							// Leaf: PinChatMessage
							r.name = "PinChatMessage"
							r.operationID = "pinChatMessage"
							r.args = args
							r.count = 0
							return r, true
						default:
							return
						}
					}
				case 'r': // Prefix: "romoteChatMember"
					if l := len("romoteChatMember"); len(elem) >= l && elem[0:l] == "romoteChatMember" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						switch method {
						case "POST":
							// Leaf: PromoteChatMember
							r.name = "PromoteChatMember"
							r.operationID = "promoteChatMember"
							r.args = args
							r.count = 0
							return r, true
						default:
							return
						}
					}
				}
			case 'r': // Prefix: "re"
				if l := len("re"); len(elem) >= l && elem[0:l] == "re" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					break
				}
				switch elem[0] {
				case 'o': // Prefix: "open"
					if l := len("open"); len(elem) >= l && elem[0:l] == "open" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						break
					}
					switch elem[0] {
					case 'F': // Prefix: "ForumTopic"
						if l := len("ForumTopic"); len(elem) >= l && elem[0:l] == "ForumTopic" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							switch method {
							case "POST":
								// Leaf: ReopenForumTopic
								r.name = "ReopenForumTopic"
								r.operationID = "reopenForumTopic"
								r.args = args
								r.count = 0
								return r, true
							default:
								return
							}
						}
					case 'G': // Prefix: "GeneralForumTopic"
						if l := len("GeneralForumTopic"); len(elem) >= l && elem[0:l] == "GeneralForumTopic" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							switch method {
							case "POST":
								// Leaf: ReopenGeneralForumTopic
								r.name = "ReopenGeneralForumTopic"
								r.operationID = "reopenGeneralForumTopic"
								r.args = args
								r.count = 0
								return r, true
							default:
								return
							}
						}
					}
				case 's': // Prefix: "strictChatMember"
					if l := len("strictChatMember"); len(elem) >= l && elem[0:l] == "strictChatMember" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						switch method {
						case "POST":
							// Leaf: RestrictChatMember
							r.name = "RestrictChatMember"
							r.operationID = "restrictChatMember"
							r.args = args
							r.count = 0
							return r, true
						default:
							return
						}
					}
				case 'v': // Prefix: "vokeChatInviteLink"
					if l := len("vokeChatInviteLink"); len(elem) >= l && elem[0:l] == "vokeChatInviteLink" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						switch method {
						case "POST":
							// Leaf: RevokeChatInviteLink
							r.name = "RevokeChatInviteLink"
							r.operationID = "revokeChatInviteLink"
							r.args = args
							r.count = 0
							return r, true
						default:
							return
						}
					}
				}
			case 's': // Prefix: "s"
				if l := len("s"); len(elem) >= l && elem[0:l] == "s" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					break
				}
				switch elem[0] {
				case 'e': // Prefix: "e"
					if l := len("e"); len(elem) >= l && elem[0:l] == "e" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						break
					}
					switch elem[0] {
					case 'n': // Prefix: "nd"
						if l := len("nd"); len(elem) >= l && elem[0:l] == "nd" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							break
						}
						switch elem[0] {
						case 'A': // Prefix: "A"
							if l := len("A"); len(elem) >= l && elem[0:l] == "A" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								break
							}
							switch elem[0] {
							case 'n': // Prefix: "nimation"
								if l := len("nimation"); len(elem) >= l && elem[0:l] == "nimation" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									switch method {
									case "POST":
										// Leaf: SendAnimation
										r.name = "SendAnimation"
										r.operationID = "sendAnimation"
										r.args = args
										r.count = 0
										return r, true
									default:
										return
									}
								}
							case 'u': // Prefix: "udio"
								if l := len("udio"); len(elem) >= l && elem[0:l] == "udio" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									switch method {
									case "POST":
										// Leaf: SendAudio
										r.name = "SendAudio"
										r.operationID = "sendAudio"
										r.args = args
										r.count = 0
										return r, true
									default:
										return
									}
								}
							}
						case 'C': // Prefix: "C"
							if l := len("C"); len(elem) >= l && elem[0:l] == "C" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								break
							}
							switch elem[0] {
							case 'h': // Prefix: "hatAction"
								if l := len("hatAction"); len(elem) >= l && elem[0:l] == "hatAction" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									switch method {
									case "POST":
										// Leaf: SendChatAction
										r.name = "SendChatAction"
										r.operationID = "sendChatAction"
										r.args = args
										r.count = 0
										return r, true
									default:
										return
									}
								}
							case 'o': // Prefix: "ontact"
								if l := len("ontact"); len(elem) >= l && elem[0:l] == "ontact" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									switch method {
									case "POST":
										// Leaf: SendContact
										r.name = "SendContact"
										r.operationID = "sendContact"
										r.args = args
										r.count = 0
										return r, true
									default:
										return
									}
								}
							}
						case 'D': // Prefix: "D"
							if l := len("D"); len(elem) >= l && elem[0:l] == "D" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								break
							}
							switch elem[0] {
							case 'i': // Prefix: "ice"
								if l := len("ice"); len(elem) >= l && elem[0:l] == "ice" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									switch method {
									case "POST":
										// Leaf: SendDice
										r.name = "SendDice"
										r.operationID = "sendDice"
										r.args = args
										r.count = 0
										return r, true
									default:
										return
									}
								}
							case 'o': // Prefix: "ocument"
								if l := len("ocument"); len(elem) >= l && elem[0:l] == "ocument" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									switch method {
									case "POST":
										// Leaf: SendDocument
										r.name = "SendDocument"
										r.operationID = "sendDocument"
										r.args = args
										r.count = 0
										return r, true
									default:
										return
									}
								}
							}
						case 'G': // Prefix: "Game"
							if l := len("Game"); len(elem) >= l && elem[0:l] == "Game" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								switch method {
								case "POST":
									// Leaf: SendGame
									r.name = "SendGame"
									r.operationID = "sendGame"
									r.args = args
									r.count = 0
									return r, true
								default:
									return
								}
							}
						case 'I': // Prefix: "Invoice"
							if l := len("Invoice"); len(elem) >= l && elem[0:l] == "Invoice" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								switch method {
								case "POST":
									// Leaf: SendInvoice
									r.name = "SendInvoice"
									r.operationID = "sendInvoice"
									r.args = args
									r.count = 0
									return r, true
								default:
									return
								}
							}
						case 'L': // Prefix: "Location"
							if l := len("Location"); len(elem) >= l && elem[0:l] == "Location" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								switch method {
								case "POST":
									// Leaf: SendLocation
									r.name = "SendLocation"
									r.operationID = "sendLocation"
									r.args = args
									r.count = 0
									return r, true
								default:
									return
								}
							}
						case 'M': // Prefix: "Me"
							if l := len("Me"); len(elem) >= l && elem[0:l] == "Me" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								break
							}
							switch elem[0] {
							case 'd': // Prefix: "diaGroup"
								if l := len("diaGroup"); len(elem) >= l && elem[0:l] == "diaGroup" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									switch method {
									case "POST":
										// Leaf: SendMediaGroup
										r.name = "SendMediaGroup"
										r.operationID = "sendMediaGroup"
										r.args = args
										r.count = 0
										return r, true
									default:
										return
									}
								}
							case 's': // Prefix: "ssage"
								if l := len("ssage"); len(elem) >= l && elem[0:l] == "ssage" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									switch method {
									case "POST":
										// Leaf: SendMessage
										r.name = "SendMessage"
										r.operationID = "sendMessage"
										r.args = args
										r.count = 0
										return r, true
									default:
										return
									}
								}
							}
						case 'P': // Prefix: "P"
							if l := len("P"); len(elem) >= l && elem[0:l] == "P" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								break
							}
							switch elem[0] {
							case 'h': // Prefix: "hoto"
								if l := len("hoto"); len(elem) >= l && elem[0:l] == "hoto" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									switch method {
									case "POST":
										// Leaf: SendPhoto
										r.name = "SendPhoto"
										r.operationID = "sendPhoto"
										r.args = args
										r.count = 0
										return r, true
									default:
										return
									}
								}
							case 'o': // Prefix: "oll"
								if l := len("oll"); len(elem) >= l && elem[0:l] == "oll" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									switch method {
									case "POST":
										// Leaf: SendPoll
										r.name = "SendPoll"
										r.operationID = "sendPoll"
										r.args = args
										r.count = 0
										return r, true
									default:
										return
									}
								}
							}
						case 'S': // Prefix: "Sticker"
							if l := len("Sticker"); len(elem) >= l && elem[0:l] == "Sticker" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								switch method {
								case "POST":
									// Leaf: SendSticker
									r.name = "SendSticker"
									r.operationID = "sendSticker"
									r.args = args
									r.count = 0
									return r, true
								default:
									return
								}
							}
						case 'V': // Prefix: "V"
							if l := len("V"); len(elem) >= l && elem[0:l] == "V" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								break
							}
							switch elem[0] {
							case 'e': // Prefix: "enue"
								if l := len("enue"); len(elem) >= l && elem[0:l] == "enue" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									switch method {
									case "POST":
										// Leaf: SendVenue
										r.name = "SendVenue"
										r.operationID = "sendVenue"
										r.args = args
										r.count = 0
										return r, true
									default:
										return
									}
								}
							case 'i': // Prefix: "ideo"
								if l := len("ideo"); len(elem) >= l && elem[0:l] == "ideo" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									switch method {
									case "POST":
										r.name = "SendVideo"
										r.operationID = "sendVideo"
										r.args = args
										r.count = 0
										return r, true
									default:
										return
									}
								}
								switch elem[0] {
								case 'N': // Prefix: "Note"
									if l := len("Note"); len(elem) >= l && elem[0:l] == "Note" {
										elem = elem[l:]
									} else {
										break
									}

									if len(elem) == 0 {
										switch method {
										case "POST":
											// Leaf: SendVideoNote
											r.name = "SendVideoNote"
											r.operationID = "sendVideoNote"
											r.args = args
											r.count = 0
											return r, true
										default:
											return
										}
									}
								}
							case 'o': // Prefix: "oice"
								if l := len("oice"); len(elem) >= l && elem[0:l] == "oice" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									switch method {
									case "POST":
										// Leaf: SendVoice
										r.name = "SendVoice"
										r.operationID = "sendVoice"
										r.args = args
										r.count = 0
										return r, true
									default:
										return
									}
								}
							}
						}
					case 't': // Prefix: "t"
						if l := len("t"); len(elem) >= l && elem[0:l] == "t" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							break
						}
						switch elem[0] {
						case 'C': // Prefix: "Chat"
							if l := len("Chat"); len(elem) >= l && elem[0:l] == "Chat" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								break
							}
							switch elem[0] {
							case 'A': // Prefix: "AdministratorCustomTitle"
								if l := len("AdministratorCustomTitle"); len(elem) >= l && elem[0:l] == "AdministratorCustomTitle" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									switch method {
									case "POST":
										// Leaf: SetChatAdministratorCustomTitle
										r.name = "SetChatAdministratorCustomTitle"
										r.operationID = "setChatAdministratorCustomTitle"
										r.args = args
										r.count = 0
										return r, true
									default:
										return
									}
								}
							case 'D': // Prefix: "Description"
								if l := len("Description"); len(elem) >= l && elem[0:l] == "Description" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									switch method {
									case "POST":
										// Leaf: SetChatDescription
										r.name = "SetChatDescription"
										r.operationID = "setChatDescription"
										r.args = args
										r.count = 0
										return r, true
									default:
										return
									}
								}
							case 'M': // Prefix: "MenuButton"
								if l := len("MenuButton"); len(elem) >= l && elem[0:l] == "MenuButton" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									switch method {
									case "POST":
										// Leaf: SetChatMenuButton
										r.name = "SetChatMenuButton"
										r.operationID = "setChatMenuButton"
										r.args = args
										r.count = 0
										return r, true
									default:
										return
									}
								}
							case 'P': // Prefix: "P"
								if l := len("P"); len(elem) >= l && elem[0:l] == "P" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									break
								}
								switch elem[0] {
								case 'e': // Prefix: "ermissions"
									if l := len("ermissions"); len(elem) >= l && elem[0:l] == "ermissions" {
										elem = elem[l:]
									} else {
										break
									}

									if len(elem) == 0 {
										switch method {
										case "POST":
											// Leaf: SetChatPermissions
											r.name = "SetChatPermissions"
											r.operationID = "setChatPermissions"
											r.args = args
											r.count = 0
											return r, true
										default:
											return
										}
									}
								case 'h': // Prefix: "hoto"
									if l := len("hoto"); len(elem) >= l && elem[0:l] == "hoto" {
										elem = elem[l:]
									} else {
										break
									}

									if len(elem) == 0 {
										switch method {
										case "POST":
											// Leaf: SetChatPhoto
											r.name = "SetChatPhoto"
											r.operationID = "setChatPhoto"
											r.args = args
											r.count = 0
											return r, true
										default:
											return
										}
									}
								}
							case 'S': // Prefix: "StickerSet"
								if l := len("StickerSet"); len(elem) >= l && elem[0:l] == "StickerSet" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									switch method {
									case "POST":
										// Leaf: SetChatStickerSet
										r.name = "SetChatStickerSet"
										r.operationID = "setChatStickerSet"
										r.args = args
										r.count = 0
										return r, true
									default:
										return
									}
								}
							case 'T': // Prefix: "Title"
								if l := len("Title"); len(elem) >= l && elem[0:l] == "Title" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									switch method {
									case "POST":
										// Leaf: SetChatTitle
										r.name = "SetChatTitle"
										r.operationID = "setChatTitle"
										r.args = args
										r.count = 0
										return r, true
									default:
										return
									}
								}
							}
						case 'G': // Prefix: "GameScore"
							if l := len("GameScore"); len(elem) >= l && elem[0:l] == "GameScore" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								switch method {
								case "POST":
									// Leaf: SetGameScore
									r.name = "SetGameScore"
									r.operationID = "setGameScore"
									r.args = args
									r.count = 0
									return r, true
								default:
									return
								}
							}
						case 'M': // Prefix: "My"
							if l := len("My"); len(elem) >= l && elem[0:l] == "My" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								break
							}
							switch elem[0] {
							case 'C': // Prefix: "Commands"
								if l := len("Commands"); len(elem) >= l && elem[0:l] == "Commands" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									switch method {
									case "POST":
										// Leaf: SetMyCommands
										r.name = "SetMyCommands"
										r.operationID = "setMyCommands"
										r.args = args
										r.count = 0
										return r, true
									default:
										return
									}
								}
							case 'D': // Prefix: "DefaultAdministratorRights"
								if l := len("DefaultAdministratorRights"); len(elem) >= l && elem[0:l] == "DefaultAdministratorRights" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									switch method {
									case "POST":
										// Leaf: SetMyDefaultAdministratorRights
										r.name = "SetMyDefaultAdministratorRights"
										r.operationID = "setMyDefaultAdministratorRights"
										r.args = args
										r.count = 0
										return r, true
									default:
										return
									}
								}
							}
						case 'P': // Prefix: "PassportDataErrors"
							if l := len("PassportDataErrors"); len(elem) >= l && elem[0:l] == "PassportDataErrors" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								switch method {
								case "POST":
									// Leaf: SetPassportDataErrors
									r.name = "SetPassportDataErrors"
									r.operationID = "setPassportDataErrors"
									r.args = args
									r.count = 0
									return r, true
								default:
									return
								}
							}
						case 'S': // Prefix: "Sticker"
							if l := len("Sticker"); len(elem) >= l && elem[0:l] == "Sticker" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								break
							}
							switch elem[0] {
							case 'P': // Prefix: "PositionInSet"
								if l := len("PositionInSet"); len(elem) >= l && elem[0:l] == "PositionInSet" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									switch method {
									case "POST":
										// Leaf: SetStickerPositionInSet
										r.name = "SetStickerPositionInSet"
										r.operationID = "setStickerPositionInSet"
										r.args = args
										r.count = 0
										return r, true
									default:
										return
									}
								}
							case 'S': // Prefix: "SetThumb"
								if l := len("SetThumb"); len(elem) >= l && elem[0:l] == "SetThumb" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									switch method {
									case "POST":
										// Leaf: SetStickerSetThumb
										r.name = "SetStickerSetThumb"
										r.operationID = "setStickerSetThumb"
										r.args = args
										r.count = 0
										return r, true
									default:
										return
									}
								}
							}
						case 'W': // Prefix: "Webhook"
							if l := len("Webhook"); len(elem) >= l && elem[0:l] == "Webhook" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								switch method {
								case "POST":
									// Leaf: SetWebhook
									r.name = "SetWebhook"
									r.operationID = "setWebhook"
									r.args = args
									r.count = 0
									return r, true
								default:
									return
								}
							}
						}
					}
				case 't': // Prefix: "top"
					if l := len("top"); len(elem) >= l && elem[0:l] == "top" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						break
					}
					switch elem[0] {
					case 'M': // Prefix: "MessageLiveLocation"
						if l := len("MessageLiveLocation"); len(elem) >= l && elem[0:l] == "MessageLiveLocation" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							switch method {
							case "POST":
								// Leaf: StopMessageLiveLocation
								r.name = "StopMessageLiveLocation"
								r.operationID = "stopMessageLiveLocation"
								r.args = args
								r.count = 0
								return r, true
							default:
								return
							}
						}
					case 'P': // Prefix: "Poll"
						if l := len("Poll"); len(elem) >= l && elem[0:l] == "Poll" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							switch method {
							case "POST":
								// Leaf: StopPoll
								r.name = "StopPoll"
								r.operationID = "stopPoll"
								r.args = args
								r.count = 0
								return r, true
							default:
								return
							}
						}
					}
				}
			case 'u': // Prefix: "u"
				if l := len("u"); len(elem) >= l && elem[0:l] == "u" {
					elem = elem[l:]
				} else {
					break
				}

				if len(elem) == 0 {
					break
				}
				switch elem[0] {
				case 'n': // Prefix: "n"
					if l := len("n"); len(elem) >= l && elem[0:l] == "n" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						break
					}
					switch elem[0] {
					case 'b': // Prefix: "banChat"
						if l := len("banChat"); len(elem) >= l && elem[0:l] == "banChat" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							break
						}
						switch elem[0] {
						case 'M': // Prefix: "Member"
							if l := len("Member"); len(elem) >= l && elem[0:l] == "Member" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								switch method {
								case "POST":
									// Leaf: UnbanChatMember
									r.name = "UnbanChatMember"
									r.operationID = "unbanChatMember"
									r.args = args
									r.count = 0
									return r, true
								default:
									return
								}
							}
						case 'S': // Prefix: "SenderChat"
							if l := len("SenderChat"); len(elem) >= l && elem[0:l] == "SenderChat" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								switch method {
								case "POST":
									// Leaf: UnbanChatSenderChat
									r.name = "UnbanChatSenderChat"
									r.operationID = "unbanChatSenderChat"
									r.args = args
									r.count = 0
									return r, true
								default:
									return
								}
							}
						}
					case 'h': // Prefix: "hideGeneralForumTopic"
						if l := len("hideGeneralForumTopic"); len(elem) >= l && elem[0:l] == "hideGeneralForumTopic" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							switch method {
							case "POST":
								// Leaf: UnhideGeneralForumTopic
								r.name = "UnhideGeneralForumTopic"
								r.operationID = "unhideGeneralForumTopic"
								r.args = args
								r.count = 0
								return r, true
							default:
								return
							}
						}
					case 'p': // Prefix: "pin"
						if l := len("pin"); len(elem) >= l && elem[0:l] == "pin" {
							elem = elem[l:]
						} else {
							break
						}

						if len(elem) == 0 {
							break
						}
						switch elem[0] {
						case 'A': // Prefix: "All"
							if l := len("All"); len(elem) >= l && elem[0:l] == "All" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								break
							}
							switch elem[0] {
							case 'C': // Prefix: "ChatMessages"
								if l := len("ChatMessages"); len(elem) >= l && elem[0:l] == "ChatMessages" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									switch method {
									case "POST":
										// Leaf: UnpinAllChatMessages
										r.name = "UnpinAllChatMessages"
										r.operationID = "unpinAllChatMessages"
										r.args = args
										r.count = 0
										return r, true
									default:
										return
									}
								}
							case 'F': // Prefix: "ForumTopicMessages"
								if l := len("ForumTopicMessages"); len(elem) >= l && elem[0:l] == "ForumTopicMessages" {
									elem = elem[l:]
								} else {
									break
								}

								if len(elem) == 0 {
									switch method {
									case "POST":
										// Leaf: UnpinAllForumTopicMessages
										r.name = "UnpinAllForumTopicMessages"
										r.operationID = "unpinAllForumTopicMessages"
										r.args = args
										r.count = 0
										return r, true
									default:
										return
									}
								}
							}
						case 'C': // Prefix: "ChatMessage"
							if l := len("ChatMessage"); len(elem) >= l && elem[0:l] == "ChatMessage" {
								elem = elem[l:]
							} else {
								break
							}

							if len(elem) == 0 {
								switch method {
								case "POST":
									// Leaf: UnpinChatMessage
									r.name = "UnpinChatMessage"
									r.operationID = "unpinChatMessage"
									r.args = args
									r.count = 0
									return r, true
								default:
									return
								}
							}
						}
					}
				case 'p': // Prefix: "ploadStickerFile"
					if l := len("ploadStickerFile"); len(elem) >= l && elem[0:l] == "ploadStickerFile" {
						elem = elem[l:]
					} else {
						break
					}

					if len(elem) == 0 {
						switch method {
						case "POST":
							// Leaf: UploadStickerFile
							r.name = "UploadStickerFile"
							r.operationID = "uploadStickerFile"
							r.args = args
							r.count = 0
							return r, true
						default:
							return
						}
					}
				}
			}
		}
	}
	return r, false
}
