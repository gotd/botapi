// Code generated by ogen, DO NOT EDIT.

package oas

import (
	"bytes"
	"context"
	"fmt"
	"io"
	"math"
	"math/big"
	"math/bits"
	"net"
	"net/http"
	"net/netip"
	"net/url"
	"regexp"
	"sort"
	"strconv"
	"strings"
	"sync"
	"time"

	"github.com/go-faster/errors"
	"github.com/go-faster/jx"
	"github.com/google/uuid"
	"go.opentelemetry.io/otel"
	"go.opentelemetry.io/otel/attribute"
	"go.opentelemetry.io/otel/codes"
	"go.opentelemetry.io/otel/metric"
	"go.opentelemetry.io/otel/metric/instrument/syncint64"
	"go.opentelemetry.io/otel/metric/nonrecording"
	"go.opentelemetry.io/otel/trace"

	"github.com/ogen-go/ogen/conv"
	ht "github.com/ogen-go/ogen/http"
	"github.com/ogen-go/ogen/json"
	"github.com/ogen-go/ogen/otelogen"
	"github.com/ogen-go/ogen/uri"
	"github.com/ogen-go/ogen/validate"
)

// No-op definition for keeping imports.
var (
	_ = bytes.NewReader
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = io.Copy
	_ = math.Mod
	_ = big.Rat{}
	_ = bits.LeadingZeros64
	_ = net.IP{}
	_ = http.MethodGet
	_ = netip.Addr{}
	_ = url.URL{}
	_ = regexp.MustCompile
	_ = sort.Ints
	_ = strconv.ParseInt
	_ = strings.Builder{}
	_ = sync.Pool{}
	_ = time.Time{}

	_ = errors.Is
	_ = jx.Null
	_ = uuid.UUID{}
	_ = otel.GetTracerProvider
	_ = attribute.KeyValue{}
	_ = codes.Unset
	_ = metric.MeterConfig{}
	_ = syncint64.Counter(nil)
	_ = nonrecording.NewNoopMeterProvider
	_ = trace.TraceIDFromHex

	_ = conv.ToInt32
	_ = ht.NewRequest
	_ = json.Marshal
	_ = otelogen.Version
	_ = uri.PathEncoder{}
	_ = validate.Int{}
)

// setDefaults set default value of fields.
func (s *Error) setDefaults() {
	{
		val := bool(false)

		s.Ok = val
	}
}

// setDefaults set default value of fields.
func (s *GetUpdates) setDefaults() {
	{
		val := int(0)

		s.Offset.SetTo(val)
	}
}

// setDefaults set default value of fields.
func (s *GetUserProfilePhotos) setDefaults() {
	{
		val := int(0)

		s.Offset.SetTo(val)
	}
}

// setDefaults set default value of fields.
func (s *InlineQueryResultCachedAudio) setDefaults() {
	{
		val := string("audio")

		s.Type = val
	}
}

// setDefaults set default value of fields.
func (s *InlineQueryResultCachedDocument) setDefaults() {
	{
		val := string("document")

		s.Type = val
	}
}

// setDefaults set default value of fields.
func (s *InlineQueryResultCachedGif) setDefaults() {
	{
		val := string("gif")

		s.Type = val
	}
}

// setDefaults set default value of fields.
func (s *InlineQueryResultCachedMpeg4Gif) setDefaults() {
	{
		val := string("mpeg4_gif")

		s.Type = val
	}
}

// setDefaults set default value of fields.
func (s *InlineQueryResultCachedPhoto) setDefaults() {
	{
		val := string("photo")

		s.Type = val
	}
}

// setDefaults set default value of fields.
func (s *InlineQueryResultCachedVideo) setDefaults() {
	{
		val := string("video")

		s.Type = val
	}
}

// setDefaults set default value of fields.
func (s *InlineQueryResultCachedVoice) setDefaults() {
	{
		val := string("voice")

		s.Type = val
	}
}

// setDefaults set default value of fields.
func (s *MessageEntity) setDefaults() {
	{
		val := int(0)

		s.Offset = val
	}
}

// setDefaults set default value of fields.
func (s *PassportElementErrorDataField) setDefaults() {
	{
		val := string("data")

		s.Source = val
	}
}

// setDefaults set default value of fields.
func (s *PassportElementErrorFile) setDefaults() {
	{
		val := string("file")

		s.Source = val
	}
}

// setDefaults set default value of fields.
func (s *PassportElementErrorFiles) setDefaults() {
	{
		val := string("files")

		s.Source = val
	}
}

// setDefaults set default value of fields.
func (s *PassportElementErrorFrontSide) setDefaults() {
	{
		val := string("front_side")

		s.Source = val
	}
}

// setDefaults set default value of fields.
func (s *PassportElementErrorReverseSide) setDefaults() {
	{
		val := string("reverse_side")

		s.Source = val
	}
}

// setDefaults set default value of fields.
func (s *PassportElementErrorSelfie) setDefaults() {
	{
		val := string("selfie")

		s.Source = val
	}
}

// setDefaults set default value of fields.
func (s *PassportElementErrorTranslationFile) setDefaults() {
	{
		val := string("translation_file")

		s.Source = val
	}
}

// setDefaults set default value of fields.
func (s *PassportElementErrorTranslationFiles) setDefaults() {
	{
		val := string("translation_files")

		s.Source = val
	}
}

// setDefaults set default value of fields.
func (s *PassportElementErrorUnspecified) setDefaults() {
	{
		val := string("unspecified")

		s.Source = val
	}
}

// setDefaults set default value of fields.
func (s *Result) setDefaults() {
	{
		val := bool(true)

		s.Ok = val
	}
}

// setDefaults set default value of fields.
func (s *ResultArrayOfBotCommand) setDefaults() {
	{
		val := bool(true)

		s.Ok = val
	}
}

// setDefaults set default value of fields.
func (s *ResultArrayOfChatMember) setDefaults() {
	{
		val := bool(true)

		s.Ok = val
	}
}

// setDefaults set default value of fields.
func (s *ResultArrayOfGameHighScore) setDefaults() {
	{
		val := bool(true)

		s.Ok = val
	}
}

// setDefaults set default value of fields.
func (s *ResultArrayOfMessage) setDefaults() {
	{
		val := bool(true)

		s.Ok = val
	}
}

// setDefaults set default value of fields.
func (s *ResultArrayOfUpdate) setDefaults() {
	{
		val := bool(true)

		s.Ok = val
	}
}

// setDefaults set default value of fields.
func (s *ResultChat) setDefaults() {
	{
		val := bool(true)

		s.Ok = val
	}
}

// setDefaults set default value of fields.
func (s *ResultChatInviteLink) setDefaults() {
	{
		val := bool(true)

		s.Ok = val
	}
}

// setDefaults set default value of fields.
func (s *ResultChatMember) setDefaults() {
	{
		val := bool(true)

		s.Ok = val
	}
}

// setDefaults set default value of fields.
func (s *ResultFile) setDefaults() {
	{
		val := bool(true)

		s.Ok = val
	}
}

// setDefaults set default value of fields.
func (s *ResultInt) setDefaults() {
	{
		val := bool(true)

		s.Ok = val
	}
}

// setDefaults set default value of fields.
func (s *ResultMessage) setDefaults() {
	{
		val := bool(true)

		s.Ok = val
	}
}

// setDefaults set default value of fields.
func (s *ResultMessageId) setDefaults() {
	{
		val := bool(true)

		s.Ok = val
	}
}

// setDefaults set default value of fields.
func (s *ResultMessageOrBoolean) setDefaults() {
	{
		val := bool(true)

		s.Ok = val
	}
}

// setDefaults set default value of fields.
func (s *ResultPoll) setDefaults() {
	{
		val := bool(true)

		s.Ok = val
	}
}

// setDefaults set default value of fields.
func (s *ResultStickerSet) setDefaults() {
	{
		val := bool(true)

		s.Ok = val
	}
}

// setDefaults set default value of fields.
func (s *ResultString) setDefaults() {
	{
		val := bool(true)

		s.Ok = val
	}
}

// setDefaults set default value of fields.
func (s *ResultUser) setDefaults() {
	{
		val := bool(true)

		s.Ok = val
	}
}

// setDefaults set default value of fields.
func (s *ResultUserProfilePhotos) setDefaults() {
	{
		val := bool(true)

		s.Ok = val
	}
}

// setDefaults set default value of fields.
func (s *ResultWebhookInfo) setDefaults() {
	{
		val := bool(true)

		s.Ok = val
	}
}
