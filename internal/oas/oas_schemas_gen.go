// Code generated by ogen, DO NOT EDIT.

package oas

import (
	"bytes"
	"context"
	"errors"
	"fmt"
	"io"
	"math"
	"net"
	"net/http"
	"net/url"
	"sort"
	"strconv"
	"strings"
	"time"

	"github.com/go-chi/chi/v5"
	"github.com/google/uuid"
	"github.com/ogen-go/ogen/conv"
	ht "github.com/ogen-go/ogen/http"
	"github.com/ogen-go/ogen/json"
	"github.com/ogen-go/ogen/uri"
	"github.com/ogen-go/ogen/validate"
)

// No-op definition for keeping imports.
var (
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = sort.Ints
	_ = chi.Context{}
	_ = http.MethodGet
	_ = io.Copy
	_ = json.Marshal
	_ = bytes.NewReader
	_ = strconv.ParseInt
	_ = time.Time{}
	_ = conv.ToInt32
	_ = uuid.UUID{}
	_ = uri.PathEncoder{}
	_ = url.URL{}
	_ = math.Mod
	_ = validate.Int{}
	_ = ht.NewRequest
	_ = net.IP{}
)

// Animation describes #/components/schemas/Animation.
type Animation struct {
	Duration     int          `json:"duration"`
	FileID       string       `json:"file_id"`
	FileName     OptString    `json:"file_name"`
	FileSize     OptInt       `json:"file_size"`
	FileUniqueID string       `json:"file_unique_id"`
	Height       int          `json:"height"`
	MimeType     OptString    `json:"mime_type"`
	Thumb        OptPhotoSize `json:"thumb"`
	Width        int          `json:"width"`
}

// Audio describes #/components/schemas/Audio.
type Audio struct {
	Duration     int          `json:"duration"`
	FileID       string       `json:"file_id"`
	FileName     OptString    `json:"file_name"`
	FileSize     OptInt       `json:"file_size"`
	FileUniqueID string       `json:"file_unique_id"`
	MimeType     OptString    `json:"mime_type"`
	Performer    OptString    `json:"performer"`
	Thumb        OptPhotoSize `json:"thumb"`
	Title        OptString    `json:"title"`
}

// Chat describes #/components/schemas/Chat.
type Chat struct {
	Bio                   OptString          `json:"bio"`
	CanSetStickerSet      OptBool            `json:"can_set_sticker_set"`
	Description           OptString          `json:"description"`
	FirstName             OptString          `json:"first_name"`
	ID                    int                `json:"id"`
	InviteLink            OptString          `json:"invite_link"`
	LastName              OptString          `json:"last_name"`
	LinkedChatID          OptInt             `json:"linked_chat_id"`
	Location              OptChatLocation    `json:"location"`
	MessageAutoDeleteTime OptInt             `json:"message_auto_delete_time"`
	Permissions           OptChatPermissions `json:"permissions"`
	Photo                 OptChatPhoto       `json:"photo"`
	PinnedMessage         OptMessage         `json:"pinned_message"`
	SlowModeDelay         OptInt             `json:"slow_mode_delay"`
	StickerSetName        OptString          `json:"sticker_set_name"`
	Title                 OptString          `json:"title"`
	Type                  string             `json:"type"`
	Username              OptString          `json:"username"`
}

// ChatLocation describes #/components/schemas/ChatLocation.
type ChatLocation struct {
	Address  string   `json:"address"`
	Location Location `json:"location"`
}

// ChatPermissions describes #/components/schemas/ChatPermissions.
type ChatPermissions struct {
	CanAddWebPagePreviews OptBool `json:"can_add_web_page_previews"`
	CanChangeInfo         OptBool `json:"can_change_info"`
	CanInviteUsers        OptBool `json:"can_invite_users"`
	CanPinMessages        OptBool `json:"can_pin_messages"`
	CanSendMediaMessages  OptBool `json:"can_send_media_messages"`
	CanSendMessages       OptBool `json:"can_send_messages"`
	CanSendOtherMessages  OptBool `json:"can_send_other_messages"`
	CanSendPolls          OptBool `json:"can_send_polls"`
}

// ChatPhoto describes #/components/schemas/ChatPhoto.
type ChatPhoto struct {
	BigFileID         string `json:"big_file_id"`
	BigFileUniqueID   string `json:"big_file_unique_id"`
	SmallFileID       string `json:"small_file_id"`
	SmallFileUniqueID string `json:"small_file_unique_id"`
}

// Contact describes #/components/schemas/Contact.
type Contact struct {
	FirstName   string    `json:"first_name"`
	LastName    OptString `json:"last_name"`
	PhoneNumber string    `json:"phone_number"`
	UserID      OptInt    `json:"user_id"`
	Vcard       OptString `json:"vcard"`
}

// Dice describes #/components/schemas/Dice.
type Dice struct {
	Emoji string `json:"emoji"`
	Value int    `json:"value"`
}

// Document describes #/components/schemas/Document.
type Document struct {
	FileID       string       `json:"file_id"`
	FileName     OptString    `json:"file_name"`
	FileSize     OptInt       `json:"file_size"`
	FileUniqueID string       `json:"file_unique_id"`
	MimeType     OptString    `json:"mime_type"`
	Thumb        OptPhotoSize `json:"thumb"`
}

// EncryptedCredentials describes #/components/schemas/EncryptedCredentials.
type EncryptedCredentials struct {
	Data   string `json:"data"`
	Hash   string `json:"hash"`
	Secret string `json:"secret"`
}

// Game describes #/components/schemas/Game.
type Game struct {
	Animation   OptAnimation `json:"animation"`
	Description string       `json:"description"`
	Text        OptString    `json:"text"`
	Title       string       `json:"title"`
}

type InlineKeyboardMarkup struct{}

// Invoice describes #/components/schemas/Invoice.
type Invoice struct {
	Currency       string `json:"currency"`
	Description    string `json:"description"`
	StartParameter string `json:"start_parameter"`
	Title          string `json:"title"`
	TotalAmount    int    `json:"total_amount"`
}

// Location describes #/components/schemas/Location.
type Location struct {
	Heading              OptInt     `json:"heading"`
	HorizontalAccuracy   OptFloat64 `json:"horizontal_accuracy"`
	Latitude             float64    `json:"latitude"`
	LivePeriod           OptInt     `json:"live_period"`
	Longitude            float64    `json:"longitude"`
	ProximityAlertRadius OptInt     `json:"proximity_alert_radius"`
}

// MaskPosition describes #/components/schemas/MaskPosition.
type MaskPosition struct {
	Point  string  `json:"point"`
	Scale  float64 `json:"scale"`
	XShift float64 `json:"x_shift"`
	YShift float64 `json:"y_shift"`
}

// Message describes #/components/schemas/Message.
type Message struct {
	Animation                     OptAnimation                     `json:"animation"`
	Audio                         OptAudio                         `json:"audio"`
	AuthorSignature               OptString                        `json:"author_signature"`
	Caption                       OptString                        `json:"caption"`
	ChannelChatCreated            OptBool                          `json:"channel_chat_created"`
	Chat                          Chat                             `json:"chat"`
	ConnectedWebsite              OptString                        `json:"connected_website"`
	Contact                       OptContact                       `json:"contact"`
	Date                          int                              `json:"date"`
	DeleteChatPhoto               OptBool                          `json:"delete_chat_photo"`
	Dice                          OptDice                          `json:"dice"`
	Document                      OptDocument                      `json:"document"`
	EditDate                      OptInt                           `json:"edit_date"`
	ForwardDate                   OptInt                           `json:"forward_date"`
	ForwardFrom                   OptUser                          `json:"forward_from"`
	ForwardFromChat               OptChat                          `json:"forward_from_chat"`
	ForwardFromMessageID          OptInt                           `json:"forward_from_message_id"`
	ForwardSenderName             OptString                        `json:"forward_sender_name"`
	ForwardSignature              OptString                        `json:"forward_signature"`
	From                          OptUser                          `json:"from"`
	Game                          OptGame                          `json:"game"`
	GroupChatCreated              OptBool                          `json:"group_chat_created"`
	Invoice                       OptInvoice                       `json:"invoice"`
	LeftChatMember                OptUser                          `json:"left_chat_member"`
	Location                      OptLocation                      `json:"location"`
	MediaGroupID                  OptString                        `json:"media_group_id"`
	MessageAutoDeleteTimerChanged OptMessageAutoDeleteTimerChanged `json:"message_auto_delete_timer_changed"`
	MessageID                     int                              `json:"message_id"`
	MigrateFromChatID             OptInt                           `json:"migrate_from_chat_id"`
	MigrateToChatID               OptInt                           `json:"migrate_to_chat_id"`
	NewChatTitle                  OptString                        `json:"new_chat_title"`
	PassportData                  OptPassportData                  `json:"passport_data"`
	PinnedMessage                 *Message                         `json:"pinned_message"`
	Poll                          OptPoll                          `json:"poll"`
	ProximityAlertTriggered       OptProximityAlertTriggered       `json:"proximity_alert_triggered"`
	ReplyMarkup                   *InlineKeyboardMarkup            `json:"reply_markup"`
	ReplyToMessage                *Message                         `json:"reply_to_message"`
	SenderChat                    OptChat                          `json:"sender_chat"`
	Sticker                       OptSticker                       `json:"sticker"`
	SuccessfulPayment             OptSuccessfulPayment             `json:"successful_payment"`
	SupergroupChatCreated         OptBool                          `json:"supergroup_chat_created"`
	Text                          OptString                        `json:"text"`
	Venue                         OptVenue                         `json:"venue"`
	ViaBot                        OptUser                          `json:"via_bot"`
	Video                         OptVideo                         `json:"video"`
	VideoNote                     OptVideoNote                     `json:"video_note"`
	Voice                         OptVoice                         `json:"voice"`
	VoiceChatEnded                OptVoiceChatEnded                `json:"voice_chat_ended"`
	VoiceChatParticipantsInvited  *VoiceChatParticipantsInvited    `json:"voice_chat_participants_invited"`
	VoiceChatScheduled            OptVoiceChatScheduled            `json:"voice_chat_scheduled"`
	VoiceChatStarted              *VoiceChatStarted                `json:"voice_chat_started"`
}

// MessageAutoDeleteTimerChanged describes #/components/schemas/MessageAutoDeleteTimerChanged.
type MessageAutoDeleteTimerChanged struct {
	MessageAutoDeleteTime int `json:"message_auto_delete_time"`
}

// NewOptAnimation returns new OptAnimation with value set to v.
func NewOptAnimation(v Animation) OptAnimation {
	return OptAnimation{
		Value: v,
		Set:   true,
	}
}

// OptAnimation is optional Animation.
type OptAnimation struct {
	Value Animation
	Set   bool
}

// IsSet returns true if OptAnimation was set.
func (o OptAnimation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAnimation) Reset() {
	var v Animation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAnimation) SetTo(v Animation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAnimation) Get() (v Animation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAudio returns new OptAudio with value set to v.
func NewOptAudio(v Audio) OptAudio {
	return OptAudio{
		Value: v,
		Set:   true,
	}
}

// OptAudio is optional Audio.
type OptAudio struct {
	Value Audio
	Set   bool
}

// IsSet returns true if OptAudio was set.
func (o OptAudio) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAudio) Reset() {
	var v Audio
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAudio) SetTo(v Audio) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAudio) Get() (v Audio, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptChat returns new OptChat with value set to v.
func NewOptChat(v Chat) OptChat {
	return OptChat{
		Value: v,
		Set:   true,
	}
}

// OptChat is optional Chat.
type OptChat struct {
	Value Chat
	Set   bool
}

// IsSet returns true if OptChat was set.
func (o OptChat) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptChat) Reset() {
	var v Chat
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptChat) SetTo(v Chat) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptChat) Get() (v Chat, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptChatLocation returns new OptChatLocation with value set to v.
func NewOptChatLocation(v ChatLocation) OptChatLocation {
	return OptChatLocation{
		Value: v,
		Set:   true,
	}
}

// OptChatLocation is optional ChatLocation.
type OptChatLocation struct {
	Value ChatLocation
	Set   bool
}

// IsSet returns true if OptChatLocation was set.
func (o OptChatLocation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptChatLocation) Reset() {
	var v ChatLocation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptChatLocation) SetTo(v ChatLocation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptChatLocation) Get() (v ChatLocation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptChatPermissions returns new OptChatPermissions with value set to v.
func NewOptChatPermissions(v ChatPermissions) OptChatPermissions {
	return OptChatPermissions{
		Value: v,
		Set:   true,
	}
}

// OptChatPermissions is optional ChatPermissions.
type OptChatPermissions struct {
	Value ChatPermissions
	Set   bool
}

// IsSet returns true if OptChatPermissions was set.
func (o OptChatPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptChatPermissions) Reset() {
	var v ChatPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptChatPermissions) SetTo(v ChatPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptChatPermissions) Get() (v ChatPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptChatPhoto returns new OptChatPhoto with value set to v.
func NewOptChatPhoto(v ChatPhoto) OptChatPhoto {
	return OptChatPhoto{
		Value: v,
		Set:   true,
	}
}

// OptChatPhoto is optional ChatPhoto.
type OptChatPhoto struct {
	Value ChatPhoto
	Set   bool
}

// IsSet returns true if OptChatPhoto was set.
func (o OptChatPhoto) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptChatPhoto) Reset() {
	var v ChatPhoto
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptChatPhoto) SetTo(v ChatPhoto) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptChatPhoto) Get() (v ChatPhoto, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptContact returns new OptContact with value set to v.
func NewOptContact(v Contact) OptContact {
	return OptContact{
		Value: v,
		Set:   true,
	}
}

// OptContact is optional Contact.
type OptContact struct {
	Value Contact
	Set   bool
}

// IsSet returns true if OptContact was set.
func (o OptContact) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptContact) Reset() {
	var v Contact
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptContact) SetTo(v Contact) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptContact) Get() (v Contact, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptDice returns new OptDice with value set to v.
func NewOptDice(v Dice) OptDice {
	return OptDice{
		Value: v,
		Set:   true,
	}
}

// OptDice is optional Dice.
type OptDice struct {
	Value Dice
	Set   bool
}

// IsSet returns true if OptDice was set.
func (o OptDice) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDice) Reset() {
	var v Dice
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDice) SetTo(v Dice) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDice) Get() (v Dice, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptDocument returns new OptDocument with value set to v.
func NewOptDocument(v Document) OptDocument {
	return OptDocument{
		Value: v,
		Set:   true,
	}
}

// OptDocument is optional Document.
type OptDocument struct {
	Value Document
	Set   bool
}

// IsSet returns true if OptDocument was set.
func (o OptDocument) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDocument) Reset() {
	var v Document
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDocument) SetTo(v Document) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDocument) Get() (v Document, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptGame returns new OptGame with value set to v.
func NewOptGame(v Game) OptGame {
	return OptGame{
		Value: v,
		Set:   true,
	}
}

// OptGame is optional Game.
type OptGame struct {
	Value Game
	Set   bool
}

// IsSet returns true if OptGame was set.
func (o OptGame) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGame) Reset() {
	var v Game
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGame) SetTo(v Game) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGame) Get() (v Game, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptInvoice returns new OptInvoice with value set to v.
func NewOptInvoice(v Invoice) OptInvoice {
	return OptInvoice{
		Value: v,
		Set:   true,
	}
}

// OptInvoice is optional Invoice.
type OptInvoice struct {
	Value Invoice
	Set   bool
}

// IsSet returns true if OptInvoice was set.
func (o OptInvoice) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInvoice) Reset() {
	var v Invoice
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInvoice) SetTo(v Invoice) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInvoice) Get() (v Invoice, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptLocation returns new OptLocation with value set to v.
func NewOptLocation(v Location) OptLocation {
	return OptLocation{
		Value: v,
		Set:   true,
	}
}

// OptLocation is optional Location.
type OptLocation struct {
	Value Location
	Set   bool
}

// IsSet returns true if OptLocation was set.
func (o OptLocation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptLocation) Reset() {
	var v Location
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptLocation) SetTo(v Location) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptLocation) Get() (v Location, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptMaskPosition returns new OptMaskPosition with value set to v.
func NewOptMaskPosition(v MaskPosition) OptMaskPosition {
	return OptMaskPosition{
		Value: v,
		Set:   true,
	}
}

// OptMaskPosition is optional MaskPosition.
type OptMaskPosition struct {
	Value MaskPosition
	Set   bool
}

// IsSet returns true if OptMaskPosition was set.
func (o OptMaskPosition) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMaskPosition) Reset() {
	var v MaskPosition
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMaskPosition) SetTo(v MaskPosition) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMaskPosition) Get() (v MaskPosition, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptMessage returns new OptMessage with value set to v.
func NewOptMessage(v Message) OptMessage {
	return OptMessage{
		Value: v,
		Set:   true,
	}
}

// OptMessage is optional Message.
type OptMessage struct {
	Value Message
	Set   bool
}

// IsSet returns true if OptMessage was set.
func (o OptMessage) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMessage) Reset() {
	var v Message
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMessage) SetTo(v Message) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMessage) Get() (v Message, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptMessageAutoDeleteTimerChanged returns new OptMessageAutoDeleteTimerChanged with value set to v.
func NewOptMessageAutoDeleteTimerChanged(v MessageAutoDeleteTimerChanged) OptMessageAutoDeleteTimerChanged {
	return OptMessageAutoDeleteTimerChanged{
		Value: v,
		Set:   true,
	}
}

// OptMessageAutoDeleteTimerChanged is optional MessageAutoDeleteTimerChanged.
type OptMessageAutoDeleteTimerChanged struct {
	Value MessageAutoDeleteTimerChanged
	Set   bool
}

// IsSet returns true if OptMessageAutoDeleteTimerChanged was set.
func (o OptMessageAutoDeleteTimerChanged) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMessageAutoDeleteTimerChanged) Reset() {
	var v MessageAutoDeleteTimerChanged
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMessageAutoDeleteTimerChanged) SetTo(v MessageAutoDeleteTimerChanged) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMessageAutoDeleteTimerChanged) Get() (v MessageAutoDeleteTimerChanged, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptOrderInfo returns new OptOrderInfo with value set to v.
func NewOptOrderInfo(v OrderInfo) OptOrderInfo {
	return OptOrderInfo{
		Value: v,
		Set:   true,
	}
}

// OptOrderInfo is optional OrderInfo.
type OptOrderInfo struct {
	Value OrderInfo
	Set   bool
}

// IsSet returns true if OptOrderInfo was set.
func (o OptOrderInfo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOrderInfo) Reset() {
	var v OrderInfo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOrderInfo) SetTo(v OrderInfo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOrderInfo) Get() (v OrderInfo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPassportData returns new OptPassportData with value set to v.
func NewOptPassportData(v PassportData) OptPassportData {
	return OptPassportData{
		Value: v,
		Set:   true,
	}
}

// OptPassportData is optional PassportData.
type OptPassportData struct {
	Value PassportData
	Set   bool
}

// IsSet returns true if OptPassportData was set.
func (o OptPassportData) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPassportData) Reset() {
	var v PassportData
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPassportData) SetTo(v PassportData) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPassportData) Get() (v PassportData, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPhotoSize returns new OptPhotoSize with value set to v.
func NewOptPhotoSize(v PhotoSize) OptPhotoSize {
	return OptPhotoSize{
		Value: v,
		Set:   true,
	}
}

// OptPhotoSize is optional PhotoSize.
type OptPhotoSize struct {
	Value PhotoSize
	Set   bool
}

// IsSet returns true if OptPhotoSize was set.
func (o OptPhotoSize) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhotoSize) Reset() {
	var v PhotoSize
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhotoSize) SetTo(v PhotoSize) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhotoSize) Get() (v PhotoSize, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPoll returns new OptPoll with value set to v.
func NewOptPoll(v Poll) OptPoll {
	return OptPoll{
		Value: v,
		Set:   true,
	}
}

// OptPoll is optional Poll.
type OptPoll struct {
	Value Poll
	Set   bool
}

// IsSet returns true if OptPoll was set.
func (o OptPoll) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPoll) Reset() {
	var v Poll
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPoll) SetTo(v Poll) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPoll) Get() (v Poll, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProximityAlertTriggered returns new OptProximityAlertTriggered with value set to v.
func NewOptProximityAlertTriggered(v ProximityAlertTriggered) OptProximityAlertTriggered {
	return OptProximityAlertTriggered{
		Value: v,
		Set:   true,
	}
}

// OptProximityAlertTriggered is optional ProximityAlertTriggered.
type OptProximityAlertTriggered struct {
	Value ProximityAlertTriggered
	Set   bool
}

// IsSet returns true if OptProximityAlertTriggered was set.
func (o OptProximityAlertTriggered) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProximityAlertTriggered) Reset() {
	var v ProximityAlertTriggered
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProximityAlertTriggered) SetTo(v ProximityAlertTriggered) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProximityAlertTriggered) Get() (v ProximityAlertTriggered, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptShippingAddress returns new OptShippingAddress with value set to v.
func NewOptShippingAddress(v ShippingAddress) OptShippingAddress {
	return OptShippingAddress{
		Value: v,
		Set:   true,
	}
}

// OptShippingAddress is optional ShippingAddress.
type OptShippingAddress struct {
	Value ShippingAddress
	Set   bool
}

// IsSet returns true if OptShippingAddress was set.
func (o OptShippingAddress) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptShippingAddress) Reset() {
	var v ShippingAddress
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptShippingAddress) SetTo(v ShippingAddress) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptShippingAddress) Get() (v ShippingAddress, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptSticker returns new OptSticker with value set to v.
func NewOptSticker(v Sticker) OptSticker {
	return OptSticker{
		Value: v,
		Set:   true,
	}
}

// OptSticker is optional Sticker.
type OptSticker struct {
	Value Sticker
	Set   bool
}

// IsSet returns true if OptSticker was set.
func (o OptSticker) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSticker) Reset() {
	var v Sticker
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSticker) SetTo(v Sticker) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSticker) Get() (v Sticker, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptSuccessfulPayment returns new OptSuccessfulPayment with value set to v.
func NewOptSuccessfulPayment(v SuccessfulPayment) OptSuccessfulPayment {
	return OptSuccessfulPayment{
		Value: v,
		Set:   true,
	}
}

// OptSuccessfulPayment is optional SuccessfulPayment.
type OptSuccessfulPayment struct {
	Value SuccessfulPayment
	Set   bool
}

// IsSet returns true if OptSuccessfulPayment was set.
func (o OptSuccessfulPayment) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSuccessfulPayment) Reset() {
	var v SuccessfulPayment
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSuccessfulPayment) SetTo(v SuccessfulPayment) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSuccessfulPayment) Get() (v SuccessfulPayment, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptUser returns new OptUser with value set to v.
func NewOptUser(v User) OptUser {
	return OptUser{
		Value: v,
		Set:   true,
	}
}

// OptUser is optional User.
type OptUser struct {
	Value User
	Set   bool
}

// IsSet returns true if OptUser was set.
func (o OptUser) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUser) Reset() {
	var v User
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUser) SetTo(v User) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUser) Get() (v User, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptVenue returns new OptVenue with value set to v.
func NewOptVenue(v Venue) OptVenue {
	return OptVenue{
		Value: v,
		Set:   true,
	}
}

// OptVenue is optional Venue.
type OptVenue struct {
	Value Venue
	Set   bool
}

// IsSet returns true if OptVenue was set.
func (o OptVenue) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptVenue) Reset() {
	var v Venue
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptVenue) SetTo(v Venue) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptVenue) Get() (v Venue, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptVideo returns new OptVideo with value set to v.
func NewOptVideo(v Video) OptVideo {
	return OptVideo{
		Value: v,
		Set:   true,
	}
}

// OptVideo is optional Video.
type OptVideo struct {
	Value Video
	Set   bool
}

// IsSet returns true if OptVideo was set.
func (o OptVideo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptVideo) Reset() {
	var v Video
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptVideo) SetTo(v Video) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptVideo) Get() (v Video, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptVideoNote returns new OptVideoNote with value set to v.
func NewOptVideoNote(v VideoNote) OptVideoNote {
	return OptVideoNote{
		Value: v,
		Set:   true,
	}
}

// OptVideoNote is optional VideoNote.
type OptVideoNote struct {
	Value VideoNote
	Set   bool
}

// IsSet returns true if OptVideoNote was set.
func (o OptVideoNote) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptVideoNote) Reset() {
	var v VideoNote
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptVideoNote) SetTo(v VideoNote) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptVideoNote) Get() (v VideoNote, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptVoice returns new OptVoice with value set to v.
func NewOptVoice(v Voice) OptVoice {
	return OptVoice{
		Value: v,
		Set:   true,
	}
}

// OptVoice is optional Voice.
type OptVoice struct {
	Value Voice
	Set   bool
}

// IsSet returns true if OptVoice was set.
func (o OptVoice) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptVoice) Reset() {
	var v Voice
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptVoice) SetTo(v Voice) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptVoice) Get() (v Voice, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptVoiceChatEnded returns new OptVoiceChatEnded with value set to v.
func NewOptVoiceChatEnded(v VoiceChatEnded) OptVoiceChatEnded {
	return OptVoiceChatEnded{
		Value: v,
		Set:   true,
	}
}

// OptVoiceChatEnded is optional VoiceChatEnded.
type OptVoiceChatEnded struct {
	Value VoiceChatEnded
	Set   bool
}

// IsSet returns true if OptVoiceChatEnded was set.
func (o OptVoiceChatEnded) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptVoiceChatEnded) Reset() {
	var v VoiceChatEnded
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptVoiceChatEnded) SetTo(v VoiceChatEnded) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptVoiceChatEnded) Get() (v VoiceChatEnded, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptVoiceChatScheduled returns new OptVoiceChatScheduled with value set to v.
func NewOptVoiceChatScheduled(v VoiceChatScheduled) OptVoiceChatScheduled {
	return OptVoiceChatScheduled{
		Value: v,
		Set:   true,
	}
}

// OptVoiceChatScheduled is optional VoiceChatScheduled.
type OptVoiceChatScheduled struct {
	Value VoiceChatScheduled
	Set   bool
}

// IsSet returns true if OptVoiceChatScheduled was set.
func (o OptVoiceChatScheduled) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptVoiceChatScheduled) Reset() {
	var v VoiceChatScheduled
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptVoiceChatScheduled) SetTo(v VoiceChatScheduled) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptVoiceChatScheduled) Get() (v VoiceChatScheduled, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// OrderInfo describes #/components/schemas/OrderInfo.
type OrderInfo struct {
	Email           OptString          `json:"email"`
	Name            OptString          `json:"name"`
	PhoneNumber     OptString          `json:"phone_number"`
	ShippingAddress OptShippingAddress `json:"shipping_address"`
}

// PassportData describes #/components/schemas/PassportData.
type PassportData struct {
	Credentials EncryptedCredentials `json:"credentials"`
}

// PhotoSize describes #/components/schemas/PhotoSize.
type PhotoSize struct {
	FileID       string `json:"file_id"`
	FileSize     OptInt `json:"file_size"`
	FileUniqueID string `json:"file_unique_id"`
	Height       int    `json:"height"`
	Width        int    `json:"width"`
}

// Poll describes #/components/schemas/Poll.
type Poll struct {
	AllowsMultipleAnswers bool      `json:"allows_multiple_answers"`
	CloseDate             OptInt    `json:"close_date"`
	CorrectOptionID       OptInt    `json:"correct_option_id"`
	Explanation           OptString `json:"explanation"`
	ID                    string    `json:"id"`
	IsAnonymous           bool      `json:"is_anonymous"`
	IsClosed              bool      `json:"is_closed"`
	OpenPeriod            OptInt    `json:"open_period"`
	Question              string    `json:"question"`
	TotalVoterCount       int       `json:"total_voter_count"`
	Type                  string    `json:"type"`
}

// ProximityAlertTriggered describes #/components/schemas/ProximityAlertTriggered.
type ProximityAlertTriggered struct {
	Distance int  `json:"distance"`
	Traveler User `json:"traveler"`
	Watcher  User `json:"watcher"`
}

// SendAnimation describes #/components/schemas/sendAnimation.
type SendAnimation struct {
	AllowSendingWithoutReply bool   `json:"allow_sending_without_reply"`
	Caption                  string `json:"caption"`
	DisableNotification      bool   `json:"disable_notification"`
	Duration                 int    `json:"duration"`
	Height                   int    `json:"height"`
	ParseMode                string `json:"parse_mode"`
	ReplyToMessageID         int    `json:"reply_to_message_id"`
	Width                    int    `json:"width"`
}

// SendAudio describes #/components/schemas/sendAudio.
type SendAudio struct {
	AllowSendingWithoutReply bool   `json:"allow_sending_without_reply"`
	Caption                  string `json:"caption"`
	DisableNotification      bool   `json:"disable_notification"`
	Duration                 int    `json:"duration"`
	ParseMode                string `json:"parse_mode"`
	Performer                string `json:"performer"`
	ReplyToMessageID         int    `json:"reply_to_message_id"`
	Title                    string `json:"title"`
}

// SendContact describes #/components/schemas/sendContact.
type SendContact struct {
	AllowSendingWithoutReply bool   `json:"allow_sending_without_reply"`
	DisableNotification      bool   `json:"disable_notification"`
	FirstName                string `json:"first_name"`
	LastName                 string `json:"last_name"`
	PhoneNumber              string `json:"phone_number"`
	ReplyToMessageID         int    `json:"reply_to_message_id"`
	Vcard                    string `json:"vcard"`
}

// SendDice describes #/components/schemas/sendDice.
type SendDice struct {
	AllowSendingWithoutReply bool   `json:"allow_sending_without_reply"`
	DisableNotification      bool   `json:"disable_notification"`
	Emoji                    string `json:"emoji"`
	ReplyToMessageID         int    `json:"reply_to_message_id"`
}

// SendDocument describes #/components/schemas/sendDocument.
type SendDocument struct {
	AllowSendingWithoutReply    bool   `json:"allow_sending_without_reply"`
	Caption                     string `json:"caption"`
	DisableContentTypeDetection bool   `json:"disable_content_type_detection"`
	DisableNotification         bool   `json:"disable_notification"`
	ParseMode                   string `json:"parse_mode"`
	ReplyToMessageID            int    `json:"reply_to_message_id"`
}

// SendGame describes #/components/schemas/sendGame.
type SendGame struct {
	AllowSendingWithoutReply bool                 `json:"allow_sending_without_reply"`
	ChatID                   int                  `json:"chat_id"`
	DisableNotification      bool                 `json:"disable_notification"`
	GameShortName            string               `json:"game_short_name"`
	ReplyMarkup              InlineKeyboardMarkup `json:"reply_markup"`
	ReplyToMessageID         int                  `json:"reply_to_message_id"`
}

// SendInvoice describes #/components/schemas/sendInvoice.
type SendInvoice struct {
	AllowSendingWithoutReply  bool                 `json:"allow_sending_without_reply"`
	Currency                  string               `json:"currency"`
	Description               string               `json:"description"`
	DisableNotification       bool                 `json:"disable_notification"`
	IsFlexible                bool                 `json:"is_flexible"`
	MaxTipAmount              int                  `json:"max_tip_amount"`
	NeedEmail                 bool                 `json:"need_email"`
	NeedName                  bool                 `json:"need_name"`
	NeedPhoneNumber           bool                 `json:"need_phone_number"`
	NeedShippingAddress       bool                 `json:"need_shipping_address"`
	Payload                   string               `json:"payload"`
	PhotoHeight               int                  `json:"photo_height"`
	PhotoSize                 int                  `json:"photo_size"`
	PhotoURL                  string               `json:"photo_url"`
	PhotoWidth                int                  `json:"photo_width"`
	ProviderData              string               `json:"provider_data"`
	ProviderToken             string               `json:"provider_token"`
	ReplyMarkup               InlineKeyboardMarkup `json:"reply_markup"`
	ReplyToMessageID          int                  `json:"reply_to_message_id"`
	SendEmailToProvider       bool                 `json:"send_email_to_provider"`
	SendPhoneNumberToProvider bool                 `json:"send_phone_number_to_provider"`
	StartParameter            string               `json:"start_parameter"`
	Title                     string               `json:"title"`
}

// SendLocation describes #/components/schemas/sendLocation.
type SendLocation struct {
	AllowSendingWithoutReply bool    `json:"allow_sending_without_reply"`
	DisableNotification      bool    `json:"disable_notification"`
	Heading                  int     `json:"heading"`
	HorizontalAccuracy       float64 `json:"horizontal_accuracy"`
	Latitude                 float64 `json:"latitude"`
	LivePeriod               int     `json:"live_period"`
	Longitude                float64 `json:"longitude"`
	ProximityAlertRadius     int     `json:"proximity_alert_radius"`
	ReplyToMessageID         int     `json:"reply_to_message_id"`
}

// SendPhoto describes #/components/schemas/sendPhoto.
type SendPhoto struct {
	AllowSendingWithoutReply bool   `json:"allow_sending_without_reply"`
	Caption                  string `json:"caption"`
	DisableNotification      bool   `json:"disable_notification"`
	ParseMode                string `json:"parse_mode"`
	ReplyToMessageID         int    `json:"reply_to_message_id"`
}

// SendPoll describes #/components/schemas/sendPoll.
type SendPoll struct {
	AllowSendingWithoutReply bool   `json:"allow_sending_without_reply"`
	AllowsMultipleAnswers    bool   `json:"allows_multiple_answers"`
	CloseDate                int    `json:"close_date"`
	CorrectOptionID          int    `json:"correct_option_id"`
	DisableNotification      bool   `json:"disable_notification"`
	Explanation              string `json:"explanation"`
	ExplanationParseMode     string `json:"explanation_parse_mode"`
	IsAnonymous              bool   `json:"is_anonymous"`
	IsClosed                 bool   `json:"is_closed"`
	OpenPeriod               int    `json:"open_period"`
	Question                 string `json:"question"`
	ReplyToMessageID         int    `json:"reply_to_message_id"`
	Type                     string `json:"type"`
}

// SendSticker describes #/components/schemas/sendSticker.
type SendSticker struct {
	AllowSendingWithoutReply bool `json:"allow_sending_without_reply"`
	DisableNotification      bool `json:"disable_notification"`
	ReplyToMessageID         int  `json:"reply_to_message_id"`
}

// SendVenue describes #/components/schemas/sendVenue.
type SendVenue struct {
	Address                  string  `json:"address"`
	AllowSendingWithoutReply bool    `json:"allow_sending_without_reply"`
	DisableNotification      bool    `json:"disable_notification"`
	FoursquareID             string  `json:"foursquare_id"`
	FoursquareType           string  `json:"foursquare_type"`
	GooglePlaceID            string  `json:"google_place_id"`
	GooglePlaceType          string  `json:"google_place_type"`
	Latitude                 float64 `json:"latitude"`
	Longitude                float64 `json:"longitude"`
	ReplyToMessageID         int     `json:"reply_to_message_id"`
	Title                    string  `json:"title"`
}

// SendVideo describes #/components/schemas/sendVideo.
type SendVideo struct {
	AllowSendingWithoutReply bool   `json:"allow_sending_without_reply"`
	Caption                  string `json:"caption"`
	DisableNotification      bool   `json:"disable_notification"`
	Duration                 int    `json:"duration"`
	Height                   int    `json:"height"`
	ParseMode                string `json:"parse_mode"`
	ReplyToMessageID         int    `json:"reply_to_message_id"`
	SupportsStreaming        bool   `json:"supports_streaming"`
	Width                    int    `json:"width"`
}

// SendVideoNote describes #/components/schemas/sendVideoNote.
type SendVideoNote struct {
	AllowSendingWithoutReply bool `json:"allow_sending_without_reply"`
	DisableNotification      bool `json:"disable_notification"`
	Duration                 int  `json:"duration"`
	Length                   int  `json:"length"`
	ReplyToMessageID         int  `json:"reply_to_message_id"`
}

// SendVoice describes #/components/schemas/sendVoice.
type SendVoice struct {
	AllowSendingWithoutReply bool   `json:"allow_sending_without_reply"`
	Caption                  string `json:"caption"`
	DisableNotification      bool   `json:"disable_notification"`
	Duration                 int    `json:"duration"`
	ParseMode                string `json:"parse_mode"`
	ReplyToMessageID         int    `json:"reply_to_message_id"`
}

// ShippingAddress describes #/components/schemas/ShippingAddress.
type ShippingAddress struct {
	City        string `json:"city"`
	CountryCode string `json:"country_code"`
	PostCode    string `json:"post_code"`
	State       string `json:"state"`
	StreetLine1 string `json:"street_line1"`
	StreetLine2 string `json:"street_line2"`
}

// Sticker describes #/components/schemas/Sticker.
type Sticker struct {
	Emoji        OptString       `json:"emoji"`
	FileID       string          `json:"file_id"`
	FileSize     OptInt          `json:"file_size"`
	FileUniqueID string          `json:"file_unique_id"`
	Height       int             `json:"height"`
	IsAnimated   bool            `json:"is_animated"`
	MaskPosition OptMaskPosition `json:"mask_position"`
	SetName      OptString       `json:"set_name"`
	Thumb        OptPhotoSize    `json:"thumb"`
	Width        int             `json:"width"`
}

// StopPoll describes #/components/schemas/stopPoll.
type StopPoll struct {
	MessageID   int                  `json:"message_id"`
	ReplyMarkup InlineKeyboardMarkup `json:"reply_markup"`
}

// SuccessfulPayment describes #/components/schemas/SuccessfulPayment.
type SuccessfulPayment struct {
	Currency                string       `json:"currency"`
	InvoicePayload          string       `json:"invoice_payload"`
	OrderInfo               OptOrderInfo `json:"order_info"`
	ProviderPaymentChargeID string       `json:"provider_payment_charge_id"`
	ShippingOptionID        OptString    `json:"shipping_option_id"`
	TelegramPaymentChargeID string       `json:"telegram_payment_charge_id"`
	TotalAmount             int          `json:"total_amount"`
}

// User describes #/components/schemas/User.
type User struct {
	CanJoinGroups           OptBool   `json:"can_join_groups"`
	CanReadAllGroupMessages OptBool   `json:"can_read_all_group_messages"`
	FirstName               string    `json:"first_name"`
	ID                      int       `json:"id"`
	IsBot                   bool      `json:"is_bot"`
	LanguageCode            OptString `json:"language_code"`
	LastName                OptString `json:"last_name"`
	SupportsInlineQueries   OptBool   `json:"supports_inline_queries"`
	Username                OptString `json:"username"`
}

// Venue describes #/components/schemas/Venue.
type Venue struct {
	Address         string    `json:"address"`
	FoursquareID    OptString `json:"foursquare_id"`
	FoursquareType  OptString `json:"foursquare_type"`
	GooglePlaceID   OptString `json:"google_place_id"`
	GooglePlaceType OptString `json:"google_place_type"`
	Location        Location  `json:"location"`
	Title           string    `json:"title"`
}

// Video describes #/components/schemas/Video.
type Video struct {
	Duration     int          `json:"duration"`
	FileID       string       `json:"file_id"`
	FileName     OptString    `json:"file_name"`
	FileSize     OptInt       `json:"file_size"`
	FileUniqueID string       `json:"file_unique_id"`
	Height       int          `json:"height"`
	MimeType     OptString    `json:"mime_type"`
	Thumb        OptPhotoSize `json:"thumb"`
	Width        int          `json:"width"`
}

// VideoNote describes #/components/schemas/VideoNote.
type VideoNote struct {
	Duration     int          `json:"duration"`
	FileID       string       `json:"file_id"`
	FileSize     OptInt       `json:"file_size"`
	FileUniqueID string       `json:"file_unique_id"`
	Length       int          `json:"length"`
	Thumb        OptPhotoSize `json:"thumb"`
}

// Voice describes #/components/schemas/Voice.
type Voice struct {
	Duration     int       `json:"duration"`
	FileID       string    `json:"file_id"`
	FileSize     OptInt    `json:"file_size"`
	FileUniqueID string    `json:"file_unique_id"`
	MimeType     OptString `json:"mime_type"`
}

// VoiceChatEnded describes #/components/schemas/VoiceChatEnded.
type VoiceChatEnded struct {
	Duration int `json:"duration"`
}

type VoiceChatParticipantsInvited struct{}

// VoiceChatScheduled describes #/components/schemas/VoiceChatScheduled.
type VoiceChatScheduled struct {
	StartDate int `json:"start_date"`
}

type VoiceChatStarted struct{}
