// Code generated by ogen, DO NOT EDIT.

package oas

import (
	"bytes"
	"context"
	"errors"
	"fmt"
	"io"
	"math"
	"net"
	"net/http"
	"net/url"
	"regexp"
	"sort"
	"strconv"
	"strings"
	"time"

	"github.com/go-chi/chi/v5"
	"github.com/google/uuid"
	"github.com/ogen-go/ogen/conv"
	ht "github.com/ogen-go/ogen/http"
	"github.com/ogen-go/ogen/json"
	"github.com/ogen-go/ogen/otelogen"
	"github.com/ogen-go/ogen/uri"
	"github.com/ogen-go/ogen/validate"
	"go.opentelemetry.io/otel"
	"go.opentelemetry.io/otel/metric"
	"go.opentelemetry.io/otel/trace"
)

// No-op definition for keeping imports.
var (
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = sort.Ints
	_ = chi.Context{}
	_ = http.MethodGet
	_ = io.Copy
	_ = json.Marshal
	_ = bytes.NewReader
	_ = strconv.ParseInt
	_ = time.Time{}
	_ = conv.ToInt32
	_ = uuid.UUID{}
	_ = uri.PathEncoder{}
	_ = url.URL{}
	_ = math.Mod
	_ = validate.Int{}
	_ = ht.NewRequest
	_ = net.IP{}
	_ = otelogen.Version
	_ = trace.TraceIDFromHex
	_ = otel.GetTracerProvider
	_ = metric.NewNoopMeterProvider
	_ = regexp.MustCompile
)

// Ref: #/components/schemas/addStickerToSet
type AddStickerToSet struct {
	UserID       int             `json:"user_id"`
	Name         string          `json:"name"`
	PNGSticker   OptString       `json:"png_sticker"`
	TgsSticker   OptString       `json:"tgs_sticker"`
	Emojis       string          `json:"emojis"`
	MaskPosition OptMaskPosition `json:"mask_position"`
}

// Ref: #/components/schemas/Animation
type Animation struct {
	FileID       string       `json:"file_id"`
	FileUniqueID string       `json:"file_unique_id"`
	Width        int          `json:"width"`
	Height       int          `json:"height"`
	Duration     int          `json:"duration"`
	Thumb        OptPhotoSize `json:"thumb"`
	FileName     OptString    `json:"file_name"`
	MimeType     OptString    `json:"mime_type"`
	FileSize     OptInt       `json:"file_size"`
}

// Ref: #/components/schemas/answerCallbackQuery
type AnswerCallbackQuery struct {
	CallbackQueryID string    `json:"callback_query_id"`
	Text            OptString `json:"text"`
	ShowAlert       OptBool   `json:"show_alert"`
	URL             OptURL    `json:"url"`
	CacheTime       OptInt    `json:"cache_time"`
}

// Ref: #/components/schemas/answerInlineQuery
type AnswerInlineQuery struct {
	InlineQueryID     string              `json:"inline_query_id"`
	Results           []InlineQueryResult `json:"results"`
	CacheTime         OptInt              `json:"cache_time"`
	IsPersonal        OptBool             `json:"is_personal"`
	NextOffset        OptString           `json:"next_offset"`
	SwitchPmText      OptString           `json:"switch_pm_text"`
	SwitchPmParameter OptString           `json:"switch_pm_parameter"`
}

// Ref: #/components/schemas/answerPreCheckoutQuery
type AnswerPreCheckoutQuery struct {
	PreCheckoutQueryID string    `json:"pre_checkout_query_id"`
	Ok                 bool      `json:"ok"`
	ErrorMessage       OptString `json:"error_message"`
}

// Ref: #/components/schemas/answerShippingQuery
type AnswerShippingQuery struct {
	ShippingQueryID string           `json:"shipping_query_id"`
	Ok              bool             `json:"ok"`
	ShippingOptions []ShippingOption `json:"shipping_options"`
	ErrorMessage    OptString        `json:"error_message"`
}

// Ref: #/components/schemas/Audio
type Audio struct {
	FileID       string       `json:"file_id"`
	FileUniqueID string       `json:"file_unique_id"`
	Duration     int          `json:"duration"`
	Performer    OptString    `json:"performer"`
	Title        OptString    `json:"title"`
	FileName     OptString    `json:"file_name"`
	MimeType     OptString    `json:"mime_type"`
	FileSize     OptInt       `json:"file_size"`
	Thumb        OptPhotoSize `json:"thumb"`
}

// Ref: #/components/schemas/banChatMember
type BanChatMember struct {
	ChatID         ID      `json:"chat_id"`
	UserID         int     `json:"user_id"`
	UntilDate      OptInt  `json:"until_date"`
	RevokeMessages OptBool `json:"revoke_messages"`
}

// Ref: #/components/schemas/BotCommand
type BotCommand struct {
	Command     string `json:"command"`
	Description string `json:"description"`
}

// Ref: #/components/schemas/BotCommandScope
type BotCommandScope struct{}

// Ref: #/components/schemas/Chat
type Chat struct {
	ID                    int                `json:"id"`
	Type                  string             `json:"type"`
	Title                 OptString          `json:"title"`
	Username              OptString          `json:"username"`
	FirstName             OptString          `json:"first_name"`
	LastName              OptString          `json:"last_name"`
	Photo                 OptChatPhoto       `json:"photo"`
	Bio                   OptString          `json:"bio"`
	Description           OptString          `json:"description"`
	InviteLink            OptString          `json:"invite_link"`
	PinnedMessage         OptMessage         `json:"pinned_message"`
	Permissions           OptChatPermissions `json:"permissions"`
	SlowModeDelay         OptInt             `json:"slow_mode_delay"`
	MessageAutoDeleteTime OptInt             `json:"message_auto_delete_time"`
	StickerSetName        OptString          `json:"sticker_set_name"`
	CanSetStickerSet      OptBool            `json:"can_set_sticker_set"`
	LinkedChatID          OptInt             `json:"linked_chat_id"`
	Location              OptChatLocation    `json:"location"`
}

// Ref: #/components/schemas/ChatLocation
type ChatLocation struct {
	Location Location `json:"location"`
	Address  string   `json:"address"`
}

// Ref: #/components/schemas/ChatPermissions
type ChatPermissions struct {
	CanSendMessages       OptBool `json:"can_send_messages"`
	CanSendMediaMessages  OptBool `json:"can_send_media_messages"`
	CanSendPolls          OptBool `json:"can_send_polls"`
	CanSendOtherMessages  OptBool `json:"can_send_other_messages"`
	CanAddWebPagePreviews OptBool `json:"can_add_web_page_previews"`
	CanChangeInfo         OptBool `json:"can_change_info"`
	CanInviteUsers        OptBool `json:"can_invite_users"`
	CanPinMessages        OptBool `json:"can_pin_messages"`
}

// Ref: #/components/schemas/ChatPhoto
type ChatPhoto struct {
	SmallFileID       string `json:"small_file_id"`
	SmallFileUniqueID string `json:"small_file_unique_id"`
	BigFileID         string `json:"big_file_id"`
	BigFileUniqueID   string `json:"big_file_unique_id"`
}

// Ref: #/components/schemas/Contact
type Contact struct {
	PhoneNumber string    `json:"phone_number"`
	FirstName   string    `json:"first_name"`
	LastName    OptString `json:"last_name"`
	UserID      OptInt    `json:"user_id"`
	Vcard       OptString `json:"vcard"`
}

// Ref: #/components/schemas/copyMessage
type CopyMessage struct {
	ChatID                   ID              `json:"chat_id"`
	FromChatID               ID              `json:"from_chat_id"`
	MessageID                int             `json:"message_id"`
	Caption                  OptString       `json:"caption"`
	ParseMode                OptString       `json:"parse_mode"`
	CaptionEntities          []MessageEntity `json:"caption_entities"`
	DisableNotification      OptBool         `json:"disable_notification"`
	ReplyToMessageID         OptInt          `json:"reply_to_message_id"`
	AllowSendingWithoutReply OptBool         `json:"allow_sending_without_reply"`
}

// Ref: #/components/schemas/createChatInviteLink
type CreateChatInviteLink struct {
	ChatID      ID     `json:"chat_id"`
	ExpireDate  OptInt `json:"expire_date"`
	MemberLimit OptInt `json:"member_limit"`
}

// Ref: #/components/schemas/createNewStickerSet
type CreateNewStickerSet struct {
	UserID        int             `json:"user_id"`
	Name          string          `json:"name"`
	Title         string          `json:"title"`
	PNGSticker    OptString       `json:"png_sticker"`
	TgsSticker    OptString       `json:"tgs_sticker"`
	Emojis        string          `json:"emojis"`
	ContainsMasks OptBool         `json:"contains_masks"`
	MaskPosition  OptMaskPosition `json:"mask_position"`
}

// Ref: #/components/schemas/deleteChatPhoto
type DeleteChatPhoto struct {
	ChatID ID `json:"chat_id"`
}

// Ref: #/components/schemas/deleteChatStickerSet
type DeleteChatStickerSet struct {
	ChatID ID `json:"chat_id"`
}

// Ref: #/components/schemas/deleteMessage
type DeleteMessage struct {
	ChatID    ID  `json:"chat_id"`
	MessageID int `json:"message_id"`
}

// Ref: #/components/schemas/deleteMyCommands
type DeleteMyCommands struct {
	Scope        *BotCommandScope `json:"scope"`
	LanguageCode OptString        `json:"language_code"`
}

// Ref: #/components/schemas/deleteStickerFromSet
type DeleteStickerFromSet struct {
	Sticker string `json:"sticker"`
}

// Ref: #/components/schemas/deleteWebhook
type DeleteWebhook struct {
	DropPendingUpdates OptBool `json:"drop_pending_updates"`
}

// Ref: #/components/schemas/Dice
type Dice struct {
	Emoji string `json:"emoji"`
	Value int    `json:"value"`
}

// Ref: #/components/schemas/Document
type Document struct {
	FileID       string       `json:"file_id"`
	FileUniqueID string       `json:"file_unique_id"`
	Thumb        OptPhotoSize `json:"thumb"`
	FileName     OptString    `json:"file_name"`
	MimeType     OptString    `json:"mime_type"`
	FileSize     OptInt       `json:"file_size"`
}

// Ref: #/components/schemas/editChatInviteLink
type EditChatInviteLink struct {
	ChatID      ID     `json:"chat_id"`
	InviteLink  string `json:"invite_link"`
	ExpireDate  OptInt `json:"expire_date"`
	MemberLimit OptInt `json:"member_limit"`
}

// Ref: #/components/schemas/editMessageCaption
type EditMessageCaption struct {
	ChatID          *ID                     `json:"chat_id"`
	MessageID       OptInt                  `json:"message_id"`
	InlineMessageID OptString               `json:"inline_message_id"`
	Caption         OptString               `json:"caption"`
	ParseMode       OptString               `json:"parse_mode"`
	CaptionEntities []MessageEntity         `json:"caption_entities"`
	ReplyMarkup     OptInlineKeyboardMarkup `json:"reply_markup"`
}

// Ref: #/components/schemas/editMessageLiveLocation
type EditMessageLiveLocation struct {
	ChatID               *ID                     `json:"chat_id"`
	MessageID            OptInt                  `json:"message_id"`
	InlineMessageID      OptString               `json:"inline_message_id"`
	Latitude             float64                 `json:"latitude"`
	Longitude            float64                 `json:"longitude"`
	HorizontalAccuracy   OptFloat64              `json:"horizontal_accuracy"`
	Heading              OptInt                  `json:"heading"`
	ProximityAlertRadius OptInt                  `json:"proximity_alert_radius"`
	ReplyMarkup          OptInlineKeyboardMarkup `json:"reply_markup"`
}

// Ref: #/components/schemas/editMessageMedia
type EditMessageMedia struct {
	ChatID          *ID                     `json:"chat_id"`
	MessageID       OptInt                  `json:"message_id"`
	InlineMessageID OptString               `json:"inline_message_id"`
	Media           InputMedia              `json:"media"`
	ReplyMarkup     OptInlineKeyboardMarkup `json:"reply_markup"`
}

// Ref: #/components/schemas/editMessageReplyMarkup
type EditMessageReplyMarkup struct {
	ChatID          *ID                     `json:"chat_id"`
	MessageID       OptInt                  `json:"message_id"`
	InlineMessageID OptString               `json:"inline_message_id"`
	ReplyMarkup     OptInlineKeyboardMarkup `json:"reply_markup"`
}

// Ref: #/components/schemas/editMessageText
type EditMessageText struct {
	ChatID                *ID                     `json:"chat_id"`
	MessageID             OptInt                  `json:"message_id"`
	InlineMessageID       OptString               `json:"inline_message_id"`
	Text                  string                  `json:"text"`
	ParseMode             OptString               `json:"parse_mode"`
	Entities              []MessageEntity         `json:"entities"`
	DisableWebPagePreview OptBool                 `json:"disable_web_page_preview"`
	ReplyMarkup           OptInlineKeyboardMarkup `json:"reply_markup"`
}

// Ref: #/components/schemas/EncryptedCredentials
type EncryptedCredentials struct {
	Data   string `json:"data"`
	Hash   string `json:"hash"`
	Secret string `json:"secret"`
}

// Ref: #/components/schemas/EncryptedPassportElement
type EncryptedPassportElement struct {
	Type        string          `json:"type"`
	Data        OptString       `json:"data"`
	PhoneNumber OptString       `json:"phone_number"`
	Email       OptString       `json:"email"`
	Files       []PassportFile  `json:"files"`
	FrontSide   OptPassportFile `json:"front_side"`
	ReverseSide OptPassportFile `json:"reverse_side"`
	Selfie      OptPassportFile `json:"selfie"`
	Translation []PassportFile  `json:"translation"`
	Hash        string          `json:"hash"`
}

// Ref: #/components/schemas/Error
type Error struct {
	Description string      `json:"description"`
	ErrorCode   int         `json:"error_code"`
	Ok          bool        `json:"ok"`
	Parameters  OptResponse `json:"parameters"`
}

// ErrorStatusCode wraps Error with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   Error
}

func (*ErrorStatusCode) addStickerToSetRes()                 {}
func (*ErrorStatusCode) answerCallbackQueryRes()             {}
func (*ErrorStatusCode) answerInlineQueryRes()               {}
func (*ErrorStatusCode) answerPreCheckoutQueryRes()          {}
func (*ErrorStatusCode) answerShippingQueryRes()             {}
func (*ErrorStatusCode) banChatMemberRes()                   {}
func (*ErrorStatusCode) copyMessageRes()                     {}
func (*ErrorStatusCode) createChatInviteLinkRes()            {}
func (*ErrorStatusCode) createNewStickerSetRes()             {}
func (*ErrorStatusCode) deleteChatPhotoRes()                 {}
func (*ErrorStatusCode) deleteChatStickerSetRes()            {}
func (*ErrorStatusCode) deleteMessageRes()                   {}
func (*ErrorStatusCode) deleteMyCommandsRes()                {}
func (*ErrorStatusCode) deleteStickerFromSetRes()            {}
func (*ErrorStatusCode) deleteWebhookRes()                   {}
func (*ErrorStatusCode) editChatInviteLinkRes()              {}
func (*ErrorStatusCode) editMessageCaptionRes()              {}
func (*ErrorStatusCode) editMessageLiveLocationRes()         {}
func (*ErrorStatusCode) editMessageMediaRes()                {}
func (*ErrorStatusCode) editMessageReplyMarkupRes()          {}
func (*ErrorStatusCode) editMessageTextRes()                 {}
func (*ErrorStatusCode) exportChatInviteLinkRes()            {}
func (*ErrorStatusCode) forwardMessageRes()                  {}
func (*ErrorStatusCode) getChatAdministratorsRes()           {}
func (*ErrorStatusCode) getChatMemberCountRes()              {}
func (*ErrorStatusCode) getChatMemberRes()                   {}
func (*ErrorStatusCode) getChatRes()                         {}
func (*ErrorStatusCode) getFileRes()                         {}
func (*ErrorStatusCode) getGameHighScoresRes()               {}
func (*ErrorStatusCode) getMeRes()                           {}
func (*ErrorStatusCode) getMyCommandsRes()                   {}
func (*ErrorStatusCode) getStickerSetRes()                   {}
func (*ErrorStatusCode) getUpdatesRes()                      {}
func (*ErrorStatusCode) getUserProfilePhotosRes()            {}
func (*ErrorStatusCode) leaveChatRes()                       {}
func (*ErrorStatusCode) pinChatMessageRes()                  {}
func (*ErrorStatusCode) promoteChatMemberRes()               {}
func (*ErrorStatusCode) restrictChatMemberRes()              {}
func (*ErrorStatusCode) revokeChatInviteLinkRes()            {}
func (*ErrorStatusCode) sendAnimationRes()                   {}
func (*ErrorStatusCode) sendAudioRes()                       {}
func (*ErrorStatusCode) sendChatActionRes()                  {}
func (*ErrorStatusCode) sendContactRes()                     {}
func (*ErrorStatusCode) sendDiceRes()                        {}
func (*ErrorStatusCode) sendDocumentRes()                    {}
func (*ErrorStatusCode) sendGameRes()                        {}
func (*ErrorStatusCode) sendInvoiceRes()                     {}
func (*ErrorStatusCode) sendLocationRes()                    {}
func (*ErrorStatusCode) sendMediaGroupRes()                  {}
func (*ErrorStatusCode) sendMessageRes()                     {}
func (*ErrorStatusCode) sendPhotoRes()                       {}
func (*ErrorStatusCode) sendPollRes()                        {}
func (*ErrorStatusCode) sendStickerRes()                     {}
func (*ErrorStatusCode) sendVenueRes()                       {}
func (*ErrorStatusCode) sendVideoNoteRes()                   {}
func (*ErrorStatusCode) sendVideoRes()                       {}
func (*ErrorStatusCode) sendVoiceRes()                       {}
func (*ErrorStatusCode) setChatAdministratorCustomTitleRes() {}
func (*ErrorStatusCode) setChatDescriptionRes()              {}
func (*ErrorStatusCode) setChatPermissionsRes()              {}
func (*ErrorStatusCode) setChatPhotoRes()                    {}
func (*ErrorStatusCode) setChatStickerSetRes()               {}
func (*ErrorStatusCode) setChatTitleRes()                    {}
func (*ErrorStatusCode) setGameScoreRes()                    {}
func (*ErrorStatusCode) setMyCommandsRes()                   {}
func (*ErrorStatusCode) setPassportDataErrorsRes()           {}
func (*ErrorStatusCode) setStickerPositionInSetRes()         {}
func (*ErrorStatusCode) setStickerSetThumbRes()              {}
func (*ErrorStatusCode) setWebhookRes()                      {}
func (*ErrorStatusCode) stopMessageLiveLocationRes()         {}
func (*ErrorStatusCode) stopPollRes()                        {}
func (*ErrorStatusCode) unbanChatMemberRes()                 {}
func (*ErrorStatusCode) unpinAllChatMessagesRes()            {}
func (*ErrorStatusCode) unpinChatMessageRes()                {}
func (*ErrorStatusCode) uploadStickerFileRes()               {}

// Ref: #/components/schemas/exportChatInviteLink
type ExportChatInviteLink struct {
	ChatID ID `json:"chat_id"`
}

// Ref: #/components/schemas/forwardMessage
type ForwardMessage struct {
	ChatID              ID      `json:"chat_id"`
	FromChatID          ID      `json:"from_chat_id"`
	DisableNotification OptBool `json:"disable_notification"`
	MessageID           int     `json:"message_id"`
}

// Ref: #/components/schemas/Game
type Game struct {
	Title        string          `json:"title"`
	Description  string          `json:"description"`
	Photo        []PhotoSize     `json:"photo"`
	Text         OptString       `json:"text"`
	TextEntities []MessageEntity `json:"text_entities"`
	Animation    OptAnimation    `json:"animation"`
}

// Ref: #/components/schemas/getChat
type GetChat struct {
	ChatID ID `json:"chat_id"`
}

// Ref: #/components/schemas/getChatAdministrators
type GetChatAdministrators struct {
	ChatID ID `json:"chat_id"`
}

// Ref: #/components/schemas/getChatMember
type GetChatMember struct {
	ChatID ID  `json:"chat_id"`
	UserID int `json:"user_id"`
}

// Ref: #/components/schemas/getChatMemberCount
type GetChatMemberCount struct {
	ChatID ID `json:"chat_id"`
}

// Ref: #/components/schemas/getFile
type GetFile struct {
	FileID string `json:"file_id"`
}

// Ref: #/components/schemas/getGameHighScores
type GetGameHighScores struct {
	UserID          int       `json:"user_id"`
	ChatID          OptInt    `json:"chat_id"`
	MessageID       OptInt    `json:"message_id"`
	InlineMessageID OptString `json:"inline_message_id"`
}

// Ref: #/components/schemas/getMyCommands
type GetMyCommands struct {
	Scope        *BotCommandScope `json:"scope"`
	LanguageCode OptString        `json:"language_code"`
}

// Ref: #/components/schemas/getStickerSet
type GetStickerSet struct {
	Name string `json:"name"`
}

// Ref: #/components/schemas/getUpdates
type GetUpdates struct {
	Offset         OptInt   `json:"offset"`
	Limit          OptInt   `json:"limit"`
	Timeout        OptInt   `json:"timeout"`
	AllowedUpdates []string `json:"allowed_updates"`
}

// Ref: #/components/schemas/getUserProfilePhotos
type GetUserProfilePhotos struct {
	UserID int    `json:"user_id"`
	Offset OptInt `json:"offset"`
	Limit  OptInt `json:"limit"`
}

// Ref: #/components/schemas/ID
// ID represents sum type.
type ID struct {
	Type   IDType // switch on this field
	String string
	Int    int
}

// IDType is oneOf type of ID.
type IDType string

// Possible values for IDType.
const (
	StringID IDType = "string"
	IntID    IDType = "int"
)

// IsString reports whether ID is string.
func (s ID) IsString() bool { return s.Type == StringID }

// IsInt reports whether ID is int.
func (s ID) IsInt() bool { return s.Type == IntID }

// SetString sets ID to string.
func (s *ID) SetString(v string) {
	s.Type = StringID
	s.String = v
}

// GetString returns string and true boolean if ID is string.
func (s ID) GetString() (v string, ok bool) {
	if !s.IsString() {
		return v, false
	}
	return s.String, true
}

// NewStringID returns new ID from string.
func NewStringID(v string) ID {
	var s ID
	s.SetString(v)
	return s
}

// SetInt sets ID to int.
func (s *ID) SetInt(v int) {
	s.Type = IntID
	s.Int = v
}

// GetInt returns int and true boolean if ID is int.
func (s ID) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntID returns new ID from int.
func NewIntID(v int) ID {
	var s ID
	s.SetInt(v)
	return s
}

type InlineKeyboardMarkup string

type InlineQueryResult string

// Ref: #/components/schemas/InputMedia
type InputMedia struct{}

// Ref: #/components/schemas/Invoice
type Invoice struct {
	Title          string `json:"title"`
	Description    string `json:"description"`
	StartParameter string `json:"start_parameter"`
	Currency       string `json:"currency"`
	TotalAmount    int    `json:"total_amount"`
}

// Ref: #/components/schemas/LabeledPrice
type LabeledPrice struct {
	Label  string `json:"label"`
	Amount int    `json:"amount"`
}

// Ref: #/components/schemas/leaveChat
type LeaveChat struct {
	ChatID ID `json:"chat_id"`
}

// Ref: #/components/schemas/Location
type Location struct {
	Longitude            float64    `json:"longitude"`
	Latitude             float64    `json:"latitude"`
	HorizontalAccuracy   OptFloat64 `json:"horizontal_accuracy"`
	LivePeriod           OptInt     `json:"live_period"`
	Heading              OptInt     `json:"heading"`
	ProximityAlertRadius OptInt     `json:"proximity_alert_radius"`
}

// Ref: #/components/schemas/MaskPosition
type MaskPosition struct {
	Point  string  `json:"point"`
	XShift float64 `json:"x_shift"`
	YShift float64 `json:"y_shift"`
	Scale  float64 `json:"scale"`
}

// Ref: #/components/schemas/Message
type Message struct {
	MessageID                     int                              `json:"message_id"`
	From                          OptUser                          `json:"from"`
	SenderChat                    *Chat                            `json:"sender_chat"`
	Date                          int                              `json:"date"`
	Chat                          *Chat                            `json:"chat"`
	ForwardFrom                   OptUser                          `json:"forward_from"`
	ForwardFromChat               *Chat                            `json:"forward_from_chat"`
	ForwardFromMessageID          OptInt                           `json:"forward_from_message_id"`
	ForwardSignature              OptString                        `json:"forward_signature"`
	ForwardSenderName             OptString                        `json:"forward_sender_name"`
	ForwardDate                   OptInt                           `json:"forward_date"`
	ReplyToMessage                *Message                         `json:"reply_to_message"`
	ViaBot                        OptUser                          `json:"via_bot"`
	EditDate                      OptInt                           `json:"edit_date"`
	MediaGroupID                  OptString                        `json:"media_group_id"`
	AuthorSignature               OptString                        `json:"author_signature"`
	Text                          OptString                        `json:"text"`
	Entities                      []MessageEntity                  `json:"entities"`
	Animation                     OptAnimation                     `json:"animation"`
	Audio                         OptAudio                         `json:"audio"`
	Document                      OptDocument                      `json:"document"`
	Photo                         []PhotoSize                      `json:"photo"`
	Sticker                       OptSticker                       `json:"sticker"`
	Video                         OptVideo                         `json:"video"`
	VideoNote                     OptVideoNote                     `json:"video_note"`
	Voice                         OptVoice                         `json:"voice"`
	Caption                       OptString                        `json:"caption"`
	CaptionEntities               []MessageEntity                  `json:"caption_entities"`
	Contact                       OptContact                       `json:"contact"`
	Dice                          OptDice                          `json:"dice"`
	Game                          OptGame                          `json:"game"`
	Poll                          OptPoll                          `json:"poll"`
	Venue                         OptVenue                         `json:"venue"`
	Location                      OptLocation                      `json:"location"`
	NewChatMembers                []User                           `json:"new_chat_members"`
	LeftChatMember                OptUser                          `json:"left_chat_member"`
	NewChatTitle                  OptString                        `json:"new_chat_title"`
	NewChatPhoto                  []PhotoSize                      `json:"new_chat_photo"`
	DeleteChatPhoto               OptBool                          `json:"delete_chat_photo"`
	GroupChatCreated              OptBool                          `json:"group_chat_created"`
	SupergroupChatCreated         OptBool                          `json:"supergroup_chat_created"`
	ChannelChatCreated            OptBool                          `json:"channel_chat_created"`
	MessageAutoDeleteTimerChanged OptMessageAutoDeleteTimerChanged `json:"message_auto_delete_timer_changed"`
	MigrateToChatID               OptInt                           `json:"migrate_to_chat_id"`
	MigrateFromChatID             OptInt                           `json:"migrate_from_chat_id"`
	PinnedMessage                 *Message                         `json:"pinned_message"`
	Invoice                       OptInvoice                       `json:"invoice"`
	SuccessfulPayment             OptSuccessfulPayment             `json:"successful_payment"`
	ConnectedWebsite              OptString                        `json:"connected_website"`
	PassportData                  OptPassportData                  `json:"passport_data"`
	ProximityAlertTriggered       OptProximityAlertTriggered       `json:"proximity_alert_triggered"`
	VoiceChatScheduled            OptVoiceChatScheduled            `json:"voice_chat_scheduled"`
	VoiceChatStarted              *VoiceChatStarted                `json:"voice_chat_started"`
	VoiceChatEnded                OptVoiceChatEnded                `json:"voice_chat_ended"`
	VoiceChatParticipantsInvited  OptVoiceChatParticipantsInvited  `json:"voice_chat_participants_invited"`
	ReplyMarkup                   OptInlineKeyboardMarkup          `json:"reply_markup"`
}

// Ref: #/components/schemas/MessageAutoDeleteTimerChanged
type MessageAutoDeleteTimerChanged struct {
	MessageAutoDeleteTime int `json:"message_auto_delete_time"`
}

// Ref: #/components/schemas/MessageEntity
type MessageEntity struct {
	Type     string    `json:"type"`
	Offset   int       `json:"offset"`
	Length   int       `json:"length"`
	URL      OptURL    `json:"url"`
	User     OptUser   `json:"user"`
	Language OptString `json:"language"`
}

// NewOptAnimation returns new OptAnimation with value set to v.
func NewOptAnimation(v Animation) OptAnimation {
	return OptAnimation{
		Value: v,
		Set:   true,
	}
}

// OptAnimation is optional Animation.
type OptAnimation struct {
	Value Animation
	Set   bool
}

// IsSet returns true if OptAnimation was set.
func (o OptAnimation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAnimation) Reset() {
	var v Animation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAnimation) SetTo(v Animation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAnimation) Get() (v Animation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptAudio returns new OptAudio with value set to v.
func NewOptAudio(v Audio) OptAudio {
	return OptAudio{
		Value: v,
		Set:   true,
	}
}

// OptAudio is optional Audio.
type OptAudio struct {
	Value Audio
	Set   bool
}

// IsSet returns true if OptAudio was set.
func (o OptAudio) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAudio) Reset() {
	var v Audio
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAudio) SetTo(v Audio) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAudio) Get() (v Audio, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptChatLocation returns new OptChatLocation with value set to v.
func NewOptChatLocation(v ChatLocation) OptChatLocation {
	return OptChatLocation{
		Value: v,
		Set:   true,
	}
}

// OptChatLocation is optional ChatLocation.
type OptChatLocation struct {
	Value ChatLocation
	Set   bool
}

// IsSet returns true if OptChatLocation was set.
func (o OptChatLocation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptChatLocation) Reset() {
	var v ChatLocation
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptChatLocation) SetTo(v ChatLocation) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptChatLocation) Get() (v ChatLocation, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptChatPermissions returns new OptChatPermissions with value set to v.
func NewOptChatPermissions(v ChatPermissions) OptChatPermissions {
	return OptChatPermissions{
		Value: v,
		Set:   true,
	}
}

// OptChatPermissions is optional ChatPermissions.
type OptChatPermissions struct {
	Value ChatPermissions
	Set   bool
}

// IsSet returns true if OptChatPermissions was set.
func (o OptChatPermissions) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptChatPermissions) Reset() {
	var v ChatPermissions
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptChatPermissions) SetTo(v ChatPermissions) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptChatPermissions) Get() (v ChatPermissions, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptChatPhoto returns new OptChatPhoto with value set to v.
func NewOptChatPhoto(v ChatPhoto) OptChatPhoto {
	return OptChatPhoto{
		Value: v,
		Set:   true,
	}
}

// OptChatPhoto is optional ChatPhoto.
type OptChatPhoto struct {
	Value ChatPhoto
	Set   bool
}

// IsSet returns true if OptChatPhoto was set.
func (o OptChatPhoto) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptChatPhoto) Reset() {
	var v ChatPhoto
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptChatPhoto) SetTo(v ChatPhoto) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptChatPhoto) Get() (v ChatPhoto, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptContact returns new OptContact with value set to v.
func NewOptContact(v Contact) OptContact {
	return OptContact{
		Value: v,
		Set:   true,
	}
}

// OptContact is optional Contact.
type OptContact struct {
	Value Contact
	Set   bool
}

// IsSet returns true if OptContact was set.
func (o OptContact) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptContact) Reset() {
	var v Contact
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptContact) SetTo(v Contact) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptContact) Get() (v Contact, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptDice returns new OptDice with value set to v.
func NewOptDice(v Dice) OptDice {
	return OptDice{
		Value: v,
		Set:   true,
	}
}

// OptDice is optional Dice.
type OptDice struct {
	Value Dice
	Set   bool
}

// IsSet returns true if OptDice was set.
func (o OptDice) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDice) Reset() {
	var v Dice
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDice) SetTo(v Dice) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDice) Get() (v Dice, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptDocument returns new OptDocument with value set to v.
func NewOptDocument(v Document) OptDocument {
	return OptDocument{
		Value: v,
		Set:   true,
	}
}

// OptDocument is optional Document.
type OptDocument struct {
	Value Document
	Set   bool
}

// IsSet returns true if OptDocument was set.
func (o OptDocument) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDocument) Reset() {
	var v Document
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDocument) SetTo(v Document) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDocument) Get() (v Document, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptGame returns new OptGame with value set to v.
func NewOptGame(v Game) OptGame {
	return OptGame{
		Value: v,
		Set:   true,
	}
}

// OptGame is optional Game.
type OptGame struct {
	Value Game
	Set   bool
}

// IsSet returns true if OptGame was set.
func (o OptGame) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGame) Reset() {
	var v Game
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGame) SetTo(v Game) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGame) Get() (v Game, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptInlineKeyboardMarkup returns new OptInlineKeyboardMarkup with value set to v.
func NewOptInlineKeyboardMarkup(v InlineKeyboardMarkup) OptInlineKeyboardMarkup {
	return OptInlineKeyboardMarkup{
		Value: v,
		Set:   true,
	}
}

// OptInlineKeyboardMarkup is optional InlineKeyboardMarkup.
type OptInlineKeyboardMarkup struct {
	Value InlineKeyboardMarkup
	Set   bool
}

// IsSet returns true if OptInlineKeyboardMarkup was set.
func (o OptInlineKeyboardMarkup) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInlineKeyboardMarkup) Reset() {
	var v InlineKeyboardMarkup
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInlineKeyboardMarkup) SetTo(v InlineKeyboardMarkup) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInlineKeyboardMarkup) Get() (v InlineKeyboardMarkup, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptInt64 returns new OptInt64 with value set to v.
func NewOptInt64(v int64) OptInt64 {
	return OptInt64{
		Value: v,
		Set:   true,
	}
}

// OptInt64 is optional int64.
type OptInt64 struct {
	Value int64
	Set   bool
}

// IsSet returns true if OptInt64 was set.
func (o OptInt64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt64) Reset() {
	var v int64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt64) SetTo(v int64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt64) Get() (v int64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptInvoice returns new OptInvoice with value set to v.
func NewOptInvoice(v Invoice) OptInvoice {
	return OptInvoice{
		Value: v,
		Set:   true,
	}
}

// OptInvoice is optional Invoice.
type OptInvoice struct {
	Value Invoice
	Set   bool
}

// IsSet returns true if OptInvoice was set.
func (o OptInvoice) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInvoice) Reset() {
	var v Invoice
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInvoice) SetTo(v Invoice) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInvoice) Get() (v Invoice, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptLocation returns new OptLocation with value set to v.
func NewOptLocation(v Location) OptLocation {
	return OptLocation{
		Value: v,
		Set:   true,
	}
}

// OptLocation is optional Location.
type OptLocation struct {
	Value Location
	Set   bool
}

// IsSet returns true if OptLocation was set.
func (o OptLocation) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptLocation) Reset() {
	var v Location
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptLocation) SetTo(v Location) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptLocation) Get() (v Location, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptMaskPosition returns new OptMaskPosition with value set to v.
func NewOptMaskPosition(v MaskPosition) OptMaskPosition {
	return OptMaskPosition{
		Value: v,
		Set:   true,
	}
}

// OptMaskPosition is optional MaskPosition.
type OptMaskPosition struct {
	Value MaskPosition
	Set   bool
}

// IsSet returns true if OptMaskPosition was set.
func (o OptMaskPosition) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMaskPosition) Reset() {
	var v MaskPosition
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMaskPosition) SetTo(v MaskPosition) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMaskPosition) Get() (v MaskPosition, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptMessage returns new OptMessage with value set to v.
func NewOptMessage(v Message) OptMessage {
	return OptMessage{
		Value: v,
		Set:   true,
	}
}

// OptMessage is optional Message.
type OptMessage struct {
	Value Message
	Set   bool
}

// IsSet returns true if OptMessage was set.
func (o OptMessage) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMessage) Reset() {
	var v Message
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMessage) SetTo(v Message) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMessage) Get() (v Message, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptMessageAutoDeleteTimerChanged returns new OptMessageAutoDeleteTimerChanged with value set to v.
func NewOptMessageAutoDeleteTimerChanged(v MessageAutoDeleteTimerChanged) OptMessageAutoDeleteTimerChanged {
	return OptMessageAutoDeleteTimerChanged{
		Value: v,
		Set:   true,
	}
}

// OptMessageAutoDeleteTimerChanged is optional MessageAutoDeleteTimerChanged.
type OptMessageAutoDeleteTimerChanged struct {
	Value MessageAutoDeleteTimerChanged
	Set   bool
}

// IsSet returns true if OptMessageAutoDeleteTimerChanged was set.
func (o OptMessageAutoDeleteTimerChanged) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMessageAutoDeleteTimerChanged) Reset() {
	var v MessageAutoDeleteTimerChanged
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMessageAutoDeleteTimerChanged) SetTo(v MessageAutoDeleteTimerChanged) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMessageAutoDeleteTimerChanged) Get() (v MessageAutoDeleteTimerChanged, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptOrderInfo returns new OptOrderInfo with value set to v.
func NewOptOrderInfo(v OrderInfo) OptOrderInfo {
	return OptOrderInfo{
		Value: v,
		Set:   true,
	}
}

// OptOrderInfo is optional OrderInfo.
type OptOrderInfo struct {
	Value OrderInfo
	Set   bool
}

// IsSet returns true if OptOrderInfo was set.
func (o OptOrderInfo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOrderInfo) Reset() {
	var v OrderInfo
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOrderInfo) SetTo(v OrderInfo) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOrderInfo) Get() (v OrderInfo, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPassportData returns new OptPassportData with value set to v.
func NewOptPassportData(v PassportData) OptPassportData {
	return OptPassportData{
		Value: v,
		Set:   true,
	}
}

// OptPassportData is optional PassportData.
type OptPassportData struct {
	Value PassportData
	Set   bool
}

// IsSet returns true if OptPassportData was set.
func (o OptPassportData) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPassportData) Reset() {
	var v PassportData
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPassportData) SetTo(v PassportData) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPassportData) Get() (v PassportData, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPassportFile returns new OptPassportFile with value set to v.
func NewOptPassportFile(v PassportFile) OptPassportFile {
	return OptPassportFile{
		Value: v,
		Set:   true,
	}
}

// OptPassportFile is optional PassportFile.
type OptPassportFile struct {
	Value PassportFile
	Set   bool
}

// IsSet returns true if OptPassportFile was set.
func (o OptPassportFile) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPassportFile) Reset() {
	var v PassportFile
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPassportFile) SetTo(v PassportFile) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPassportFile) Get() (v PassportFile, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPhotoSize returns new OptPhotoSize with value set to v.
func NewOptPhotoSize(v PhotoSize) OptPhotoSize {
	return OptPhotoSize{
		Value: v,
		Set:   true,
	}
}

// OptPhotoSize is optional PhotoSize.
type OptPhotoSize struct {
	Value PhotoSize
	Set   bool
}

// IsSet returns true if OptPhotoSize was set.
func (o OptPhotoSize) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhotoSize) Reset() {
	var v PhotoSize
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhotoSize) SetTo(v PhotoSize) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhotoSize) Get() (v PhotoSize, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptPoll returns new OptPoll with value set to v.
func NewOptPoll(v Poll) OptPoll {
	return OptPoll{
		Value: v,
		Set:   true,
	}
}

// OptPoll is optional Poll.
type OptPoll struct {
	Value Poll
	Set   bool
}

// IsSet returns true if OptPoll was set.
func (o OptPoll) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPoll) Reset() {
	var v Poll
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPoll) SetTo(v Poll) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPoll) Get() (v Poll, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptProximityAlertTriggered returns new OptProximityAlertTriggered with value set to v.
func NewOptProximityAlertTriggered(v ProximityAlertTriggered) OptProximityAlertTriggered {
	return OptProximityAlertTriggered{
		Value: v,
		Set:   true,
	}
}

// OptProximityAlertTriggered is optional ProximityAlertTriggered.
type OptProximityAlertTriggered struct {
	Value ProximityAlertTriggered
	Set   bool
}

// IsSet returns true if OptProximityAlertTriggered was set.
func (o OptProximityAlertTriggered) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptProximityAlertTriggered) Reset() {
	var v ProximityAlertTriggered
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptProximityAlertTriggered) SetTo(v ProximityAlertTriggered) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptProximityAlertTriggered) Get() (v ProximityAlertTriggered, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptResponse returns new OptResponse with value set to v.
func NewOptResponse(v Response) OptResponse {
	return OptResponse{
		Value: v,
		Set:   true,
	}
}

// OptResponse is optional Response.
type OptResponse struct {
	Value Response
	Set   bool
}

// IsSet returns true if OptResponse was set.
func (o OptResponse) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptResponse) Reset() {
	var v Response
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptResponse) SetTo(v Response) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptResponse) Get() (v Response, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptShippingAddress returns new OptShippingAddress with value set to v.
func NewOptShippingAddress(v ShippingAddress) OptShippingAddress {
	return OptShippingAddress{
		Value: v,
		Set:   true,
	}
}

// OptShippingAddress is optional ShippingAddress.
type OptShippingAddress struct {
	Value ShippingAddress
	Set   bool
}

// IsSet returns true if OptShippingAddress was set.
func (o OptShippingAddress) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptShippingAddress) Reset() {
	var v ShippingAddress
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptShippingAddress) SetTo(v ShippingAddress) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptShippingAddress) Get() (v ShippingAddress, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptSticker returns new OptSticker with value set to v.
func NewOptSticker(v Sticker) OptSticker {
	return OptSticker{
		Value: v,
		Set:   true,
	}
}

// OptSticker is optional Sticker.
type OptSticker struct {
	Value Sticker
	Set   bool
}

// IsSet returns true if OptSticker was set.
func (o OptSticker) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSticker) Reset() {
	var v Sticker
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSticker) SetTo(v Sticker) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSticker) Get() (v Sticker, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptSuccessfulPayment returns new OptSuccessfulPayment with value set to v.
func NewOptSuccessfulPayment(v SuccessfulPayment) OptSuccessfulPayment {
	return OptSuccessfulPayment{
		Value: v,
		Set:   true,
	}
}

// OptSuccessfulPayment is optional SuccessfulPayment.
type OptSuccessfulPayment struct {
	Value SuccessfulPayment
	Set   bool
}

// IsSet returns true if OptSuccessfulPayment was set.
func (o OptSuccessfulPayment) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSuccessfulPayment) Reset() {
	var v SuccessfulPayment
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSuccessfulPayment) SetTo(v SuccessfulPayment) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSuccessfulPayment) Get() (v SuccessfulPayment, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptURL returns new OptURL with value set to v.
func NewOptURL(v url.URL) OptURL {
	return OptURL{
		Value: v,
		Set:   true,
	}
}

// OptURL is optional url.URL.
type OptURL struct {
	Value url.URL
	Set   bool
}

// IsSet returns true if OptURL was set.
func (o OptURL) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptURL) Reset() {
	var v url.URL
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptURL) SetTo(v url.URL) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptURL) Get() (v url.URL, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptUser returns new OptUser with value set to v.
func NewOptUser(v User) OptUser {
	return OptUser{
		Value: v,
		Set:   true,
	}
}

// OptUser is optional User.
type OptUser struct {
	Value User
	Set   bool
}

// IsSet returns true if OptUser was set.
func (o OptUser) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUser) Reset() {
	var v User
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUser) SetTo(v User) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUser) Get() (v User, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptVenue returns new OptVenue with value set to v.
func NewOptVenue(v Venue) OptVenue {
	return OptVenue{
		Value: v,
		Set:   true,
	}
}

// OptVenue is optional Venue.
type OptVenue struct {
	Value Venue
	Set   bool
}

// IsSet returns true if OptVenue was set.
func (o OptVenue) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptVenue) Reset() {
	var v Venue
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptVenue) SetTo(v Venue) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptVenue) Get() (v Venue, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptVideo returns new OptVideo with value set to v.
func NewOptVideo(v Video) OptVideo {
	return OptVideo{
		Value: v,
		Set:   true,
	}
}

// OptVideo is optional Video.
type OptVideo struct {
	Value Video
	Set   bool
}

// IsSet returns true if OptVideo was set.
func (o OptVideo) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptVideo) Reset() {
	var v Video
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptVideo) SetTo(v Video) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptVideo) Get() (v Video, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptVideoNote returns new OptVideoNote with value set to v.
func NewOptVideoNote(v VideoNote) OptVideoNote {
	return OptVideoNote{
		Value: v,
		Set:   true,
	}
}

// OptVideoNote is optional VideoNote.
type OptVideoNote struct {
	Value VideoNote
	Set   bool
}

// IsSet returns true if OptVideoNote was set.
func (o OptVideoNote) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptVideoNote) Reset() {
	var v VideoNote
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptVideoNote) SetTo(v VideoNote) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptVideoNote) Get() (v VideoNote, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptVoice returns new OptVoice with value set to v.
func NewOptVoice(v Voice) OptVoice {
	return OptVoice{
		Value: v,
		Set:   true,
	}
}

// OptVoice is optional Voice.
type OptVoice struct {
	Value Voice
	Set   bool
}

// IsSet returns true if OptVoice was set.
func (o OptVoice) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptVoice) Reset() {
	var v Voice
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptVoice) SetTo(v Voice) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptVoice) Get() (v Voice, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptVoiceChatEnded returns new OptVoiceChatEnded with value set to v.
func NewOptVoiceChatEnded(v VoiceChatEnded) OptVoiceChatEnded {
	return OptVoiceChatEnded{
		Value: v,
		Set:   true,
	}
}

// OptVoiceChatEnded is optional VoiceChatEnded.
type OptVoiceChatEnded struct {
	Value VoiceChatEnded
	Set   bool
}

// IsSet returns true if OptVoiceChatEnded was set.
func (o OptVoiceChatEnded) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptVoiceChatEnded) Reset() {
	var v VoiceChatEnded
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptVoiceChatEnded) SetTo(v VoiceChatEnded) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptVoiceChatEnded) Get() (v VoiceChatEnded, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptVoiceChatParticipantsInvited returns new OptVoiceChatParticipantsInvited with value set to v.
func NewOptVoiceChatParticipantsInvited(v VoiceChatParticipantsInvited) OptVoiceChatParticipantsInvited {
	return OptVoiceChatParticipantsInvited{
		Value: v,
		Set:   true,
	}
}

// OptVoiceChatParticipantsInvited is optional VoiceChatParticipantsInvited.
type OptVoiceChatParticipantsInvited struct {
	Value VoiceChatParticipantsInvited
	Set   bool
}

// IsSet returns true if OptVoiceChatParticipantsInvited was set.
func (o OptVoiceChatParticipantsInvited) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptVoiceChatParticipantsInvited) Reset() {
	var v VoiceChatParticipantsInvited
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptVoiceChatParticipantsInvited) SetTo(v VoiceChatParticipantsInvited) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptVoiceChatParticipantsInvited) Get() (v VoiceChatParticipantsInvited, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// NewOptVoiceChatScheduled returns new OptVoiceChatScheduled with value set to v.
func NewOptVoiceChatScheduled(v VoiceChatScheduled) OptVoiceChatScheduled {
	return OptVoiceChatScheduled{
		Value: v,
		Set:   true,
	}
}

// OptVoiceChatScheduled is optional VoiceChatScheduled.
type OptVoiceChatScheduled struct {
	Value VoiceChatScheduled
	Set   bool
}

// IsSet returns true if OptVoiceChatScheduled was set.
func (o OptVoiceChatScheduled) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptVoiceChatScheduled) Reset() {
	var v VoiceChatScheduled
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptVoiceChatScheduled) SetTo(v VoiceChatScheduled) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptVoiceChatScheduled) Get() (v VoiceChatScheduled, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Ref: #/components/schemas/OrderInfo
type OrderInfo struct {
	Name            OptString          `json:"name"`
	PhoneNumber     OptString          `json:"phone_number"`
	Email           OptString          `json:"email"`
	ShippingAddress OptShippingAddress `json:"shipping_address"`
}

// Ref: #/components/schemas/PassportData
type PassportData struct {
	Data        []EncryptedPassportElement `json:"data"`
	Credentials EncryptedCredentials       `json:"credentials"`
}

// Ref: #/components/schemas/PassportElementError
type PassportElementError struct{}

// Ref: #/components/schemas/PassportFile
type PassportFile struct {
	FileID       string `json:"file_id"`
	FileUniqueID string `json:"file_unique_id"`
	FileSize     int    `json:"file_size"`
	FileDate     int    `json:"file_date"`
}

// Ref: #/components/schemas/PhotoSize
type PhotoSize struct {
	FileID       string `json:"file_id"`
	FileUniqueID string `json:"file_unique_id"`
	Width        int    `json:"width"`
	Height       int    `json:"height"`
	FileSize     OptInt `json:"file_size"`
}

// Ref: #/components/schemas/pinChatMessage
type PinChatMessage struct {
	ChatID              ID      `json:"chat_id"`
	MessageID           int     `json:"message_id"`
	DisableNotification OptBool `json:"disable_notification"`
}

// Ref: #/components/schemas/Poll
type Poll struct {
	ID                    string          `json:"id"`
	Question              string          `json:"question"`
	Options               []PollOption    `json:"options"`
	TotalVoterCount       int             `json:"total_voter_count"`
	IsClosed              bool            `json:"is_closed"`
	IsAnonymous           bool            `json:"is_anonymous"`
	Type                  string          `json:"type"`
	AllowsMultipleAnswers bool            `json:"allows_multiple_answers"`
	CorrectOptionID       OptInt          `json:"correct_option_id"`
	Explanation           OptString       `json:"explanation"`
	ExplanationEntities   []MessageEntity `json:"explanation_entities"`
	OpenPeriod            OptInt          `json:"open_period"`
	CloseDate             OptInt          `json:"close_date"`
}

// Ref: #/components/schemas/PollOption
type PollOption struct {
	Text       string `json:"text"`
	VoterCount int    `json:"voter_count"`
}

// Ref: #/components/schemas/promoteChatMember
type PromoteChatMember struct {
	ChatID              ID      `json:"chat_id"`
	UserID              int     `json:"user_id"`
	IsAnonymous         OptBool `json:"is_anonymous"`
	CanManageChat       OptBool `json:"can_manage_chat"`
	CanPostMessages     OptBool `json:"can_post_messages"`
	CanEditMessages     OptBool `json:"can_edit_messages"`
	CanDeleteMessages   OptBool `json:"can_delete_messages"`
	CanManageVoiceChats OptBool `json:"can_manage_voice_chats"`
	CanRestrictMembers  OptBool `json:"can_restrict_members"`
	CanPromoteMembers   OptBool `json:"can_promote_members"`
	CanChangeInfo       OptBool `json:"can_change_info"`
	CanInviteUsers      OptBool `json:"can_invite_users"`
	CanPinMessages      OptBool `json:"can_pin_messages"`
}

// Ref: #/components/schemas/ProximityAlertTriggered
type ProximityAlertTriggered struct {
	Traveler User `json:"traveler"`
	Watcher  User `json:"watcher"`
	Distance int  `json:"distance"`
}

// Ref: #/components/schemas/Response
type Response struct {
	MigrateToChatID OptInt64 `json:"migrate_to_chat_id"`
	RetryAfter      OptInt   `json:"retry_after"`
}

// Ref: #/components/schemas/restrictChatMember
type RestrictChatMember struct {
	ChatID      ID              `json:"chat_id"`
	UserID      int             `json:"user_id"`
	Permissions ChatPermissions `json:"permissions"`
	UntilDate   OptInt          `json:"until_date"`
}

// Ref: #/components/schemas/Result
type Result struct {
	Ok     bool    `json:"ok"`
	Result OptBool `json:"result"`
}

func (*Result) addStickerToSetRes()                 {}
func (*Result) answerCallbackQueryRes()             {}
func (*Result) answerInlineQueryRes()               {}
func (*Result) answerPreCheckoutQueryRes()          {}
func (*Result) answerShippingQueryRes()             {}
func (*Result) banChatMemberRes()                   {}
func (*Result) copyMessageRes()                     {}
func (*Result) createChatInviteLinkRes()            {}
func (*Result) createNewStickerSetRes()             {}
func (*Result) deleteChatPhotoRes()                 {}
func (*Result) deleteChatStickerSetRes()            {}
func (*Result) deleteMessageRes()                   {}
func (*Result) deleteMyCommandsRes()                {}
func (*Result) deleteStickerFromSetRes()            {}
func (*Result) deleteWebhookRes()                   {}
func (*Result) editChatInviteLinkRes()              {}
func (*Result) editMessageCaptionRes()              {}
func (*Result) editMessageLiveLocationRes()         {}
func (*Result) editMessageMediaRes()                {}
func (*Result) editMessageReplyMarkupRes()          {}
func (*Result) editMessageTextRes()                 {}
func (*Result) exportChatInviteLinkRes()            {}
func (*Result) getChatAdministratorsRes()           {}
func (*Result) getChatMemberCountRes()              {}
func (*Result) getChatMemberRes()                   {}
func (*Result) getChatRes()                         {}
func (*Result) getFileRes()                         {}
func (*Result) getGameHighScoresRes()               {}
func (*Result) getMyCommandsRes()                   {}
func (*Result) getStickerSetRes()                   {}
func (*Result) getUpdatesRes()                      {}
func (*Result) getUserProfilePhotosRes()            {}
func (*Result) leaveChatRes()                       {}
func (*Result) pinChatMessageRes()                  {}
func (*Result) promoteChatMemberRes()               {}
func (*Result) restrictChatMemberRes()              {}
func (*Result) revokeChatInviteLinkRes()            {}
func (*Result) sendAudioRes()                       {}
func (*Result) sendChatActionRes()                  {}
func (*Result) sendMediaGroupRes()                  {}
func (*Result) setChatAdministratorCustomTitleRes() {}
func (*Result) setChatDescriptionRes()              {}
func (*Result) setChatPermissionsRes()              {}
func (*Result) setChatPhotoRes()                    {}
func (*Result) setChatStickerSetRes()               {}
func (*Result) setChatTitleRes()                    {}
func (*Result) setGameScoreRes()                    {}
func (*Result) setMyCommandsRes()                   {}
func (*Result) setPassportDataErrorsRes()           {}
func (*Result) setStickerPositionInSetRes()         {}
func (*Result) setStickerSetThumbRes()              {}
func (*Result) setWebhookRes()                      {}
func (*Result) stopMessageLiveLocationRes()         {}
func (*Result) stopPollRes()                        {}
func (*Result) unbanChatMemberRes()                 {}
func (*Result) unpinAllChatMessagesRes()            {}
func (*Result) unpinChatMessageRes()                {}
func (*Result) uploadStickerFileRes()               {}

// Ref: #/components/schemas/ResultMsg
type ResultMsg struct {
	Ok     bool       `json:"ok"`
	Result OptMessage `json:"result"`
}

func (*ResultMsg) forwardMessageRes() {}
func (*ResultMsg) sendAnimationRes()  {}
func (*ResultMsg) sendContactRes()    {}
func (*ResultMsg) sendDiceRes()       {}
func (*ResultMsg) sendDocumentRes()   {}
func (*ResultMsg) sendGameRes()       {}
func (*ResultMsg) sendInvoiceRes()    {}
func (*ResultMsg) sendLocationRes()   {}
func (*ResultMsg) sendMessageRes()    {}
func (*ResultMsg) sendPhotoRes()      {}
func (*ResultMsg) sendPollRes()       {}
func (*ResultMsg) sendStickerRes()    {}
func (*ResultMsg) sendVenueRes()      {}
func (*ResultMsg) sendVideoNoteRes()  {}
func (*ResultMsg) sendVideoRes()      {}
func (*ResultMsg) sendVoiceRes()      {}

// Ref: #/components/schemas/ResultUsr
type ResultUsr struct {
	Ok     bool    `json:"ok"`
	Result OptUser `json:"result"`
}

func (*ResultUsr) getMeRes() {}

// Ref: #/components/schemas/revokeChatInviteLink
type RevokeChatInviteLink struct {
	ChatID     ID     `json:"chat_id"`
	InviteLink string `json:"invite_link"`
}

// Ref: #/components/schemas/sendAnimation
type SendAnimation struct {
	ChatID                   ID              `json:"chat_id"`
	Animation                string          `json:"animation"`
	Duration                 OptInt          `json:"duration"`
	Width                    OptInt          `json:"width"`
	Height                   OptInt          `json:"height"`
	Thumb                    OptString       `json:"thumb"`
	Caption                  OptString       `json:"caption"`
	ParseMode                OptString       `json:"parse_mode"`
	CaptionEntities          []MessageEntity `json:"caption_entities"`
	DisableNotification      OptBool         `json:"disable_notification"`
	ReplyToMessageID         OptInt          `json:"reply_to_message_id"`
	AllowSendingWithoutReply OptBool         `json:"allow_sending_without_reply"`
}

// Ref: #/components/schemas/sendAudio
type SendAudio struct {
	ChatID                   ID              `json:"chat_id"`
	Audio                    string          `json:"audio"`
	Caption                  OptString       `json:"caption"`
	ParseMode                OptString       `json:"parse_mode"`
	CaptionEntities          []MessageEntity `json:"caption_entities"`
	Duration                 OptInt          `json:"duration"`
	Performer                OptString       `json:"performer"`
	Title                    OptString       `json:"title"`
	Thumb                    OptString       `json:"thumb"`
	DisableNotification      OptBool         `json:"disable_notification"`
	ReplyToMessageID         OptInt          `json:"reply_to_message_id"`
	AllowSendingWithoutReply OptBool         `json:"allow_sending_without_reply"`
}

// Ref: #/components/schemas/sendChatAction
type SendChatAction struct {
	ChatID ID     `json:"chat_id"`
	Action string `json:"action"`
}

// Ref: #/components/schemas/sendContact
type SendContact struct {
	ChatID                   ID        `json:"chat_id"`
	PhoneNumber              string    `json:"phone_number"`
	FirstName                string    `json:"first_name"`
	LastName                 OptString `json:"last_name"`
	Vcard                    OptString `json:"vcard"`
	DisableNotification      OptBool   `json:"disable_notification"`
	ReplyToMessageID         OptInt    `json:"reply_to_message_id"`
	AllowSendingWithoutReply OptBool   `json:"allow_sending_without_reply"`
}

// Ref: #/components/schemas/sendDice
type SendDice struct {
	ChatID                   ID        `json:"chat_id"`
	Emoji                    OptString `json:"emoji"`
	DisableNotification      OptBool   `json:"disable_notification"`
	ReplyToMessageID         OptInt    `json:"reply_to_message_id"`
	AllowSendingWithoutReply OptBool   `json:"allow_sending_without_reply"`
}

// Ref: #/components/schemas/sendDocument
type SendDocument struct {
	ChatID                      ID              `json:"chat_id"`
	Document                    string          `json:"document"`
	Thumb                       OptString       `json:"thumb"`
	Caption                     OptString       `json:"caption"`
	ParseMode                   OptString       `json:"parse_mode"`
	CaptionEntities             []MessageEntity `json:"caption_entities"`
	DisableContentTypeDetection OptBool         `json:"disable_content_type_detection"`
	DisableNotification         OptBool         `json:"disable_notification"`
	ReplyToMessageID            OptInt          `json:"reply_to_message_id"`
	AllowSendingWithoutReply    OptBool         `json:"allow_sending_without_reply"`
}

// Ref: #/components/schemas/sendGame
type SendGame struct {
	ChatID                   int                     `json:"chat_id"`
	GameShortName            string                  `json:"game_short_name"`
	DisableNotification      OptBool                 `json:"disable_notification"`
	ReplyToMessageID         OptInt                  `json:"reply_to_message_id"`
	AllowSendingWithoutReply OptBool                 `json:"allow_sending_without_reply"`
	ReplyMarkup              OptInlineKeyboardMarkup `json:"reply_markup"`
}

// Ref: #/components/schemas/sendInvoice
type SendInvoice struct {
	ChatID                    ID                      `json:"chat_id"`
	Title                     string                  `json:"title"`
	Description               string                  `json:"description"`
	Payload                   string                  `json:"payload"`
	ProviderToken             string                  `json:"provider_token"`
	Currency                  string                  `json:"currency"`
	Prices                    []LabeledPrice          `json:"prices"`
	MaxTipAmount              OptInt                  `json:"max_tip_amount"`
	SuggestedTipAmounts       []int                   `json:"suggested_tip_amounts"`
	StartParameter            OptString               `json:"start_parameter"`
	ProviderData              OptString               `json:"provider_data"`
	PhotoURL                  OptURL                  `json:"photo_url"`
	PhotoSize                 OptInt                  `json:"photo_size"`
	PhotoWidth                OptInt                  `json:"photo_width"`
	PhotoHeight               OptInt                  `json:"photo_height"`
	NeedName                  OptBool                 `json:"need_name"`
	NeedPhoneNumber           OptBool                 `json:"need_phone_number"`
	NeedEmail                 OptBool                 `json:"need_email"`
	NeedShippingAddress       OptBool                 `json:"need_shipping_address"`
	SendPhoneNumberToProvider OptBool                 `json:"send_phone_number_to_provider"`
	SendEmailToProvider       OptBool                 `json:"send_email_to_provider"`
	IsFlexible                OptBool                 `json:"is_flexible"`
	DisableNotification       OptBool                 `json:"disable_notification"`
	ReplyToMessageID          OptInt                  `json:"reply_to_message_id"`
	AllowSendingWithoutReply  OptBool                 `json:"allow_sending_without_reply"`
	ReplyMarkup               OptInlineKeyboardMarkup `json:"reply_markup"`
}

// Ref: #/components/schemas/sendLocation
type SendLocation struct {
	ChatID                   ID         `json:"chat_id"`
	Latitude                 float64    `json:"latitude"`
	Longitude                float64    `json:"longitude"`
	HorizontalAccuracy       OptFloat64 `json:"horizontal_accuracy"`
	LivePeriod               OptInt     `json:"live_period"`
	Heading                  OptInt     `json:"heading"`
	ProximityAlertRadius     OptInt     `json:"proximity_alert_radius"`
	DisableNotification      OptBool    `json:"disable_notification"`
	ReplyToMessageID         OptInt     `json:"reply_to_message_id"`
	AllowSendingWithoutReply OptBool    `json:"allow_sending_without_reply"`
}

// Ref: #/components/schemas/sendMediaGroup
type SendMediaGroup struct {
	ChatID                   ID       `json:"chat_id"`
	Media                    []string `json:"media"`
	DisableNotification      OptBool  `json:"disable_notification"`
	ReplyToMessageID         OptInt   `json:"reply_to_message_id"`
	AllowSendingWithoutReply OptBool  `json:"allow_sending_without_reply"`
}

// Ref: #/components/schemas/sendMessage
type SendMessage struct {
	ChatID                   ID              `json:"chat_id"`
	Text                     string          `json:"text"`
	ParseMode                OptString       `json:"parse_mode"`
	Entities                 []MessageEntity `json:"entities"`
	DisableWebPagePreview    OptBool         `json:"disable_web_page_preview"`
	DisableNotification      OptBool         `json:"disable_notification"`
	ReplyToMessageID         OptInt          `json:"reply_to_message_id"`
	AllowSendingWithoutReply OptBool         `json:"allow_sending_without_reply"`
}

// Ref: #/components/schemas/sendPhoto
type SendPhoto struct {
	ChatID                   ID              `json:"chat_id"`
	Photo                    string          `json:"photo"`
	Caption                  OptString       `json:"caption"`
	ParseMode                OptString       `json:"parse_mode"`
	CaptionEntities          []MessageEntity `json:"caption_entities"`
	DisableNotification      OptBool         `json:"disable_notification"`
	ReplyToMessageID         OptInt          `json:"reply_to_message_id"`
	AllowSendingWithoutReply OptBool         `json:"allow_sending_without_reply"`
}

// Ref: #/components/schemas/sendPoll
type SendPoll struct {
	ChatID                   ID              `json:"chat_id"`
	Question                 string          `json:"question"`
	Options                  []string        `json:"options"`
	IsAnonymous              OptBool         `json:"is_anonymous"`
	Type                     OptString       `json:"type"`
	AllowsMultipleAnswers    OptBool         `json:"allows_multiple_answers"`
	CorrectOptionID          OptInt          `json:"correct_option_id"`
	Explanation              OptString       `json:"explanation"`
	ExplanationParseMode     OptString       `json:"explanation_parse_mode"`
	ExplanationEntities      []MessageEntity `json:"explanation_entities"`
	OpenPeriod               OptInt          `json:"open_period"`
	CloseDate                OptInt          `json:"close_date"`
	IsClosed                 OptBool         `json:"is_closed"`
	DisableNotification      OptBool         `json:"disable_notification"`
	ReplyToMessageID         OptInt          `json:"reply_to_message_id"`
	AllowSendingWithoutReply OptBool         `json:"allow_sending_without_reply"`
}

// Ref: #/components/schemas/sendSticker
type SendSticker struct {
	ChatID                   ID      `json:"chat_id"`
	Sticker                  string  `json:"sticker"`
	DisableNotification      OptBool `json:"disable_notification"`
	ReplyToMessageID         OptInt  `json:"reply_to_message_id"`
	AllowSendingWithoutReply OptBool `json:"allow_sending_without_reply"`
}

// Ref: #/components/schemas/sendVenue
type SendVenue struct {
	ChatID                   ID        `json:"chat_id"`
	Latitude                 float64   `json:"latitude"`
	Longitude                float64   `json:"longitude"`
	Title                    string    `json:"title"`
	Address                  string    `json:"address"`
	FoursquareID             OptString `json:"foursquare_id"`
	FoursquareType           OptString `json:"foursquare_type"`
	GooglePlaceID            OptString `json:"google_place_id"`
	GooglePlaceType          OptString `json:"google_place_type"`
	DisableNotification      OptBool   `json:"disable_notification"`
	ReplyToMessageID         OptInt    `json:"reply_to_message_id"`
	AllowSendingWithoutReply OptBool   `json:"allow_sending_without_reply"`
}

// Ref: #/components/schemas/sendVideo
type SendVideo struct {
	ChatID                   ID              `json:"chat_id"`
	Video                    string          `json:"video"`
	Duration                 OptInt          `json:"duration"`
	Width                    OptInt          `json:"width"`
	Height                   OptInt          `json:"height"`
	Thumb                    OptString       `json:"thumb"`
	Caption                  OptString       `json:"caption"`
	ParseMode                OptString       `json:"parse_mode"`
	CaptionEntities          []MessageEntity `json:"caption_entities"`
	SupportsStreaming        OptBool         `json:"supports_streaming"`
	DisableNotification      OptBool         `json:"disable_notification"`
	ReplyToMessageID         OptInt          `json:"reply_to_message_id"`
	AllowSendingWithoutReply OptBool         `json:"allow_sending_without_reply"`
}

// Ref: #/components/schemas/sendVideoNote
type SendVideoNote struct {
	ChatID                   ID        `json:"chat_id"`
	VideoNote                string    `json:"video_note"`
	Duration                 OptInt    `json:"duration"`
	Length                   OptInt    `json:"length"`
	Thumb                    OptString `json:"thumb"`
	DisableNotification      OptBool   `json:"disable_notification"`
	ReplyToMessageID         OptInt    `json:"reply_to_message_id"`
	AllowSendingWithoutReply OptBool   `json:"allow_sending_without_reply"`
}

// Ref: #/components/schemas/sendVoice
type SendVoice struct {
	ChatID                   ID              `json:"chat_id"`
	Voice                    string          `json:"voice"`
	Caption                  OptString       `json:"caption"`
	ParseMode                OptString       `json:"parse_mode"`
	CaptionEntities          []MessageEntity `json:"caption_entities"`
	Duration                 OptInt          `json:"duration"`
	DisableNotification      OptBool         `json:"disable_notification"`
	ReplyToMessageID         OptInt          `json:"reply_to_message_id"`
	AllowSendingWithoutReply OptBool         `json:"allow_sending_without_reply"`
}

// Ref: #/components/schemas/setChatAdministratorCustomTitle
type SetChatAdministratorCustomTitle struct {
	ChatID      ID     `json:"chat_id"`
	UserID      int    `json:"user_id"`
	CustomTitle string `json:"custom_title"`
}

// Ref: #/components/schemas/setChatDescription
type SetChatDescription struct {
	ChatID      ID        `json:"chat_id"`
	Description OptString `json:"description"`
}

// Ref: #/components/schemas/setChatPermissions
type SetChatPermissions struct {
	ChatID      ID              `json:"chat_id"`
	Permissions ChatPermissions `json:"permissions"`
}

// Ref: #/components/schemas/setChatPhoto
type SetChatPhoto struct {
	ChatID ID     `json:"chat_id"`
	Photo  string `json:"photo"`
}

// Ref: #/components/schemas/setChatStickerSet
type SetChatStickerSet struct {
	ChatID         ID     `json:"chat_id"`
	StickerSetName string `json:"sticker_set_name"`
}

// Ref: #/components/schemas/setChatTitle
type SetChatTitle struct {
	ChatID ID     `json:"chat_id"`
	Title  string `json:"title"`
}

// Ref: #/components/schemas/setGameScore
type SetGameScore struct {
	UserID             int       `json:"user_id"`
	Score              int       `json:"score"`
	Force              OptBool   `json:"force"`
	DisableEditMessage OptBool   `json:"disable_edit_message"`
	ChatID             OptInt    `json:"chat_id"`
	MessageID          OptInt    `json:"message_id"`
	InlineMessageID    OptString `json:"inline_message_id"`
}

// Ref: #/components/schemas/setMyCommands
type SetMyCommands struct {
	Commands     []BotCommand     `json:"commands"`
	Scope        *BotCommandScope `json:"scope"`
	LanguageCode OptString        `json:"language_code"`
}

// Ref: #/components/schemas/setPassportDataErrors
type SetPassportDataErrors struct {
	UserID int                    `json:"user_id"`
	Errors []PassportElementError `json:"errors"`
}

// Ref: #/components/schemas/setStickerPositionInSet
type SetStickerPositionInSet struct {
	Sticker  string `json:"sticker"`
	Position int    `json:"position"`
}

// Ref: #/components/schemas/setStickerSetThumb
type SetStickerSetThumb struct {
	Name   string    `json:"name"`
	UserID int       `json:"user_id"`
	Thumb  OptString `json:"thumb"`
}

// Ref: #/components/schemas/setWebhook
type SetWebhook struct {
	URL                url.URL   `json:"url"`
	Certificate        OptString `json:"certificate"`
	IPAddress          OptString `json:"ip_address"`
	MaxConnections     OptInt    `json:"max_connections"`
	AllowedUpdates     []string  `json:"allowed_updates"`
	DropPendingUpdates OptBool   `json:"drop_pending_updates"`
}

// Ref: #/components/schemas/ShippingAddress
type ShippingAddress struct {
	CountryCode string `json:"country_code"`
	State       string `json:"state"`
	City        string `json:"city"`
	StreetLine1 string `json:"street_line1"`
	StreetLine2 string `json:"street_line2"`
	PostCode    string `json:"post_code"`
}

// Ref: #/components/schemas/ShippingOption
type ShippingOption struct {
	ID     string         `json:"id"`
	Title  string         `json:"title"`
	Prices []LabeledPrice `json:"prices"`
}

// Ref: #/components/schemas/Sticker
type Sticker struct {
	FileID       string          `json:"file_id"`
	FileUniqueID string          `json:"file_unique_id"`
	Width        int             `json:"width"`
	Height       int             `json:"height"`
	IsAnimated   bool            `json:"is_animated"`
	Thumb        OptPhotoSize    `json:"thumb"`
	Emoji        OptString       `json:"emoji"`
	SetName      OptString       `json:"set_name"`
	MaskPosition OptMaskPosition `json:"mask_position"`
	FileSize     OptInt          `json:"file_size"`
}

// Ref: #/components/schemas/stopMessageLiveLocation
type StopMessageLiveLocation struct {
	ChatID          *ID                     `json:"chat_id"`
	MessageID       OptInt                  `json:"message_id"`
	InlineMessageID OptString               `json:"inline_message_id"`
	ReplyMarkup     OptInlineKeyboardMarkup `json:"reply_markup"`
}

// Ref: #/components/schemas/stopPoll
type StopPoll struct {
	ChatID      ID                      `json:"chat_id"`
	MessageID   int                     `json:"message_id"`
	ReplyMarkup OptInlineKeyboardMarkup `json:"reply_markup"`
}

// Ref: #/components/schemas/SuccessfulPayment
type SuccessfulPayment struct {
	Currency                string       `json:"currency"`
	TotalAmount             int          `json:"total_amount"`
	InvoicePayload          string       `json:"invoice_payload"`
	ShippingOptionID        OptString    `json:"shipping_option_id"`
	OrderInfo               OptOrderInfo `json:"order_info"`
	TelegramPaymentChargeID string       `json:"telegram_payment_charge_id"`
	ProviderPaymentChargeID string       `json:"provider_payment_charge_id"`
}

// Ref: #/components/schemas/unbanChatMember
type UnbanChatMember struct {
	ChatID       ID      `json:"chat_id"`
	UserID       int     `json:"user_id"`
	OnlyIfBanned OptBool `json:"only_if_banned"`
}

// Ref: #/components/schemas/unpinAllChatMessages
type UnpinAllChatMessages struct {
	ChatID ID `json:"chat_id"`
}

// Ref: #/components/schemas/unpinChatMessage
type UnpinChatMessage struct {
	ChatID    ID     `json:"chat_id"`
	MessageID OptInt `json:"message_id"`
}

// Ref: #/components/schemas/uploadStickerFile
type UploadStickerFile struct {
	UserID     int    `json:"user_id"`
	PNGSticker string `json:"png_sticker"`
}

// Ref: #/components/schemas/User
type User struct {
	ID                      int       `json:"id"`
	IsBot                   bool      `json:"is_bot"`
	FirstName               string    `json:"first_name"`
	LastName                OptString `json:"last_name"`
	Username                OptString `json:"username"`
	LanguageCode            OptString `json:"language_code"`
	CanJoinGroups           OptBool   `json:"can_join_groups"`
	CanReadAllGroupMessages OptBool   `json:"can_read_all_group_messages"`
	SupportsInlineQueries   OptBool   `json:"supports_inline_queries"`
}

// Ref: #/components/schemas/Venue
type Venue struct {
	Location        Location  `json:"location"`
	Title           string    `json:"title"`
	Address         string    `json:"address"`
	FoursquareID    OptString `json:"foursquare_id"`
	FoursquareType  OptString `json:"foursquare_type"`
	GooglePlaceID   OptString `json:"google_place_id"`
	GooglePlaceType OptString `json:"google_place_type"`
}

// Ref: #/components/schemas/Video
type Video struct {
	FileID       string       `json:"file_id"`
	FileUniqueID string       `json:"file_unique_id"`
	Width        int          `json:"width"`
	Height       int          `json:"height"`
	Duration     int          `json:"duration"`
	Thumb        OptPhotoSize `json:"thumb"`
	FileName     OptString    `json:"file_name"`
	MimeType     OptString    `json:"mime_type"`
	FileSize     OptInt       `json:"file_size"`
}

// Ref: #/components/schemas/VideoNote
type VideoNote struct {
	FileID       string       `json:"file_id"`
	FileUniqueID string       `json:"file_unique_id"`
	Length       int          `json:"length"`
	Duration     int          `json:"duration"`
	Thumb        OptPhotoSize `json:"thumb"`
	FileSize     OptInt       `json:"file_size"`
}

// Ref: #/components/schemas/Voice
type Voice struct {
	FileID       string    `json:"file_id"`
	FileUniqueID string    `json:"file_unique_id"`
	Duration     int       `json:"duration"`
	MimeType     OptString `json:"mime_type"`
	FileSize     OptInt    `json:"file_size"`
}

// Ref: #/components/schemas/VoiceChatEnded
type VoiceChatEnded struct {
	Duration int `json:"duration"`
}

// Ref: #/components/schemas/VoiceChatParticipantsInvited
type VoiceChatParticipantsInvited struct {
	Users []User `json:"users"`
}

// Ref: #/components/schemas/VoiceChatScheduled
type VoiceChatScheduled struct {
	StartDate int `json:"start_date"`
}

// Ref: #/components/schemas/VoiceChatStarted
type VoiceChatStarted struct{}
